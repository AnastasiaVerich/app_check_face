"use strict";(self.webpackChunkapp_check_face=self.webpackChunkapp_check_face||[]).push([[832],{832:(e,t,n)=>{var r="/index.js";n.d(t,{B0:()=>u0,L0:()=>zJ,Lz:()=>I0,R:()=>k0,ex:()=>r0});var a=Object.defineProperty,s=n(291),i=(e,t)=>{for(var n in t)a(e,n,{get:t[n],enumerable:!0})};i({},{Abs:()=>Ve,Acos:()=>Ue,Acosh:()=>Ge,AdadeltaOptimizer:()=>Ac,AdagradOptimizer:()=>Rc,AdamOptimizer:()=>Fc,AdamaxOptimizer:()=>Dc,Add:()=>He,AddN:()=>je,All:()=>qe,Any:()=>Ke,ArgMax:()=>Xe,ArgMin:()=>Ye,Asin:()=>Ze,Asinh:()=>Je,Atan:()=>Qe,Atan2:()=>tt,Atanh:()=>et,AvgPool:()=>nt,AvgPool3D:()=>at,AvgPool3DGrad:()=>st,AvgPoolGrad:()=>rt,BackendWasm:()=>mZ,BatchMatMul:()=>it,BatchToSpaceND:()=>ot,Bincount:()=>lt,BitwiseAnd:()=>ut,BroadcastArgs:()=>ht,BroadcastTo:()=>dt,Callback:()=>hT,CallbackList:()=>jv,Cast:()=>pt,Ceil:()=>ct,ClipByValue:()=>ft,Complex:()=>mt,ComplexAbs:()=>gt,Concat:()=>yt,Conv2D:()=>bt,Conv2DBackpropFilter:()=>xt,Conv2DBackpropInput:()=>vt,Conv3D:()=>wt,Conv3DBackpropFilterV2:()=>kt,Conv3DBackpropInputV2:()=>It,Cos:()=>St,Cosh:()=>Nt,CropAndResize:()=>Ct,Cumprod:()=>Tt,Cumsum:()=>_t,CustomCallback:()=>Xv,DataStorage:()=>L,DenseBincount:()=>Et,DepthToSpace:()=>$t,DepthwiseConv2dNative:()=>At,DepthwiseConv2dNativeBackpropFilter:()=>Rt,DepthwiseConv2dNativeBackpropInput:()=>Ft,Diag:()=>Dt,Dilation2D:()=>Mt,Dilation2DBackpropFilter:()=>Lt,Dilation2DBackpropInput:()=>Ot,Draw:()=>zt,ENV:()=>Pe,EarlyStopping:()=>fT,Einsum:()=>Bt,Elu:()=>Wt,EluGrad:()=>Vt,Environment:()=>Me,Equal:()=>Gt,Erf:()=>Ut,Exp:()=>Ht,ExpandDims:()=>jt,Expm1:()=>qt,FFT:()=>Kt,Fill:()=>Xt,FlipLeftRight:()=>Yt,Floor:()=>Zt,FloorDiv:()=>Jt,FromPixels:()=>na,FusedBatchNorm:()=>Qt,FusedConv2D:()=>sa,FusedDepthwiseConv2D:()=>ia,GPGPUContext:()=>cz,GatherNd:()=>tn,GatherV2:()=>en,GraphModel:()=>nC,Greater:()=>nn,GreaterEqual:()=>rn,History:()=>Kv,IFFT:()=>sn,Identity:()=>an,Imag:()=>on,InputSpec:()=>Kx,IsFinite:()=>ln,IsInf:()=>un,IsNan:()=>dn,KernelBackend:()=>z,LRN:()=>In,LRNGrad:()=>Sn,LayerVariable:()=>Hx,LayersModel:()=>Yw,LeakyRelu:()=>hn,Less:()=>pn,LessEqual:()=>cn,LinSpace:()=>fn,Log:()=>mn,Log1p:()=>gn,LogSoftmax:()=>wn,LogicalAnd:()=>yn,LogicalNot:()=>bn,LogicalOr:()=>xn,LogicalXor:()=>vn,LowerBound:()=>kn,MathBackendCPU:()=>wE,MathBackendWebGL:()=>CP,MatrixBandPart:()=>Nn,Max:()=>Tn,MaxPool:()=>Cn,MaxPool3D:()=>$n,MaxPool3DGrad:()=>An,MaxPoolGrad:()=>En,MaxPoolWithArgmax:()=>Rn,Maximum:()=>_n,Mean:()=>Fn,Min:()=>Dn,Minimum:()=>Mn,MirrorPad:()=>On,Mod:()=>Ln,MomentumOptimizer:()=>Oc,Multinomial:()=>zn,Multiply:()=>Pn,Neg:()=>Bn,NonMaxSuppressionV3:()=>Vn,NonMaxSuppressionV4:()=>Un,NonMaxSuppressionV5:()=>Gn,NotEqual:()=>Wn,OP_SCOPE_SUFFIX:()=>zs,OneHot:()=>jn,OnesLike:()=>Hn,Optimizer:()=>$c,OptimizerConstructors:()=>Vf,Pack:()=>qn,PadV2:()=>Kn,Pool:()=>Xn,Pow:()=>Yn,Prelu:()=>Zn,Prod:()=>Jn,RMSPropOptimizer:()=>Lc,RNN:()=>aI,RaggedGather:()=>Qn,RaggedRange:()=>er,RaggedTensorToTensor:()=>tr,Range:()=>nr,Rank:()=>as,Real:()=>rr,RealDiv:()=>Pt,Reciprocal:()=>ar,Reduction:()=>Zp,Relu:()=>sr,Relu6:()=>hr,Reshape:()=>ir,ResizeBilinear:()=>ur,ResizeBilinearGrad:()=>dr,ResizeNearestNeighbor:()=>or,ResizeNearestNeighborGrad:()=>lr,Reverse:()=>pr,RotateWithOffset:()=>ra,Round:()=>cr,Rsqrt:()=>fr,SGDOptimizer:()=>Mc,ScatterNd:()=>mr,SearchSorted:()=>yr,Select:()=>br,Selu:()=>xr,Sequential:()=>ek,Sigmoid:()=>Sr,Sign:()=>Ir,Sin:()=>wr,Sinh:()=>kr,Slice:()=>vr,Softmax:()=>$r,Softplus:()=>Nr,SpaceToBatchND:()=>Cr,SparseFillEmptyRows:()=>Ar,SparseReshape:()=>Rr,SparseSegmentMean:()=>Fr,SparseSegmentSum:()=>Dr,SparseToDense:()=>Mr,SplitV:()=>Er,Sqrt:()=>Tr,Square:()=>Lr,SquaredDifference:()=>Or,StaticRegexReplace:()=>zr,Step:()=>ta,StridedSlice:()=>Pr,StringNGrams:()=>Br,StringSplit:()=>Wr,StringToHashBucketFast:()=>Vr,Sub:()=>Ur,Sum:()=>_r,SymbolicTensor:()=>Xx,Tan:()=>Gr,Tanh:()=>Hr,Tensor:()=>ts,TensorBuffer:()=>Ja,TensorScatterUpdate:()=>gr,Tile:()=>jr,TopK:()=>qr,Transform:()=>Kr,Transpose:()=>Xr,Unique:()=>Yr,Unpack:()=>Zr,UnsortedSegmentSum:()=>Jr,UpperBound:()=>Qr,Variable:()=>rs,ZerosLike:()=>ea,_FusedMatMul:()=>aa,abs:()=>bo,acos:()=>xo,acosh:()=>vo,add:()=>fo,addN:()=>wo,all:()=>ko,any:()=>Io,argMax:()=>So,argMin:()=>No,asin:()=>To,asinh:()=>_o,atan:()=>Co,atan2:()=>Eo,atanh:()=>$o,avgPool:()=>qo,avgPool3d:()=>Ko,backend:()=>di,backend_util:()=>qf,basicLSTMCell:()=>el,batchNorm:()=>rl,batchNorm2d:()=>al,batchNorm3d:()=>sl,batchNorm4d:()=>il,batchToSpaceND:()=>tl,bincount:()=>ol,bitwiseAnd:()=>ll,booleanMaskAsync:()=>Jh,broadcastArgs:()=>ul,broadcastTo:()=>dl,broadcast_util:()=>Dl,browser:()=>uf,buffer:()=>uo,callbacks:()=>yT,cast:()=>ho,ceil:()=>hl,clipByValue:()=>cl,clone:()=>po,complex:()=>Bs,concat:()=>Xo,concat1d:()=>fl,concat2d:()=>ml,concat3d:()=>gl,concat4d:()=>yl,constraints:()=>dv,conv1d:()=>xl,conv2d:()=>bl,conv2dTranspose:()=>wl,conv3d:()=>kl,conv3dTranspose:()=>Sl,copyRegisteredKernels:()=>ba,cos:()=>Nl,cosh:()=>Tl,cosineWindow:()=>ip,cumprod:()=>_l,cumsum:()=>Cl,customGrad:()=>Ou,data:()=>iC,denseBincount:()=>El,deprecationWarn:()=>Ks,depthToSpace:()=>$l,depthwiseConv2d:()=>Al,deregisterOp:()=>wT,device_util:()=>Cs,diag:()=>Rl,dilation2d:()=>Fl,disableDeprecationWarnings:()=>qs,dispose:()=>ei,disposeVariables:()=>Xs,div:()=>go,divNoNan:()=>Wl,dot:()=>Vl,dropout:()=>ap,einsum:()=>Ul,elu:()=>Gl,enableDebugMode:()=>js,enableProdMode:()=>Hs,enclosingPowerOfTwo:()=>sp,engine:()=>Ys,ensureShape:()=>Hl,env:()=>Le,equal:()=>zl,erf:()=>jl,euclideanNorm:()=>du,exp:()=>hu,expandDims:()=>pu,expm1:()=>cu,eye:()=>mu,fft:()=>wh,fill:()=>pl,findBackend:()=>oi,findBackendFactory:()=>li,floor:()=>gu,floorDiv:()=>mo,forceHalfFloat:()=>$P,fused:()=>lp,gather:()=>yu,gatherND:()=>rp,gather_util:()=>xf,getBackend:()=>si,getGradient:()=>pa,getKernel:()=>ha,getKernelsForBackend:()=>ca,getThreadsCount:()=>EZ,gpgpu_util:()=>GL,grad:()=>Au,grads:()=>Ru,greater:()=>bu,greaterEqual:()=>xu,ifft:()=>kh,imag:()=>vu,image:()=>bc,inTopKAsync:()=>op,initializers:()=>Nv,input:()=>rk,io:()=>Pc,irfft:()=>Ih,isFinite:()=>wu,isInf:()=>ku,isNaN:()=>Iu,keep:()=>ti,kernel_impls:()=>Qm,layers:()=>Vv,leakyRelu:()=>Su,less:()=>Nu,lessEqual:()=>Tu,linalg:()=>xc,linspace:()=>_u,loadGraphModel:()=>rC,loadGraphModelSync:()=>aC,loadLayersModel:()=>Qw,localResponseNormalization:()=>Cu,log:()=>Eu,log1p:()=>$u,logSigmoid:()=>Bu,logSoftmax:()=>Vu,logSumExp:()=>Uu,logicalAnd:()=>Gu,logicalNot:()=>Hu,logicalOr:()=>ju,logicalXor:()=>qu,losses:()=>vc,lowerBound:()=>Yu,matMul:()=>Yo,math:()=>of,max:()=>tu,maxPool:()=>Zu,maxPool3d:()=>Ju,maxPoolWithArgmax:()=>Qu,maximum:()=>ed,mean:()=>td,memory:()=>Zs,meshgrid:()=>ad,metrics:()=>UN,min:()=>nu,minimum:()=>sd,mirrorPad:()=>id,mod:()=>od,model:()=>tk,models:()=>iT,moments:()=>ld,movingAverage:()=>ep,mul:()=>yo,multiRNNCell:()=>ud,multinomial:()=>dd,neg:()=>zu,nextFrame:()=>Hf,norm:()=>uu,notEqual:()=>hd,oneHot:()=>pd,ones:()=>rd,onesLike:()=>cd,op:()=>Ps,outerProduct:()=>fd,pad:()=>md,pad1d:()=>gd,pad2d:()=>yd,pad3d:()=>bd,pad4d:()=>xd,pool:()=>wd,pow:()=>ru,prelu:()=>kd,print:()=>co,prod:()=>Id,profile:()=>Js,raggedGather:()=>Sd,raggedRange:()=>Nd,raggedTensorToTensor:()=>Td,rand:()=>_d,randomGamma:()=>qd,randomNormal:()=>Kd,randomStandardNormal:()=>Xd,randomUniform:()=>Yd,randomUniformInt:()=>Zd,range:()=>Jd,ready:()=>ai,real:()=>Qd,reciprocal:()=>eh,registerBackend:()=>ui,registerCallbackConstructor:()=>ak,registerGradient:()=>ma,registerKernel:()=>fa,registerOp:()=>xT,regularizers:()=>oT,relu:()=>th,relu6:()=>nh,removeBackend:()=>ii,reshape:()=>jo,reverse:()=>rh,reverse1d:()=>ah,reverse2d:()=>sh,reverse3d:()=>ih,reverse4d:()=>oh,rfft:()=>Nh,round:()=>lh,rsqrt:()=>uh,scalar:()=>au,scatterND:()=>tp,scatter_util:()=>zh,searchSorted:()=>Xu,selu:()=>dh,separableConv2d:()=>hh,sequential:()=>nk,serialization:()=>Ic,setBackend:()=>ri,setPlatform:()=>hi,setThreadsCount:()=>CZ,setWasmPath:()=>SZ,setWasmPaths:()=>NZ,setWebGLContext:()=>lO,setdiff1dAsync:()=>ph,shared:()=>kE,sigmoid:()=>Zo,sign:()=>ch,signal:()=>yc,sin:()=>fh,sinh:()=>mh,slice:()=>Jo,slice1d:()=>gh,slice2d:()=>yh,slice3d:()=>bh,slice4d:()=>xh,slice_util:()=>wf,softmax:()=>vh,softplus:()=>Pu,spaceToBatchND:()=>vd,sparse:()=>wc,sparseToDense:()=>np,spectral:()=>gc,split:()=>Sh,sqrt:()=>su,square:()=>iu,squaredDifference:()=>Th,squeeze:()=>_h,stack:()=>Ch,step:()=>Eh,stridedSlice:()=>$h,string:()=>kc,sub:()=>Wu,sum:()=>ou,sumOutType:()=>cs,tan:()=>Ah,tanh:()=>Qo,tensor:()=>Vs,tensor1d:()=>Rh,tensor2d:()=>Fh,tensor3d:()=>Dh,tensor4d:()=>Mh,tensor5d:()=>Oh,tensor6d:()=>Lh,tensorScatterUpdate:()=>Vh,tensor_util:()=>ds,test_util:()=>Ed,tidy:()=>Qs,tile:()=>fu,time:()=>ni,topk:()=>Uh,train:()=>Uf,transpose:()=>Qh,truncatedNormal:()=>Gh,unique:()=>Hh,unregisterGradient:()=>ya,unregisterKernel:()=>ga,unsortedSegmentSum:()=>jh,unstack:()=>qh,upcastType:()=>ps,upperBound:()=>Kh,util:()=>va,valueAndGrad:()=>Fu,valueAndGrads:()=>Du,variable:()=>Xh,variableGrads:()=>Mu,version:()=>RZ,version_converter:()=>sC,version_core:()=>Wf,version_cpu:()=>XA,version_layers:()=>Aw,version_wasm:()=>$Z,version_webgl:()=>EP,webgl:()=>AP,webgl_util:()=>nO,where:()=>Pl,whereAsync:()=>Zh,zeros:()=>nd,zerosLike:()=>Bl});var o=Object.create,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=Object.getOwnPropertyNames,h=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty,c=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),f=(e,t)=>{for(var n in t)l(e,n,{get:t[n],enumerable:!0})},m=(e,t,n)=>(n=null!=e?o(h(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of d(t))!p.call(e,a)&&a!==n&&l(e,a,{get:()=>t[a],enumerable:!(r=u(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:l(n,"default",{value:e,enumerable:!0}),e)),g=c(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(T){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var d=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=l(d(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var p=l(d(n,o));s=s.mul(p).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=p;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(d(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,h=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,h+=(c+=r+l)>>>16,d+=(h+=n+o)>>>16,d+=t+i,u((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=p(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,d=65535&e.high,h=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*h)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*d)>>>16,f+=t*c+r*h+s*d+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:d(2,i-48),h=l(t),c=h.mul(e);c.isNegative()||c.gt(r);)c=(h=l(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=p(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),y=c((()=>{})),b=c((()=>{})),x=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),v=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),w=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=c(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=c(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=c((()=>{})),T=c(((e,t)=>{!function(e,r,a){var s,i=256,o="random",l=a.pow(i,6),u=a.pow(2,52),d=2*u,h=255;function p(t,n,h){var p=[],b=g(m((n=1==n?{entropy:!0}:n||{}).entropy?[t,y(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(p){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,y(r)]}}():t,3),p),x=new c(p),v=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=x.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,g(y(x.S),r),(n.pass||h||function(e,t,n,r){return r&&(r.S&&f(r,x),e.state=function(){return f(x,{})}),n?(a[o]=e,t):e})(v,b,"global"in n?n.global:this==a,n.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*i+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(a.random(),r),"object"==typeof t&&t.exports){t.exports=p;try{s=N()}catch(b){}}else"function"==typeof define&&n.amdO?define((function(){return p})):a["seed"+o]=p}("undefined"!=typeof self?self:e,[],Math)})),_=c(((e,t)=>{var n=x(),r=v(),a=w(),s=k(),i=I(),o=S(),l=T();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),C=c((()=>{})),E=c((()=>{})),$=c((()=>{})),A=c((()=>{})),R=c((()=>{})),F=c((()=>{})),D=c(((e,t)=>{var a=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||r,function(t){function r(){return O.buffer!=B&&X(O.buffer),V}function a(){return O.buffer!=B&&X(O.buffer),U}function s(){return O.buffer!=B&&X(O.buffer),G}function i(){return O.buffer!=B&&X(O.buffer),H}var o,l,u,d="undefined"!=typeof(t=t||{})?t:{};d.ready=new Promise((function(e,t){o=e,l=t})),"undefined"!=typeof process&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var h,p,c,f=Object.assign({},d),m=[],g=(e,t)=>{throw t},y="object"==typeof window,b="function"==typeof importScripts,x="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,v=d.ENVIRONMENT_IS_PTHREAD||!1,w="";function k(e){return d.locateFile?d.locateFile(e,w):w+e}if(x){var I=E(),S=$();let e;w=b?S.dirname(w)+"/":"//",h=(e,t)=>(e=ue(e)?new URL(e):S.normalize(e),I.readFileSync(e,t?void 0:"utf8")),c=e=>{var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),t},p=(e,t,n)=>{e=ue(e)?new URL(e):S.normalize(e),I.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),m=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof pe))throw e})),process.on("unhandledRejection",(function(e){throw e})),g=(e,t)=>{if(te())throw process.exitCode=e,t;(function(e){e instanceof pe||C("exiting due to exception: "+e)})(t),process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{e=A()}catch(et){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),et}n.g.Worker=e.Worker}else(y||b)&&(b?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),"undefined"!=typeof e&&e&&(w=e),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",x||(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},b&&(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}),e=>document.title=e);x&&"undefined"==typeof performance&&(n.g.performance=R().performance);var N=console.log.bind(console),T=console.warn.bind(console);x&&(N=e=>I.writeSync(1,e+"\n"),T=e=>I.writeSync(2,e+"\n"));var _=d.print||N,C=d.printErr||T;Object.assign(d,f),f=null,d.arguments&&(m=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(g=d.quit);var D;Atomics.load,Atomics.store,Atomics.compareExchange;d.wasmBinary&&(D=d.wasmBinary);var M=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&ie("no native wasm support detected");var O,L,z,P=!1;var B,W,V,U,G,H,j="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function q(e,t,n){for(var r=(t>>>=0)+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&j)return j.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function K(e,t){return(e>>>=0)?q(r(),e,t):""}function X(e){B=e,d.HEAP8=W=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=U=new Int32Array(e),d.HEAPU8=V=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=G=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=H=new Float64Array(e)}v&&(B=d.buffer);var Y=d.INITIAL_MEMORY||16777216;if(v)O=d.wasmMemory,B=d.buffer;else if(d.wasmMemory)O=d.wasmMemory;else if(!((O=new WebAssembly.Memory({initial:Y/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw C("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&C("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");O&&(B=O.buffer),Y=B.byteLength,X(B);var Z,J=[],Q=[],ee=[];function te(){return M}function ne(){!v&&be(Q)}var re=0,ae=null,se=null;function ie(e){d.onAbort&&d.onAbort(e),C(e="Aborted("+e+")"),P=!0,z=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}var oe;function le(e){return e.startsWith("data:application/octet-stream;base64,")}function ue(e){return e.startsWith("file://")}function de(e){try{if(e==oe&&D)return new Uint8Array(D);if(c)return c(e);throw"both async and sync fetching of the wasm failed"}catch(et){ie(et)}}le(oe="tfjs-backend-wasm-threaded-simd.wasm")||(oe=k(oe));var he={};function pe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ce(e){var t=ye.pthreads[e];(function(e,t){e||ie(t)})(t),ye.returnWorkerToPool(t)}function fe(e){var t=ye.getNewWorker();if(!t)return 6;ye.runningWorkers.push(t),ye.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{x&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function me(e){if(v)return Te(1,1,e);z=e,te()||(ye.terminateAllThreads(),d.onExit&&d.onExit(e),P=!0),g(e,new pe(e))}var ge=function(e,t){if(z=e,!t&&v)throw xe(e),"unwind";me(e)};var ye={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){v?ye.initWorker():ye.initMainThread()},initMainThread:function(){for(var e=8;e--;)ye.allocateUnusedWorker()},initWorker:function(){M=!1},setExitStatus:function(e){z=e},terminateAllThreads:function(){for(var e of Object.values(ye.pthreads))ye.returnWorkerToPool(e);for(var e of ye.unusedWorkers)e.terminate();ye.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete ye.pthreads[t],ye.unusedWorkers.push(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(e),1),e.pthread_ptr=0,x&&e.unref(),je(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){ye.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(t,n){t.onmessage=e=>{var r=e.data,a=r.cmd;if(t.pthread_ptr&&(ye.currentProxiedOperationCallerThread=t.pthread_ptr),r.targetThread&&r.targetThread!=Ve()){var s=ye.pthreads[r.targetThread];return s?s.postMessage(r,r.transferList):C('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ye.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===a?Se(r.queue):"spawnThread"===a?fe(r):"cleanupThread"===a?ce(r.thread):"killThread"===a?function(e){var t=ye.pthreads[e];delete ye.pthreads[e],t.terminate(),je(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(r.thread):"cancelThread"===a?function(e){ye.pthreads[e].postMessage({cmd:"cancel"})}(r.thread):"loaded"===a?(t.loaded=!0,x&&t.unref(),n&&n(t),t.runPthread&&t.runPthread()):"print"===a?_("Thread "+r.threadId+": "+r.text):"printErr"===a?C("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?t.postMessage(r):"callHandler"===a?d[r.handler](...r.args):a&&C("worker sent an unknown command "+a),ye.currentProxiedOperationCallerThread=void 0},t.onerror=e=>{throw C("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},x&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("detachedExit",(function(){})));var r=[];for(var a of["onExit","onAbort","print","printErr"])d.hasOwnProperty(a)&&r.push(a);t.postMessage({cmd:"load",handlers:r,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:O,wasmModule:L})},allocateUnusedWorker:function(){var e,t=k("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),ye.unusedWorkers.push(e)},getNewWorker:function(){return 0==ye.unusedWorkers.length&&(ye.allocateUnusedWorker(),ye.loadWasmModuleToWorker(ye.unusedWorkers[0])),ye.unusedWorkers.pop()}};function be(e){for(;e.length>0;)e.shift()(d)}function xe(e){if(v)return Te(2,0,e);try{ge(e)}catch(et){!function(e){if(e instanceof pe||"unwind"==e)return z;g(1,e)}(et)}}d.PThread=ye,d.establishStackSpace=function(){var e=Ve(),t=a()[e+52>>>2],n=a()[e+56>>>2];Ke(t,t-n),Ye(t)};var ve=[];function we(e,t,n,r){return v?Te(3,1,e,t,n,r):ke(e,t,n,r)}function ke(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return C("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(v&&0===a.length)return we(e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return v?(s.cmd="spawnThread",postMessage(s,a),0):fe(s)}d.invokeEntryPoint=function(e,t){var n=function(e){var t=ve[e];return t||(e>=ve.length&&(ve.length=e+1),ve[e]=t=Z.get(e)),t}(e)(t);te()?ye.setExitStatus(n):qe(n)};var Ie;function Se(e){Atomics.store(a(),e>>2,1),Ve()&&He(e),Atomics.compareExchange(a(),e>>2,1,0)}function Ne(e){Ne.shown||(Ne.shown={}),Ne.shown[e]||(Ne.shown[e]=1,x&&(e="warning: "+e),C(e))}function Te(e,t){var n=arguments.length-2,r=arguments;return function(e){var t=Xe(),n=e();return Ye(t),n}((()=>{for(var a=n,s=Ze(8*a),o=s>>3,l=0;l<n;l++){var u=r[2+l];i()[o+l>>>0]=u}return Ge(e,a,s,t)}))}d.executeNotifiedProxyingQueue=Se,Ie=x?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var _e=[];function Ce(e){try{return O.grow(e-B.byteLength+65535>>>16),X(O.buffer),1}catch(et){}}function Ee(e){return v?Te(4,1,e):52}function $e(e,t,n,r,a){return v?Te(5,1,e,t,n,r,a):70}var Ae=[null,[],[]];function Re(e,t){var n=Ae[e];0===t||10===t?((1===e?_:C)(q(n,0)),n.length=0):n.push(t)}function Fe(e,t,n,a){if(v)return Te(6,1,e,t,n,a);for(var i=0,o=0;o<n;o++){var l=s()[t>>>2],u=s()[t+4>>>2];t+=8;for(var d=0;d<u;d++)Re(e,r()[l+d>>>0]);i+=u}return s()[a>>>2]=i,0}function De(e){return d["_"+e]}function Me(e,t){(O.buffer!=B&&X(O.buffer),W).set(e,t>>>0)}function Oe(e,t,n,a,s){var i={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,r){if(!(r>0))return 0;for(var a=n>>>=0,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++>>>0]=o}else if(o<=2047){if(n+1>=s)break;t[n++>>>0]=192|o>>6,t[n++>>>0]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++>>>0]=224|o>>12,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}else{if(n+3>=s)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}}t[n>>>0]=0})(e,r(),t,n)})(e,t=Ze(n),n)}return t},array:e=>{var t=Ze(e.length);return Me(e,t),t}};var o=De(e),l=[],u=0;if(a)for(var d=0;d<a.length;d++){var h=i[n[d]];h?(0===u&&(u=Xe()),l[d]=h(a[d])):l[d]=a[d]}var p,c=o.apply(null,l);return p=c,0!==u&&Ye(u),c=function(e){return"string"===t?K(e):"boolean"===t?!!e:e}(p),c}ye.init();var Le,ze,Pe,Be=[null,me,xe,we,Ee,$e,Fe],We={__emscripten_init_main_thread_js:function(e){Ue(e,!b,1,!y),ye.threadInitTLS()},__emscripten_thread_cleanup:function(e){v?postMessage({cmd:"cleanupThread",thread:e}):ce(e)},__pthread_create_js:ke,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return true},_emscripten_notify_task_queue:function(e,t,n,r){if(e==t)setTimeout((()=>Se(r)));else if(v)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=ye.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){ie("")},emscripten_check_blocking_allowed:function(){x||b||Ne("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:Ie,emscripten_memcpy_big:function(e,t,n){r().copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_num_logical_cores:function(){return x?F().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){_e.length=t;for(var r=n>>3,a=0;a<t;a++)_e[a]=i()[r+a>>>0];return(e<0?he[-e-1]:Be[e]).apply(null,_e)},emscripten_resize_heap:function(e){var t=r().length;if((e>>>=0)<=t)return!1;var n,a,s=4294901760;if(e>s)return!1;for(var i=1;i<=4;i*=2){var o=t*(1+.2/i);if(o=Math.min(o,e+100663296),Ce(Math.min(s,(n=Math.max(e,o))+((a=65536)-n%a)%a)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:ge,fd_close:Ee,fd_seek:$e,fd_write:Fe,memory:O||d.wasmMemory},Ve=(function(){var e={env:We,wasi_snapshot_preview1:We};function t(e,t){var n=e.exports;if(d.asm=n,function(e){ye.tlsInitFunctions.push(e)}(d.asm._emscripten_tls_init),Z=d.asm.__indirect_function_table,function(e){Q.unshift(e)}(d.asm.__wasm_call_ctors),L=t,!v){var r=ye.unusedWorkers.length;ye.unusedWorkers.forEach((function(e){ye.loadWasmModuleToWorker(e,(function(){--r||function(){if(re--,d.monitorRunDependencies&&d.monitorRunDependencies(re),0==re&&(null!==ae&&(clearInterval(ae),ae=null),se)){var e=se;se=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!D&&(y||b)){if("function"==typeof fetch&&!ue(oe))return fetch(oe,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+oe+"'";return e.arrayBuffer()})).catch((function(){return de(oe)}));if(p)return new Promise((function(e,t){p(oe,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return de(oe)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){C("failed to asynchronously prepare wasm: "+e),ie(e)}))}if(v||(re++,d.monitorRunDependencies&&d.monitorRunDependencies(re)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(a){C("Module.instantiateWasm callback failed with error: "+a),l(a)}(D||"function"!=typeof WebAssembly.instantiateStreaming||le(oe)||ue(oe)||x||"function"!=typeof fetch?r(n):fetch(oe,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return C("wasm streaming compile failed: "+e),C("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(Ve=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),Ue=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(Ue=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),Ge=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(Ge=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),He=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(He=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),je=d.__emscripten_thread_free_data=function(){return(je=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},qe=d.__emscripten_thread_exit=function(){return(qe=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},Ke=d._emscripten_stack_set_limits=function(){return(Ke=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Xe=d.stackSave=function(){return(Xe=d.stackSave=d.asm.stackSave).apply(null,arguments)},Ye=d.stackRestore=function(){return(Ye=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Ze=d.stackAlloc=function(){return(Ze=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)};function Je(e){if(e=e||m,!(re>0)){if(v)return o(d),ne(),void startWorker(d);(function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)e=d.preRun.shift(),J.unshift(e);var e;be(J)})(),re>0||(d.setStatus?(d.setStatus("Running..."),setTimeout((function(){setTimeout((function(){d.setStatus("")}),1),t()}),1)):t())}function t(){Le||(Le=!0,d.calledRun=!0,!P&&(ne(),o(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!v){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)e=d.postRun.shift(),ee.unshift(e);be(ee)}var e}()))}}if(d.keepRuntimeAlive=te,d.wasmMemory=O,d.cwrap=function(e,t,n,r){var a=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&a&&!r?De(e):function(){return Oe(e,t,n,arguments)}},d.ExitStatus=pe,d.PThread=ye,se=function e(){Le||Je(),Le||(se=e)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(Je(),u&&(ze={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!u.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!u.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Pe=WasmBackendModule;else{if("undefined"==typeof t)throw new Error("Could not find wasm module in post.js");Pe=t}if(ze){var Qe=Pe._dispose;Pe._dispose=function(){Qe(),ze.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),ze.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)})),M=c(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'})),O=c(((e,t)=>{var a=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||r,function(t){var n,r,a,s="undefined"!=typeof(t=t||{})?t:{};s.ready=new Promise((function(e,t){n=e,r=t})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u=Object.assign({},s),d=[],h="object"==typeof window,p="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(c){var m=E(),g=$();f=p?g.dirname(f)+"/":"//",i=(e,t)=>(e=U(e)?new URL(e):g.normalize(e),m.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=U(e)?new URL(e):g.normalize(e),m.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof H))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}}else(h||p)&&(p?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),e&&(f=e),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)},e=>document.title=e);var y=s.print||console.log.bind(console),b=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(d=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit;var x;s.wasmBinary&&(x=s.wasmBinary);var v=s.noExitRuntime||!0;"object"!=typeof WebAssembly&&P("no native wasm support detected");var w,k=!1;var I,S,N,T,_="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function C(e,t,n){for(var r=(t>>>=0)+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&_)return _.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function A(e,t){return(e>>>=0)?C(N,e,t):""}function R(e){I=e,s.HEAP8=S=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=new Int32Array(e),s.HEAPU8=N=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=T=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var F=[],D=[],M=[];var O=0,L=null,z=null;function P(e){s.onAbort&&s.onAbort(e),b(e="Aborted("+e+")"),k=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}var B,W;function V(e){return e.startsWith("data:application/octet-stream;base64,")}function U(e){return e.startsWith("file://")}function G(e){try{if(e==B&&x)return new Uint8Array(x);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(t){P(t)}}function H(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function j(e){for(;e.length>0;)e.shift()(s)}function q(e){try{return w.grow(e-I.byteLength+65535>>>16),R(w.buffer),1}catch(t){}}V(B="tfjs-backend-wasm.wasm")||(W=B,B=s.locateFile?s.locateFile(W,f):f+W);var K=[null,[],[]];function X(e,t){var n=K[e];0===t||10===t?((1===e?y:b)(C(n,0)),n.length=0):n.push(t)}function Y(e){return s["_"+e]}function Z(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,r){if(!(r>0))return 0;for(var a=n>>>=0,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++>>>0]=o}else if(o<=2047){if(n+1>=s)break;t[n++>>>0]=192|o>>6,t[n++>>>0]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++>>>0]=224|o>>12,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}else{if(n+3>=s)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}}t[n>>>0]=0})(e,N,t,n)})(e,t=ae(n),n)}return t},array:e=>{var t=ae(e.length);return function(e,t){S.set(e,t>>>0)}(e,t),t}};var i=Y(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=ne()),o[u]=d(r[u])):o[u]=r[u]}var h,p=i.apply(null,o);return h=p,0!==l&&re(l),p=function(e){return"string"===t?A(e):"boolean"===t?!!e:e}(h),p}var J,Q,ee,te={abort:function(){P("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){N.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t,n,r=N.length,a=4294901760;if((e>>>=0)>a)return!1;for(var s=1;s<=4;s*=2){var i=r*(1+.2/s);if(i=Math.min(i,e+100663296),q(Math.min(a,(t=Math.max(e,i))+((n=65536)-t%n)%n)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,r,a){return 70},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=T[t>>>2],o=T[t+4>>>2];t+=8;for(var l=0;l<o;l++)X(e,N[i+l>>>0]);a+=o}return T[r>>>2]=a,0}},ne=(function(){var e={env:te,wasi_snapshot_preview1:te};function t(e,t){var n=e.exports;s.asm=n,R((w=s.asm.memory).buffer),s.asm.__indirect_function_table,function(e){D.unshift(e)}(s.asm.__wasm_call_ctors),function(){if(O--,s.monitorRunDependencies&&s.monitorRunDependencies(O),0==O&&(null!==L&&(clearInterval(L),L=null),z)){var e=z;z=null,e()}}()}function n(e){t(e.instance)}function a(t){return function(){if(!x&&(h||p)){if("function"==typeof fetch&&!U(B))return fetch(B,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+B+"'";return e.arrayBuffer()})).catch((function(){return G(B)}));if(o)return new Promise((function(e,t){o(B,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return G(B)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){b("failed to asynchronously prepare wasm: "+e),P(e)}))}if(O++,s.monitorRunDependencies&&s.monitorRunDependencies(O),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(i){b("Module.instantiateWasm callback failed with error: "+i),r(i)}(x||"function"!=typeof WebAssembly.instantiateStreaming||V(B)||U(B)||c||"function"!=typeof fetch?a(n):fetch(B,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return b("wasm streaming compile failed: "+e),b("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(ne=s.stackSave=s.asm.stackSave).apply(null,arguments)}),re=s.stackRestore=function(){return(re=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},ae=s.stackAlloc=function(){return(ae=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};function se(e){function t(){J||(J=!0,s.calledRun=!0,!k&&(j(D),n(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),M.unshift(e);var e;j(M)}()))}e=e||d,O>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),F.unshift(e);var e;j(F)}(),O>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),t()}),1)):t())}if(s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&a&&!r?Y(e):function(){return Z(e,t,n,arguments)}},z=function e(){J||se(),J||(z=e)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(se(),a&&(Q={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof t)ee=t;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ee=WasmBackendModuleThreadedSimd}if(Q){var ie=ee._dispose;ee._dispose=function(){ie(),Q.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Q.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModule=a)})),L=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},z=class{refCount(e){return P("refCount")}incRef(e){return P("incRef")}timerAvailable(){return!0}time(e){return P("time")}read(e){return P("read")}readSync(e){return P("readSync")}readToGPU(e,t){return P("readToGPU")}numDataIds(){return P("numDataIds")}disposeData(e,t){return P("disposeData")}write(e,t,n){return P("write")}move(e,t,n,r,a){return P("move")}createTensorFromGPUData(e,t,n){return P("createTensorFromGPUData")}memory(){return P("memory")}floatPrecision(){return P("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return P("dispose")}};function P(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function B(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,G(e,t,n)}function W(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,G(e,n,r),G(t,n,r)}function V(e,t,n){return Math.max(e,Math.min(t,n))}function U(e){return e%2===0?e:e+1}function G(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function H(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function j(e,t){let n=Math.random();return t*n+(1-n)*e}function q(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function K(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function X(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";K(ee(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Y(e){K(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Z(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function J(e){return 0===e.length}function Q(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function ee(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function te(e){return e%1===0}function ne(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function re(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ae(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return B(t),t}function se(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ie(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((a,s)=>{let i=0,o=()=>{if(e())return void a();i++;let l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()}))}function oe(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function le(e,t){let n=t.length;return K((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),K(e.every((e=>te(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ue(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:le(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function de(e,t){return he(e,t)}function he(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function pe(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ce(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function fe(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function me(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ge(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ye(e){return"string"==typeof e||e instanceof String}function be(e){return"boolean"==typeof e}function xe(e){return"number"==typeof e}function ve(e){return Array.isArray(e)?ve(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":xe(e)?"float32":ye(e)?"string":be(e)?"bool":"float32"}function we(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ke(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Ie(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Se(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Se(e+t*o,i,n,r)}return a}function Ne(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Se(0,e,t,n)}function Te(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function _e(e,t){let n=Ce(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Ce(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ee(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ne(e,new Float32Array(n));if("int32"===t)return Ne(e,new Int32Array(n));if("bool"===t)return Ne(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function $e(e){e.forEach((t=>{K(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ae(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Re(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Fe(e){return e&&e.then&&"function"==typeof e.then}var De="tfjsflags",Me=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Oe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Le().getBool("IS_TEST")||Le().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Le().getBool("IS_TEST")||Le().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Fe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);De in e&&e[De].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}};function Oe(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function Le(){return Pe}var ze,Pe=null;function Be(){if(null==ze){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}ze=e}return ze}function We(e,t){let n=function(){let e=Be();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ve="Abs",Ue="Acos",Ge="Acosh",He="Add",je="AddN",qe="All",Ke="Any",Xe="ArgMax",Ye="ArgMin",Ze="Asin",Je="Asinh",Qe="Atan",et="Atanh",tt="Atan2",nt="AvgPool",rt="AvgPoolGrad",at="AvgPool3D",st="AvgPool3DGrad",it="BatchMatMul",ot="BatchToSpaceND",lt="Bincount",ut="BitwiseAnd",dt="BroadcastTo",ht="BroadcastArgs",pt="Cast",ct="Ceil",ft="ClipByValue",mt="Complex",gt="ComplexAbs",yt="Concat",bt="Conv2D",xt="Conv2DBackpropFilter",vt="Conv2DBackpropInput",wt="Conv3D",kt="Conv3DBackpropFilterV2",It="Conv3DBackpropInputV2",St="Cos",Nt="Cosh",Tt="Cumprod",_t="Cumsum",Ct="CropAndResize",Et="DenseBincount",$t="DepthToSpace",At="DepthwiseConv2dNative",Rt="DepthwiseConv2dNativeBackpropFilter",Ft="DepthwiseConv2dNativeBackpropInput",Dt="Diag",Mt="Dilation2D",Ot="Dilation2DBackpropInput",Lt="Dilation2DBackpropFilter",zt="Draw",Pt="RealDiv",Bt="Einsum",Wt="Elu",Vt="EluGrad",Ut="Erf",Gt="Equal",Ht="Exp",jt="ExpandDims",qt="Expm1",Kt="FFT",Xt="Fill",Yt="FlipLeftRight",Zt="Floor",Jt="FloorDiv",Qt="FusedBatchNorm",en="GatherV2",tn="GatherNd",nn="Greater",rn="GreaterEqual",an="Identity",sn="IFFT",on="Imag",ln="IsFinite",un="IsInf",dn="IsNan",hn="LeakyRelu",pn="Less",cn="LessEqual",fn="LinSpace",mn="Log",gn="Log1p",yn="LogicalAnd",bn="LogicalNot",xn="LogicalOr",vn="LogicalXor",wn="LogSoftmax",kn="LowerBound",In="LRN",Sn="LRNGrad",Nn="MatrixBandPart",Tn="Max",_n="Maximum",Cn="MaxPool",En="MaxPoolGrad",$n="MaxPool3D",An="MaxPool3DGrad",Rn="MaxPoolWithArgmax",Fn="Mean",Dn="Min",Mn="Minimum",On="MirrorPad",Ln="Mod",zn="Multinomial",Pn="Multiply",Bn="Neg",Wn="NotEqual",Vn="NonMaxSuppressionV3",Un="NonMaxSuppressionV4",Gn="NonMaxSuppressionV5",Hn="OnesLike",jn="OneHot",qn="Pack",Kn="PadV2",Xn="Pool",Yn="Pow",Zn="Prelu",Jn="Prod",Qn="RaggedGather",er="RaggedRange",tr="RaggedTensorToTensor",nr="Range",rr="Real",ar="Reciprocal",sr="Relu",ir="Reshape",or="ResizeNearestNeighbor",lr="ResizeNearestNeighborGrad",ur="ResizeBilinear",dr="ResizeBilinearGrad",hr="Relu6",pr="Reverse",cr="Round",fr="Rsqrt",mr="ScatterNd",gr="TensorScatterUpdate",yr="SearchSorted",br="Select",xr="Selu",vr="Slice",wr="Sin",kr="Sinh",Ir="Sign",Sr="Sigmoid",Nr="Softplus",Tr="Sqrt",_r="Sum",Cr="SpaceToBatchND",Er="SplitV",$r="Softmax",Ar="SparseFillEmptyRows",Rr="SparseReshape",Fr="SparseSegmentMean",Dr="SparseSegmentSum",Mr="SparseToDense",Or="SquaredDifference",Lr="Square",zr="StaticRegexReplace",Pr="StridedSlice",Br="StringNGrams",Wr="StringSplit",Vr="StringToHashBucketFast",Ur="Sub",Gr="Tan",Hr="Tanh",jr="Tile",qr="TopK",Kr="Transform",Xr="Transpose",Yr="Unique",Zr="Unpack",Jr="UnsortedSegmentSum",Qr="UpperBound",ea="ZerosLike",ta="Step",na="FromPixels",ra="RotateWithOffset",aa="_FusedMatMul",sa="FusedConv2D",ia="FusedDepthwiseConv2D";function oa(){Le().getBool("IS_TEST")||Le().getBool("PROD")||console.warn(...arguments)}function la(){Le().getBool("IS_TEST")||Le().getBool("PROD")||console.log(...arguments)}var ua=We("kernelRegistry",(()=>new Map)),da=We("gradRegistry",(()=>new Map));function ha(e,t){let n=xa(e,t);return ua.get(n)}function pa(e){return da.get(e)}function ca(e){let t=ua.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function fa(e){let{kernelName:t,backendName:n}=e,r=xa(t,n);ua.has(r)&&oa(`The kernel '${t}' for backend '${n}' is already registered`),ua.set(r,e)}function ma(e){let{kernelName:t}=e;da.has(t)&&Le().getBool("DEBUG")&&oa(`Overriding the gradient for '${t}'`),da.set(t,e)}function ga(e,t){let n=xa(e,t);if(!ua.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ua.delete(n)}function ya(e){if(!da.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);da.delete(e)}function ba(e,t){ca(e).forEach((e=>{fa(Object.assign({},e,{backendName:t}))}))}function xa(e,t){return`${t}_${e}`}var va={};function wa(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}f(va,{arraysEqual:()=>ee,arraysEqualWithNull:()=>Q,assert:()=>K,assertNonNegativeIntegerDimensions:()=>$e,assertNonNull:()=>Y,assertShapesMatch:()=>X,bytesFromStringArray:()=>ge,bytesPerElement:()=>me,checkConversionForErrors:()=>pe,clamp:()=>V,computeStrides:()=>Ie,convertBackendValuesAndArrayBuffer:()=>Te,createScalarValue:()=>Oa,createShuffledIndices:()=>ae,decodeString:()=>Wa,distSquared:()=>q,encodeString:()=>Ba,fetch:()=>Pa,fingerPrint64:()=>Ma,flatten:()=>Ua,getArrayFromDType:()=>he,getTypedArrayFromDType:()=>de,hasEncodingLoss:()=>fe,hexToLong:()=>Sa,indexToLoc:()=>Re,inferDtype:()=>ve,inferFromImplicitShape:()=>oe,isBoolean:()=>be,isFunction:()=>we,isInt:()=>te,isNumber:()=>xe,isPromise:()=>Fe,isScalarShape:()=>J,isString:()=>ye,isTypedArray:()=>Va,isValidDtype:()=>ce,locToIndex:()=>Ae,makeOnesTypedArray:()=>_e,makeZerosNestedTypedArray:()=>Ee,makeZerosTypedArray:()=>Ce,nearestDivisor:()=>ke,nearestLargerEven:()=>U,now:()=>za,parseAxisParam:()=>le,randUniform:()=>j,repeatedTry:()=>ie,rightPad:()=>se,shuffle:()=>B,shuffleCombo:()=>W,sizeFromShape:()=>Z,sizeToSquarishShape:()=>re,squeezeShape:()=>ue,sum:()=>H,swap:()=>G,tanh:()=>ne,toNestedArray:()=>Ne,toTypedArray:()=>La});var ka=m(g()),Ia=ka.default||ka;function Sa(e){return Ia.fromString(e,!0,16)}var Na=Sa("c3a5c85c97cb3127"),Ta=Sa("b492b66fbe98f273"),_a=Sa("9ae16a3b2f90404f");function Ca(e){return e.xor(e.shru(47))}function Ea(e,t,n){let r=e.slice(t,t+n);return Ia.fromBytes(Array.from(r),!0,!0)}function $a(e,t){return Ea(e,t,8)}function Aa(e,t){return Ea(e,t,4)}function Ra(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Fa(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Sa("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Da(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Ra(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(Ra(a,44)),[a.add(r),s.add(i)]}($a(e,t),$a(e,t+8),$a(e,t+16),$a(e,t+24),n,r)}function Ma(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=Ia.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){let n=_a.add(2*t),r=$a(e,0).add(_a),a=$a(e,t-8);return Fa(Ra(a,37).mul(n).add(r),Ra(r,25).add(a).mul(n),n)}if(t>=4){let n=_a.add(2*t);return Fa(Aa(e,0).shl(3).add(t),Aa(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ca(_a.mul(n).xor(Na.mul(r))).mul(_a)}return _a}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=_a.add(2*t),r=$a(e,0).mul(Ta),a=$a(e,8),s=$a(e,t-8).mul(n),i=$a(e,t-16).mul(_a);return Fa(Ra(r.add(a),43).add(Ra(s,30)).add(i),r.add(Ra(a.add(_a),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=_a.add(2*t),r=$a(e,0).mul(_a),a=$a(e,8),s=$a(e,t-8).mul(n),i=$a(e,t-16).mul(_a),o=Ra(r.add(a),43).add(Ra(s,30)).add(i),l=Fa(o,r.add(Ra(a.add(_a),18)).add(s),n),u=$a(e,16).mul(n),d=$a(e,24),h=o.add($a(e,t-32)).mul(n),p=l.add($a(e,t-24)).mul(n);return Fa(Ra(u.add(d),43).add(Ra(h,30)).add(p),u.add(Ra(d.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(Ta).add(113),s=Ca(a.mul(_a).add(113)).mul(_a),i=[Ia.UZERO,Ia.UZERO],o=[Ia.UZERO,Ia.UZERO];r=r.mul(_a).add($a(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{r=Ra(r.add(a).add(i[0]).add($a(e,l+8)),37).mul(Ta),a=Ra(a.add(i[1]).add($a(e,l+48)),42).mul(Ta),r=r.xor(o[1]),a=a.add(i[0]).add($a(e,l+40)),s=Ra(s.add(o[0]),33).mul(Ta),i=Da(e,l,i[1].mul(Ta),r.add(o[0])),o=Da(e,l+32,s.add(o[1]),a.add($a(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let h=Ta.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ra(r.add(a).add(i[0]).add($a(e,l+8)),37).mul(h),a=Ra(a.add(i[1]).add($a(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add($a(e,l+40))),s=Ra(s.add(o[0]),33).mul(h),i=Da(e,l,i[1].mul(h),r.add(o[0])),o=Da(e,l+32,s.add(o[1]),a.add($a(e,l+16))),[s,r]=[r,s],Fa(Fa(i[0],o[0],h).add(Ca(a).mul(Na)).add(s),Fa(i[1],o[1],h).add(r),h)}function Oa(e,t){return"string"===t?Ba(e):La([e],t)}function La(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ua(e)),Le().getBool("DEBUG")&&pe(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function za(){return Le().platform.now()}function Pa(e,t){return Le().platform.fetch(e,t)}function Ba(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Le().platform.encode(e,t)}function Wa(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Le().platform.decode(e,t)}function Va(e){return null!=Le().platform.isTypedArray?Le().platform.isTypedArray(e):wa(e)}function Ua(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Fe(e)||null==e||Va(e)&&n)t.push(e);else if(Array.isArray(e)||Va(e))for(let r=0;r<e.length;++r)Ua(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)Ua(e[a],t,n)}return t}var Ga=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ja)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=za();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:za()-i})}if(Le().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let t=r[o];t.data().then((n=>{Ha(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}};function Ha(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){let t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}var ja=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?se(`${r}ms`,9):r.error,o=se(e,25),l=t.rank,u=t.size,d=se(t.shape.toString(),14),h="";for(let p in a){let e=a[p];if(null!=e){let n=e.shape||t.shape,r=n.length;h+=`${p}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function qa(e,t,n,r){let a=Ie(t),s=function(e,t,n,r){let a=Z(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Za(e):e;if(o>1)for(let u=0;u<a/s;u++){let e=u*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],Ka(l[e+t],0,n).length)}return i}(e,t,n,a),i=t.length,o=Ya(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ka(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ye(e)?`'${e}'`:"bool"===n?Xa(e):parseFloat(e.toFixed(7)).toString(),se(r,t)}function Xa(e){return 0===e?"false":"true"}function Ya(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Ka(Za(e)[0],0,n)]}return"bool"===n?[Xa(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Za(r),s=Za(s)),["["+r.map(((e,t)=>Ka(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ka(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Za(e):Array.from(e)).map(((e,t)=>Ka(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){let r=t*h,s=r+h;p.push(...Ya(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){let r=t*h,s=r+h;p.push(...Ya(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let m=0;m<o;m++){let t=m*h,r=t+h;p.push(...Ya(e.slice(t,r),u,n,d,a,m===o-1))}let c=2===l?",":"";p[0]="["+(o>0?p[0]+c:"");for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+c;let f=",\n";for(let m=2;m<l;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Za(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ja=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Z(e),null!=n){let e=n.length;K(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||he(t,this.size),this.strides=Ie(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),K(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));let a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(let s of t){if(s<0||s>=this.shape[r]){let e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=this.strides[s]*t[s];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Qa().makeTensor(this.values,this.shape,this.dtype)}},Qa=null,es=null;var ts=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Z(e),this.strides=Ie(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return es.buffer(this.shape,this.dtype,e)}bufferSync(){return es.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ne(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ne(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Qa().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Wa(e)))}catch(xQ){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Qa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Qa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Wa(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Qa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Qa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return es.print(this,e)}clone(){return this.throwIfDisposed(),es.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return qa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),es.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Qa().makeVariable(this,e,t,n)}};function ns(){return We("Tensor",(()=>ts))}Object.defineProperty(ts,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ns();var rs=class extends ts{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ee(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Qa().disposeTensor(this),this.dataId=e.dataId,Qa().incRef(this,null)}dispose(){Qa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(rs,Symbol.hasInstance,{value:e=>e instanceof ts&&null!=e.assign&&e.assign instanceof Function});var as,ss,is,os,ls,us,ds={};f(ds,{assertTypesMatch:()=>ys,getTensorsInContainer:()=>xs,isTensorInList:()=>bs,makeTypesMatch:()=>gs}),(ss=as||(as={})).R0="R0",ss.R1="R1",ss.R2="R2",ss.R3="R3",ss.R4="R4",ss.R5="R5",ss.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(is||(is={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(os||(os={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ls||(ls={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(us||(us={}));var hs={float32:ls,int32:is,bool:os,complex64:us};function ps(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return hs[e][t]}function cs(e){return ps(e,"int32")}function fs(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function ms(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function gs(e,t){if(e.dtype===t.dtype)return[e,t];let n=ps(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ys(e,t){K(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function bs(e,t){return t.some((t=>t.id===e.id))}function xs(e){let t=[];return vs(e,t,new Set),t}function vs(e,t,n){if(null==e)return;if(e instanceof ts)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let a in r){let e=r[a];n.has(e)||(n.add(e),vs(e,t,n))}}function ws(e){return null!=e.kernelName}var ks=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Is=class e{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ks}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(oa(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ga(this.backendInstance),!0}setupRegisteredKernels(){ca(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ca(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof z||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,oa(`Initialization of backend ${e} failed`),oa(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return oa(`Initialization of backend ${e} failed`),oa(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(xJ){throw t(),xJ}}nextTensorId(){return e.nextTensorId++}nextVariableId(){return e.nextVariableId++}clone(e){let t=Ns.runKernel(an,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return Ns.runKernel(pt,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ha(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=ws(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ws(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=ha(t,this.backendName);K(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{a&&(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:h}=e,p=ws(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,d,t,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=pa(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(K(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ye(e[0])&&(a=e.map((e=>Ba(e))));let s=r.write(a,t,n),i=new ts(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=ge(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new ts(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new rs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*me(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof rs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*me(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=pa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Ce(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=xs(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){let e=this.state.activeScope.track[a];!e.kept&&!n.has(e.id)&&e.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(K(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));K(a instanceof ts,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let n=e[l],s=n.inputs;for(let e in s){let i=s[e],o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[n.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(let e in n)s[n[e].id]=!0,i[t.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let t=e[l];if(a[t.id]&&i[t.id]){let e={};for(let a in t.inputs){let n=t.inputs[a];r[n.id]&&(e[a]=n)}let n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=_e(Z(e),"float32");return Ns.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!ee(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Ts);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return K(we(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];K(r.every((e=>e instanceof ts)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let s,i={};r.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...r,n),K(s.value instanceof ts,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),K(we(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{let n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];K(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),K(a.every((e=>e instanceof ts)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=za(),n=await this.backend.time(e);return n.wallMs=za()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ks;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Ss(){let e=Be();if(null==e._tfengine){let t=new Me(e);e._tfengine=new Is(t)}return function(e){Pe=e}(e._tfengine.ENV),function(e){Qa=e}((()=>e._tfengine)),e._tfengine}Is.nextTensorId=0,Is.nextVariableId=0;var Ns=Ss();function Ts(e,t){let n={a:e,b:t};return Ns.runKernel(He,n)}var _s,Cs={};function Es(e){_s=e}function $s(e){if(void 0!==_s)return _s;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function As(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}f(Cs,{isBrowser:()=>As,isMobile:()=>$s,mockIsMobile:()=>Es});var Rs=Le();function Fs(e,t){let n=e;if(Va(e))return"string"===t?[]:[e.length];if(fs(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(ms(e))return[e.buffer.size/(null==t?4:me(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Va(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Le().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ds(e,r,[]),r}function Ds(e,t,n){if(n=n||[],!Array.isArray(e)&&!Va(e))return void K(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));K(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),K(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let a=0;a<e.length;++a)Ds(e[a],r,n.concat(a))}function Ms(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Os(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof ns())return Ms(r,e.dtype,t,n),e;let a=ve(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Ms(r,a,t,n),null==e||!Va(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Fs(e,a);!Va(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?La(e,a):Ua(e,[],!0);return Ns.makeTensor(i,s,a)}function Ls(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Os(e,`${t}[${a}]`,n,r)))}Rs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Rs.registerFlag("IS_BROWSER",(()=>As())),Rs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions.node)),Rs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Rs.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Rs.registerFlag("PROD",(()=>!1)),Rs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Rs.registerFlag("IS_TEST",(()=>!1)),Rs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Rs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Rs.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var zs="__op";function Ps(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=zs;let a=function(){Ns.startScope(n);try{let e=r(...arguments);return Fe(e)&&console.error("Cannot return a Promise inside of tidy."),Ns.endScope(e),e}catch(e){throw Ns.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Bs=Ps({complex_:function(e,t){let n=Os(e,"real","complex"),r=Os(t,"imag","complex");X(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Ns.runKernel(mt,a)}});function Ws(e,t,n,r){if(null==r)r=ve(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ms(e)||fs(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Ns.backend.createTensorFromGPUData(e,t||n,r)}if(!Va(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){$e(t);let e=Z(t),r=Z(n);K(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let a=0;a<n.length;++a){let e=n[a],r=a!==n.length-1||e!==Z(t.slice(a));K(n[a]===t[a]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!Va(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?La(e,r):Ua(e,[],!0),Ns.makeTensor(e,t,r)}function Vs(e,t,n){return Ws(e,t,Fs(e,n),n)}var Us={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Gs=class e{static join(t){return new e(t).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map((e=>Va(e)?e.buffer:e))).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);let r=new ArrayBuffer(t-e),a=new Uint8Array(r),s=0;for(let i=n;i<this.shards.length;i++){let n=this.shards[i],r=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(a.set(u,o),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function Hs(){Le().set("PROD",!0)}function js(){Le().set("DEBUG",!0)}function qs(){Le().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ks(e){Le().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Xs(){Ns.disposeVariables()}function Ys(){return Ns}function Zs(){return Ns.memory()}function Js(e){return Ns.profile(e)}function Qs(e,t){return Ns.tidy(e,t)}function ei(e){xs(e).forEach((e=>e.dispose()))}function ti(e){return Ns.keep(e)}function ni(e){return Ns.time(e)}function ri(e){return Ns.setBackend(e)}function ai(){return Ns.ready()}function si(){return Ns.backendName}function ii(e){Ns.removeBackend(e)}function oi(e){return Ns.findBackend(e)}function li(e){return Ns.findBackendFactory(e)}function ui(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Ns.registerBackend(e,t,n)}function di(){return Ns.backend}function hi(e,t){Le().setPlatform(e,t)}!function(e){0}(Ks);async function pi(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let s=0;s<t.length;s++){let e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:xi(await Promise.all(r)),specs:n}}function ci(e,t){let n=new Gs(e),r={},a=0;for(let s of t){let e=fi(s,((e,t)=>n.slice(a+e,a+t)));r[s.name]=gi(s,n.slice(a,a+e)),a+=e}return r}function fi(e,t){let n,r=Z(e.shape);if("quantization"in e){let t=e.quantization;n=Us[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<r;n++)e+=4+new Uint32Array(t(e,e+4))[0];return e}n=Us[e.dtype]}return r*n}async function mi(e,t){let n,r=Z(e.shape);if("quantization"in e){let t=e.quantization;n=Us[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<r;n++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}n=Us[e.dtype]}return r*n}function gi(e,t){let n,r=e.name,a=e.dtype,s=e.shape,i=Z(s),o=0;if("quantization"in e){let s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${a}.`)}let l=Us[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===s.dtype||"uint16"===s.dtype){n=new Float32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);n=function(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let a=r[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];s[i]=o}return new Float32Array(a)}}()(u)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${r}': ${a}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);n=new Int32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=Math.round(t*s.scale+s.min)}}o+=i*l}else if("string"===a){let r=Z(e.shape);n=[];for(let e=0;e<r;e++){let e=new Uint32Array(t.slice(o,o+4))[0];o+=4;let r=new Uint8Array(t.slice(o,o+e));n.push(r),o+=e}}else{let e=Us[a];if("float32"===a)n=new Float32Array(t);else if("int32"===a)n=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){n=new Float32Array(t);let e=new Float32Array(n.length/2),r=new Float32Array(n.length/2);for(let t=0;t<e.length;t++)e[t]=n[2*t],r[t]=n[2*t+1];let a=Vs(e,s,"float32"),i=Vs(r,s,"float32"),o=Bs(a,i);return a.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${r}': ${a}`)}n=new Uint8Array(t)}o+=i*e}return Vs(n,s,a)}async function yi(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:t,value:a}=await e.read();if(t&&null==a){let e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function bi(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let s of t){let e=await mi(s,(async(e,t)=>(a=await yi(r,a,t),a.slice(e,t))));a=await yi(r,a,e);let t=a.slice(0,e);a=a.slice(e);let i=gi(s,t);if(n[s.name]=i,"webgpu"===si()){let e=di();"uploadToGPU"in e&&Z(i.shape)>=Le().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function xi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var vi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function wi(e){return vi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function ki(e){return Gs.join(e)}function Ii(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Si(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ni(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Ti(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Ni(e,n,r)}function _i(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:wi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:wi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Gs(e.weightData).byteLength}}function Ci(e){let t=[];for(let n of e)t.push(...n.weights);return t}var Ei=class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(t){e.getInstance().saveRouters.push(t)}static registerLoadRouter(t){e.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return e.getHandlers(t,"save")}static getLoadHandlers(t,n){return e.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach((e=>{let n=e(t,r);null!==n&&a.push(n)})),a}},$i=e=>Ei.registerSaveRouter(e),Ai=e=>Ei.registerLoadRouter(e),Ri=e=>Ei.getSaveHandlers(e),Fi=(e,t)=>Ei.getLoadHandlers(e,t),Di="tensorflowjs",Mi="models_store",Oi="model_info_store";function Li(){if(!Le().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function zi(e){let t=e.result;t.createObjectStore(Mi,{keyPath:"modelPath"}),t.createObjectStore(Oi,{keyPath:"modelPath"})}var Pi=class{constructor(e){if(this.indexedDB=Li(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Di,1);r.onupgradeneeded=()=>zi(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Mi,"readonly"),r=t.objectStore(Mi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=Gs.join(t.weightData);let r,i,o=_i(t),l=a.transaction(Oi,"readwrite"),u=l.objectStore(Oi);try{r=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(s){return n(s)}r.onsuccess=()=>{i=a.transaction(Mi,"readwrite");let r,s=i.objectStore(Mi);try{r=s.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(d){return n(d)}r.onsuccess=()=>e({modelArtifactsInfo:o}),r.onerror=e=>{u=l.objectStore(Oi);let t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(r.error)),t.onerror=e=>(a.close(),n(r.error))}},r.onerror=e=>(a.close(),n(r.error)),l.oncomplete=()=>{null==i?a.close():i.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Pi.URL_SCHEME="indexeddb://";var Bi=e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Pi.URL_SCHEME)?function(e){return new Pi(e)}(e.slice(Pi.URL_SCHEME.length)):null;Ei.registerSaveRouter(Bi),Ei.registerLoadRouter(Bi);var Wi="/",Vi="tensorflowjs_models",Ui="info",Gi="model_topology",Hi="weight_specs",ji="weight_data",qi="model_metadata";function Ki(e){return{info:[Vi,e,Ui].join(Wi),topology:[Vi,e,Gi].join(Wi),weightSpecs:[Vi,e,Hi].join(Wi),weightData:[Vi,e,ji].join(Wi),modelMetadata:[Vi,e,qi].join(Wi)}}function Xi(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function Yi(e){let t=e.split(Wi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Wi)}var Zi=class{constructor(e){if(!Le().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ki(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=_i(e),s=Gs.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(vi)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(s));let t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw Xi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(vi){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(s),t}};Zi.URL_SCHEME="localstorage://";var Ji=e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zi.URL_SCHEME)?function(e){return new Zi(e)}(e.slice(Zi.URL_SCHEME.length)):null;Ei.registerSaveRouter(Ji),Ei.registerLoadRouter(Ji);var Qi="://",eo=class e{constructor(){this.managers={}}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerManager(t,n){K(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(Qi)&&(t=t.slice(0,t.indexOf(Qi))),K(t.length>0,(()=>"scheme must not be an empty string."));let r=e.getInstance();K(null==r.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),r.managers[t]=n}static getManager(t){let n=e.getInstance().managers[t];if(null==n)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(e.getInstance().managers)}};function to(e){if(-1===e.indexOf(Qi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${eo.getSchemes().join(",")}`);return{scheme:e.split(Qi)[0],path:e.split(Qi)[1]}}async function no(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];K(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Ei.getLoadHandlers(e);K(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),K(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Ei.getSaveHandlers(t);K(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),K(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=to(e).scheme,l=to(e).path,u=o===to(e).scheme,d=await a.load();n&&u&&await eo.getManager(o).removeModel(l);let h=await i.save(d);return n&&!u&&await eo.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ro(){let e=eo.getSchemes(),t={};for(let n of e){let e=await eo.getManager(n).listModels();for(let r in e){t[n+Qi+r]=e[r]}}return t}async function ao(e){let t=to(e);return eo.getManager(t.scheme).removeModel(t.path)}async function so(e,t){return no(e,t,!1)}async function io(e,t){return no(e,t,!0)}if(Le().get("IS_BROWSER")){Le().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Le().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return wa(e)}});try{eo.registerManager(Zi.URL_SCHEME,new class{constructor(){K(Le().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),K("undefined"==typeof window||"undefined"!=typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=Vi+Wi,n=Wi+Ui;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Yi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=Ki(e=function(e){return e.startsWith(Zi.URL_SCHEME)?e.slice(Zi.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Xi(t),n}})}catch(ss){}try{eo.registerManager(Pi.URL_SCHEME,new class{constructor(){this.indexedDB=Li()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Di,1);n.onupgradeneeded=()=>zi(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Oi,"readonly"),s=a.objectStore(Oi).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Pi.URL_SCHEME)?e.slice(Pi.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Di,1);r.onupgradeneeded=()=>zi(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Oi,"readwrite"),o=i.objectStore(Oi),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Mi,"readwrite");let r=a.objectStore(Mi).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(ss){}}var oo,lo=()=>y();function uo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",$e(e),new Ja(e,t,n)}Le().get("IS_NODE")&&!Le().get("IS_BROWSER")&&Le().setPlatform("node",new class{constructor(){this.util=b(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Le().global.fetch?Le().global.fetch(e,t):(null==oo&&(oo=lo()),oo(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var ho=Ps({cast_:function(e,t){let n=Os(e,"x","cast");if(!ce(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Ns.runKernel(pt,r,a)}});var po=Ps({clone_:function(e){let t={x:Os(e,"x","clone","string_or_numeric")};return Ns.runKernel(an,t)}});function co(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Ss(),function(e){es=e}({buffer:uo,cast:ho,clone:po,print:co});var fo=Ps({add_:function(e,t){let n=Os(e,"a","add"),r=Os(t,"b","add");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(He,a)}});var mo=Ps({floorDiv_:function(e,t){let n=Os(e,"a","floorDiv"),r=Os(t,"b","floorDiv");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(Jt,a)}});var go=Ps({div_:function(e,t){let n=Os(e,"a","div"),r=Os(t,"b","div");if([n,r]=gs(n,r),"int32"===n.dtype&&"int32"===r.dtype)return mo(n,r);let a={a:n,b:r};return Ns.runKernel(Pt,a,{})}});var yo=Ps({mul_:function(e,t){let n=Os(e,"a","mul"),r=Os(t,"b","mul");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(Pn,a)}});var bo=Ps({abs_:function(e){let t=Os(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ns.runKernel(gt,e)}{let e={x:t};return Ns.runKernel(Ve,e)}}});var xo=Ps({acos_:function(e){let t={x:Os(e,"x","acos")};return Ns.runKernel(Ue,t)}});var vo=Ps({acosh_:function(e){let t={x:Os(e,"x","acosh")};return Ns.runKernel(Ge,t)}});var wo=Ps({addN_:function(e){K(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),K(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Os(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ee(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return Ns.runKernel(je,r)}});var ko=Ps({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Os(e,"x","all","bool")},a={axis:t,keepDims:n};return Ns.runKernel(qe,r,a)}});var Io=Ps({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Os(e,"x","any","bool")},a={axis:t,keepDims:n};return Ns.runKernel(Ke,r,a)}});var So=Ps({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Os(e,"x","argMax")},r={axis:t};return Ns.runKernel(Xe,n,r)}});var No=Ps({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Os(e,"x","argMin")},r={axis:t};return Ns.runKernel(Ye,n,r)}});var To=Ps({asin_:function(e){let t={x:Os(e,"x","asin")};return Ns.runKernel(Ze,t)}});var _o=Ps({asinh_:function(e){let t={x:Os(e,"x","asinh")};return Ns.runKernel(Je,t)}});var Co=Ps({atan_:function(e){let t={x:Os(e,"x","atan")};return Ns.runKernel(Qe,t)}});var Eo=Ps({atan2_:function(e,t){let n=Os(e,"a","atan2"),r=Os(t,"b","atan2");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(tt,a)}});var $o=Ps({atanh_:function(e){let t={x:Os(e,"x","atanh")};return Ns.runKernel(et,t)}});function Ao(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return Do(e,[...t,e[3]],n,s,r,null,null,Go(a))}function Ro(e,t,n,r,a,s){let i,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",[l,u]=Lo(t);if("channelsLast"===o)i=[l,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);i=[l,u,e[1],e[1]]}return Do(e,i,n,r,a,s,!1,o)}function Fo(e,t,n,r,a,s){let i,o,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC",[u,d,h]=zo(t);if("NDHWC"===l)o="channelsLast",i=[u,d,h,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);o="channelsFirst",i=[u,d,h,e[1],e[1]]}return Mo(e,i,n,r,a,!1,o,s)}function Do(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,d,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,d]=e}let p,[c,f,,m]=t,[g,y]=Lo(n),[b,x]=Lo(r),v=Po(c,b),w=Po(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,d,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Oo(e,t,n));let s=e[0],i=e[1],o=Bo((s-t+2*r)/n+1,a),l=Bo((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);let e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,c=Math.floor(o/2);u={top:l,bottom:p,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let p="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:c,left:f,right:m,type:0===p&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=Bo((t-s+p+c)/r+1,o),h=Bo((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:h}}(a,u,d,g,y,v,w,s,o),N=i?m*h:m;return"channelsFirst"===o?p=[l,N,I,S]:"channelsLast"===o&&(p=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:p,filterShape:t}}function Mo(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,d,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,d,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,d,h]=e}let c,[f,m,g,,y]=t,[b,x,v]=zo(n),[w,k,I]=zo(r),S=Po(f,w),N=Po(m,k),T=Po(g,I),{padInfo:_,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,d){let h,p,c,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function(e,t,n,r,a,s){null==a&&(a=Oo(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=Bo((e[o]-t[o]+2*a)/r[o]+1,s));return i}([t,n,r,1],[o,l,u],1,[a,s,i],e,d);p=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{p=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(p-1)*a+o-t,d=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(d/2),x=d-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:p,outHeight:c,outWidth:f}}(a,u,d,h,b,x,v,S,N,T,o),A=s?y*p:y;return"channelsFirst"===i?c=[l,A,C,E,$]:"channelsLast"===i&&(c=[l,C,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Oo(e,t,n){let r=Po(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function Lo(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function zo(e){return"number"==typeof e?[e,e,e]:e}function Po(e,t){return t<=1?e:e+(e-1)*(t-1)}function Bo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Wo(e){let[t,n,r]=Lo(e);return 1===t&&1===n&&1===r}function Vo(e,t){return Wo(e)||Wo(t)}function Uo(e){return Lo(e).every((e=>e>0))}function Go(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ho(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)K(te(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{K(te(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var jo=Ps({reshape_:function(e,t){let n={x:Os(e,"x","reshape","string_or_numeric")},r={shape:t};return Ns.runKernel(ir,n,r)}});var qo=Ps({avgPool_:function(e,t,n,r,a){let s=Os(e,"x","avgPool","float32");K(Vo(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=jo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),K(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Ho("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=Ns.runKernel(nt,l,u);return d=ho(d,s.dtype),o?jo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Ko=Ps({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=Os(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),K(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),K("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),K("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Ho("avgPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Ns.runKernel(at,u,d);return h=ho(h,o.dtype),l?jo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Xo=Ps({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;K(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Ls(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return po(n[0]);let r=n,a={axis:t};return Ns.runKernel(yt,r,a)}});var Yo=Ps({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Os(e,"a","matMul"),s=Os(t,"b","matMul");[a,s]=gs(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return Ns.runKernel(it,i,o)}});var Zo=Ps({sigmoid_:function(e){let t={x:Os(e,"x","sigmoid","float32")};return Ns.runKernel(Sr,t)}});var Jo=Ps({slice_:function(e,t,n){let r=Os(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Ns.runKernel(vr,a,s)}});var Qo=Ps({tanh_:function(e){let t={x:Os(e,"x","tanh","float32")};return Ns.runKernel(Hr,t)}});var el=Ps({basicLSTMCell_:function(e,t,n,r,a,s){let i=Os(e,"forgetBias","basicLSTMCell"),o=Os(t,"lstmKernel","basicLSTMCell"),l=Os(n,"lstmBias","basicLSTMCell"),u=Os(r,"data","basicLSTMCell"),d=Os(a,"c","basicLSTMCell"),h=Os(s,"h","basicLSTMCell"),p=Xo([u,h],1),c=Yo(p,o),f=fo(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Jo(f,[0,0],y),x=Jo(f,[0,g],y),v=Jo(f,[0,2*g],y),w=Jo(f,[0,3*g],y),k=fo(yo(Zo(b),Qo(x)),yo(d,Zo(fo(i,v))));return[k,yo(Qo(k),Zo(w))]}});var tl=Ps({batchToSpaceND_:function(e,t,n){let r=Os(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));K(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),K(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),K(r.shape[0]%a===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return Ns.runKernel(ot,s,i)}});function nl(e){let t;return t=0===e.rank||1===e.rank?jo(e,[1,1,1,e.size]):2===e.rank?jo(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?jo(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var rl=Ps({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Os(e,"x","batchNorm"),u=Os(t,"mean","batchNorm"),d=Os(n,"variance","batchNorm");null!=a&&(i=Os(a,"scale","batchNorm")),null!=r&&(o=Os(r,"offset","batchNorm")),K(u.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),K(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),K(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let h={x:nl(l),scale:i,offset:o,mean:u,variance:d},p={varianceEpsilon:s},c=Ns.runKernel(Qt,h,p);return jo(c,l.shape)}});var al=Ps({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Os(e,"x","batchNorm"),u=Os(t,"mean","batchNorm"),d=Os(n,"variance","batchNorm");return null!=a&&(i=Os(a,"scale","batchNorm")),null!=r&&(o=Os(r,"offset","batchNorm")),K(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),K(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),K(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=i&&K(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&K(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),rl(l,u,d,o,i,s)}});var sl=Ps({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Os(e,"x","batchNorm"),u=Os(t,"mean","batchNorm"),d=Os(n,"variance","batchNorm");return null!=a&&(i=Os(a,"scale","batchNorm")),null!=r&&(o=Os(r,"offset","batchNorm")),K(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),K(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),K(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=i&&K(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&K(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),rl(l,u,d,o,i,s)}});var il=Ps({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Os(e,"x","batchNorm"),u=Os(t,"mean","batchNorm"),d=Os(n,"variance","batchNorm");return null!=a&&(i=Os(a,"scale","batchNorm")),null!=r&&(o=Os(r,"offset","batchNorm")),K(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),K(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),K(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=i&&K(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&K(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),rl(l,u,d,o,i,s)}});var ol=Ps({bincount_:function(e,t,n){let r=Os(e,"x","bincount"),a=Os(t,"weights","bincount");K("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),K(n>=0,(()=>`size must be non-negative, but got ${n}.`)),K(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return Ns.runKernel(lt,s,i)}});var ll=Ps({bitwiseAnd_:function(e,t){let n=Os(e,"x","bitwiseAnd"),r=Os(t,"y","bitwiseAnd");if(!ee(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return Ns.runKernel(ut,a)}});var ul=Ps({broadcastArgs_:function(e,t){let n=Os(e,"s0","broadcastArgs","int32"),r=Os(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return Ns.runKernel(ht,a)}});var dl=Ps({broadcastTo_:function(e,t){let n=Os(e,"broadcastTo","x"),r=n.shape;if($e(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=jo(n,e)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return po(n);let i={x:n},o={reps:s};return Ns.runKernel(jr,i,o)}});var hl=Ps({ceil_:function(e){let t={x:Os(e,"x","ceil","float32")};return Ns.runKernel(ct,t)}});function pl(e,t,n){$e(e);let r={shape:e,value:t,dtype:n=n||ve(t)};return Ns.runKernel(Xt,{},r)}var cl=Ps({clipByValue_:function(e,t,n){let r=Os(e,"x","clipByValue");if(K(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return pl(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return Ns.runKernel(ft,a,s)}});var fl=Ps({concat1d_:function(e){return Xo(e,0)}});var ml=Ps({concat2d_:function(e,t){return Xo(e,t)}});var gl=Ps({concat3d_:function(e,t){return Xo(e,t)}});var yl=Ps({concat4d_:function(e,t){return Xo(e,t)}});var bl=Ps({conv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=Os(e,"x","conv2d","float32"),l=Os(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),K(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),K(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Ho("conv2d",r,i);let h="NHWC"===a?u.shape[3]:u.shape[1];K(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),K(Vo(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),K(Uo(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),K(Uo(n),(()=>"Error in conv2D: Strides should be larger than 0."));let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ns.runKernel(bt,p,c);return d?jo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var xl=Ps({conv1d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,o=Os(e,"x","conv1d"),l=Os(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=jo(o,[1,o.shape[0],o.shape[1]])),K(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),K(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Ho("conv1d",r,i),K(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),K(Vo(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),K(Uo(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),K(Uo(n),(()=>"Error in conv1D: Stride should be larger than 0.")),K("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let h=jo(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=jo(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=bl(p,h,[1,n],r,"NHWC",[1,s],i);return jo(c,d?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var vl=Ps({conv2DBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;K(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=jo(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),K(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),K(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),K(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let d="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];K(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),K(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Ho("conv2dDerInput",a,i);let p={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Ns.runKernel(vt,p,c);return u?jo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var wl=Ps({conv2dTranspose_:function(e,t,n,r,a,s){let i=Os(e,"x","conv2dTranspose"),o=Os(t,"filter","conv2dTranspose");return vl(n,i,o,r,a,"NHWC",s)}});var kl=Ps({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],i=Os(e,"x","conv3d"),o=Os(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),K(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),K(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),K(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),K(Vo(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),K("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),K(Uo(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),K(Uo(n),(()=>"Error in conv3D: Strides should be larger than 0."));let d={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=Ns.runKernel(wt,d,h);return u?jo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Il=Ps({conv3DBackpropInput_:function(e,t,n,r,a){K(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=jo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];K(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),K(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),K(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),K(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),K(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let d={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=Ns.runKernel(It,d,h);return o?jo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Sl=Ps({conv3dTranspose_:function(e,t,n,r,a){let s=Os(e,"x","conv3dTranspose"),i=Os(t,"filter","conv3dTranspose");return Il(n,s,i,r,a)}});var Nl=Ps({cos_:function(e){let t={x:Os(e,"x","cos","float32")};return Ns.runKernel(St,t)}});var Tl=Ps({cosh_:function(e){let t={x:Os(e,"x","cosh","float32")};return Ns.runKernel(Nt,t)}});var _l=Ps({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={x:Os(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Ns.runKernel(Tt,a,s)}});var Cl=Ps({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={x:Os(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Ns.runKernel(_t,a,s)}});var El=Ps({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Os(e,"x","denseBincount"),s=Os(t,"weights","denseBincount");K("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),K(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),K(n>=0,(()=>`size must be non-negative, but got ${n}.`)),K(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return Ns.runKernel(Et,i,o)}});var $l=Ps({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC",r=Os(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];K(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),K(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),K(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),K(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return Ns.runKernel($t,o,l)}});var Al=Ps({depthwiseConv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=Os(e,"x","depthwiseConv2d","float32"),l=Os(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),K(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),K(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let h="NHWC"===a?u.shape[3]:u.shape[1];K(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Ho("depthwiseConv2d",r,i);let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ns.runKernel(At,p,c);return d?jo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Rl=Ps({diag_:function(e){let t={x:Os(e,"x","diag")};return Ns.runKernel(Dt,t)}});var Fl=Ps({dilation2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=Os(e,"x","dilation2d"),o=Os(t,"filter","dilation2d");K(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),K(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),K("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=jo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),K(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));let d={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=Ns.runKernel(Mt,d,h);return u?jo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Dl={};function Ml(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Ol(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Ll(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else{if(s!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=s}}return r}f(Dl,{assertAndGetBroadcastShape:()=>Ll,getBroadcastDims:()=>Ml,getReductionAxes:()=>Ol});var zl=Ps({equal_:function(e,t){let n=Os(e,"a","equal","string_or_numeric"),r=Os(t,"b","equal","string_or_numeric");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(Gt,a)}});var Pl=Ps({where_:function(e,t,n){let r=Os(t,"a","where"),a=Os(n,"b","where"),s=Os(e,"condition","where","bool"),i=Ll(Ll(s.shape,r.shape),a.shape),o={condition:dl(s,i),t:dl(r,i),e:dl(a,i)};return Ns.runKernel(br,o)}});var Bl=Ps({zerosLike_:function(e){let t={x:Os(e,"x","zerosLike")};return Ns.runKernel(ea,t)}});var Wl=Ps({divNoNan_:function(e,t){let n=Os(e,"a","div"),r=Os(t,"b","div");[n,r]=gs(n,r);let a=go(n,r),s=Bl(a),i=zl(r,s);return Pl(i,s,a)}});var Vl=Ps({dot_:function(e,t){let n=Os(e,"t1","dot"),r=Os(t,"t2","dot");K((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(K(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=jo(n,[1,-1]),t=jo(r,[-1,1]),a=Yo(e,t);return jo(a,[])}if(1===n.rank&&2===r.rank){let e=jo(n,[1,-1]),t=jo(r,[r.shape[0],r.shape[1]]),a=Yo(e,t);return jo(a,[a.size])}if(2===n.rank&&1===r.rank){let e=jo(r,[-1,1]),t=Yo(n,e);return jo(t,[t.size])}{let e=jo(r,[r.shape[0],r.shape[1]]);return Yo(n,e)}}});var Ul=Ps({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];let a=n.map(((e,t)=>Os(e,`tensors${t}`,"einsum"))),s={equation:e};return Ns.runKernel(Bt,a,s)}});var Gl=Ps({elu_:function(e){let t={x:Os(e,"x","elu","float32")};return Ns.runKernel(Wt,t)}});var Hl=Ps({ensureShape_:function(e,t){let n=Os(e,"x","ensureShape","string_or_numeric");if(!Q(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var jl=Ps({erf_:function(e){let t=Os(e,"x","erf");K("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ho(t,"float32"));let n={x:t};return Ns.runKernel(Ut,n)}});function ql(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Kl(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Xl(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Yl(e,t){return Kl(e,t.map((e=>1)),t)}function Zl(e,t,n){K(ql(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Jl(e,t){if(ql(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ql(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function eu(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var tu=Ps({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Os(e,"x","max")},a={reductionIndices:t,keepDims:n};return Ns.runKernel(Tn,r,a)}});var nu=Ps({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Os(e,"x","min")},a={axis:t,keepDims:n};return Ns.runKernel(Dn,r,a)}});var ru=Ps({pow_:function(e,t){let n=Os(e,"base","pow"),r=Os(t,"exp","pow");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(Yn,a)}});function au(e,t){if((Va(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Va(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ws(e,[],[],t)}var su=Ps({sqrt_:function(e){let t={x:Os(e,"x","sqrt","float32")};return Ns.runKernel(Tr,t)}});var iu=Ps({square_:function(e){let t=Os(e,"x","square");return Ns.runKernel("Square",{x:t},{})}});var ou=Ps({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Os(e,"x","sum");"bool"===r.dtype&&(r=ho(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ns.runKernel(_r,a,s)}});function lu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return bo(e);if(1!==e.rank&&null===n)return lu(jo(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ou(bo(e),n);if(t===1/0)return tu(bo(e),n);if(t===-1/0)return nu(bo(e),n);if("euclidean"===t||2===t)return su(ou(ru(bo(e),au(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return tu(ou(bo(e),n[0]),n[1]-1);if(t===1/0)return tu(ou(bo(e),n[1]),n[0]);if(t===-1/0)return nu(ou(bo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return su(ou(iu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var uu=Ps({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=lu(e=Os(e,"x","norm"),t,n),s=a.shape;if(r){let t=le(n,e.shape);s=Yl(a.shape,t)}return jo(a,s)}});var du=Ps({euclideanNorm_:function(e){return uu(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});var hu=Ps({exp_:function(e){let t={x:Os(e,"x","exp")};return Ns.runKernel(Ht,t)}});var pu=Ps({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Os(e,"x","expandDims","string_or_numeric");K(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return Ns.runKernel(jt,r,a)}});var cu=Ps({expm1_:function(e){let t={x:Os(e,"x","expm1")};return Ns.runKernel(qt,t)}});var fu=Ps({tile_:function(e,t){let n=Os(e,"x","tile","string_or_numeric");K(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return Ns.runKernel(jr,r,a)}});var mu=Ps({eye_:function(e,t,n){null==t&&(t=e);let r=uo([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let s=jo(r.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return fu(pu(s,0),[n[0],1,1]);if(2===n.length)return fu(pu(pu(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return fu(pu(pu(pu(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var gu=Ps({floor_:function(e){let t={x:Os(e,"x","floor","float32")};return Ns.runKernel(Zt,t)}});var yu=Ps({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a={x:Os(e,"x","gather"),indices:Os(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Ns.runKernel(en,a,s)}});var bu=Ps({greater_:function(e,t){let n=Os(e,"a","greater","string_or_numeric"),r=Os(t,"b","greater","string_or_numeric");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(nn,a)}});var xu=Ps({greaterEqual_:function(e,t){let n=Os(e,"a","greaterEqual","string_or_numeric"),r=Os(t,"b","greaterEqual","string_or_numeric");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(rn,a)}});var vu=Ps({imag_:function(e){let t={input:Os(e,"input","imag")};return Ns.runKernel(on,t)}});var wu=Ps({isFinite_:function(e){let t={x:Os(e,"x","isFinite")};return Ns.runKernel(ln,t)}});var ku=Ps({isInf_:function(e){let t={x:Os(e,"x","isInf")};return Ns.runKernel(un,t)}});var Iu=Ps({isNaN_:function(e){let t={x:Os(e,"x","isNaN")};return Ns.runKernel(dn,t)}});var Su=Ps({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2,n={x:Os(e,"x","leakyRelu")},r={alpha:t};return Ns.runKernel(hn,n,r)}});var Nu=Ps({less_:function(e,t){let n=Os(e,"a","less","string_or_numeric"),r=Os(t,"b","less","string_or_numeric");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(pn,a)}});var Tu=Ps({lessEqual_:function(e,t){let n=Os(e,"a","lessEqual","string_or_numeric"),r=Os(t,"b","lessEqual","string_or_numeric");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(cn,a)}});function _u(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Ns.runKernel(fn,{},r)}var Cu=Ps({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5,s=Os(e,"x","localResponseNormalization");K(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),K(te(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=jo(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},d=Ns.runKernel(In,l,u);return o?jo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Eu=Ps({log_:function(e){let t={x:Os(e,"x","log","float32")};return Ns.runKernel(mn,t)}});var $u=Ps({log1p_:function(e){let t={x:Os(e,"x","log1p")};return Ns.runKernel(gn,t)}});function Au(e){return K(we(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Os(t,"x","tf.grad","string_or_numeric"),a=null!=n?Os(n,"dy","tf.grad"):null;return Ns.tidy((()=>{let{value:t,grads:n}=Ns.gradients((()=>e(r)),[r],a);return null!=a&&X(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Lu(n),n[0]}))}}function Ru(e){return K(we(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{K(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=Ls(t,"args","tf.grads","string_or_numeric"),a=null!=n?Os(n,"dy","tf.grads"):null;return Ns.tidy((()=>{let{value:t,grads:n}=Ns.gradients((()=>e(...r)),r,a);return null!=a&&X(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Lu(n),n}))}}function Fu(e){return K(we(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{K(t instanceof ts,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),K(null==n||n instanceof ts,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=Ns.gradients((()=>e(t)),[t],n);return Lu(r),{grad:r[0],value:a}}}function Du(e){return K(we(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{K(Array.isArray(t)&&t.every((e=>e instanceof ts)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),K(null==n||n instanceof ts,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=Ns.gradients((()=>e(...t)),t,n);return null!=n&&X(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Lu(r.grads),r}}function Mu(e,t){K(we(e),(()=>"The f passed in variableGrads(f) must be a function")),K(null==t||Array.isArray(t)&&t.every((e=>e instanceof rs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Ns.registeredVariables)t.push(Ns.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;K((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=Ns.gradients(e,t,null,!0);K(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),K(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Ou(e){return Ns.customGrad(e)}function Lu(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var zu=Ps({neg_:function(e){let t={x:Os(e,"x","neg")};return Ns.runKernel(Bn,t)}});var Pu=Ps({softplus_:function(e){let t={x:Os(e,"x","softplus")};return Ns.runKernel(Nr,t)}});var Bu=Ps({logSigmoid_:function(e){let t=Os(e,"x","logSigmoid");return Ou((e=>({value:zu(Pu(zu(e))),gradFunc:t=>yo(t,Zo(zu(e)))})))(t)}});var Wu=Ps({sub_:function(e,t){let n=Os(e,"a","sub"),r=Os(t,"b","sub");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(Ur,a)}});var Vu=Ps({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=Os(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Ou(((e,n)=>{let r=tu(e,t,!0),a=Wu(e,r),s=Wu(ho(a,"float32"),Eu(ou(hu(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=hu(r);return Wu(e,yo(ou(e,t,!0),a))}}}))(n)}});var Uu=Ps({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Os(e,"x","logSumExp"),a=le(t,r.shape),s=tu(r,a,!0),i=Wu(r,s),o=hu(i),l=ou(o,a),u=Eu(l),d=fo(jo(s,u.shape),u);if(n){let e=Yl(d.shape,a);return jo(d,e)}return d}});var Gu=Ps({logicalAnd_:function(e,t){let n=Os(e,"a","logicalAnd","bool"),r=Os(t,"b","logicalAnd","bool");Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(yn,a)}});var Hu=Ps({logicalNot_:function(e){let t={x:Os(e,"x","logicalNot","bool")};return Ns.runKernel(bn,t)}});var ju=Ps({logicalOr_:function(e,t){let n=Os(e,"a","logicalOr","bool"),r=Os(t,"b","logicalOr","bool");Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(xn,a)}});var qu=Ps({logicalXor_:function(e,t){let n=Os(e,"a","logicalXor","bool"),r=Os(t,"b","logicalXor","bool");return Ll(n.shape,r.shape),Gu(ju(e,t),Hu(Gu(e,t)))}}),Ku=2147483648;var Xu=Ps({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left",r=Os(e,"sortedSequence","searchSorted"),a=Os(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=jo(r,[-1,s]),l=jo(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Z(l.shape)>=Ku)throw new Error(`values tensor size must less than ${Ku}`);if(o.shape[1]>=Ku)throw new Error(`trailing dim_size must less than ${Ku} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:n};return Ns.runKernel(yr,u,d)}});function Yu(e,t){return Xu(e,t,"left")}var Zu=Ps({maxPool_:function(e,t,n,r,a){let s=Os(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=jo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),K(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),K(Vo(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ho("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=Ns.runKernel(Cn,l,u);return o?jo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Ju=Ps({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=Os(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),K(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),K("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ho("maxPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Ns.runKernel($n,u,d);return l?jo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Qu=Ps({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s={x:Os(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Ns.runKernel(Rn,s,i);return{result:o[0],indexes:o[1]}}});var ed=Ps({maximum_:function(e,t){let n=Os(e,"a","maximum"),r=Os(t,"b","maximum");[n,r]=gs(n,r),"bool"===n.dtype&&(n=ho(n,"int32"),r=ho(r,"int32")),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(_n,a)}});var td=Ps({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Os(e,"x","mean")},a={axis:t,keepDims:n};return Ns.runKernel(Fn,r,a)}});function nd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if($e(e),"complex64"===t){let t=nd(e,"float32"),n=nd(e,"float32");return Bs(t,n)}let n=Ce(Z(e),t);return Ns.makeTensor(n,e,t)}function rd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if($e(e),"complex64"===t){let t=rd(e,"float32"),n=nd(e,"float32");return Bs(t,n)}let n=_e(Z(e),t);return Ns.makeTensor(n,e,t)}function ad(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Os(e,"x","meshgrid",e instanceof ts?e.dtype:"float32");if(void 0===t)return[r];let a=Os(t,"y","meshgrid",t instanceof ts?t.dtype:"float32"),s=Z(r.shape),i=Z(a.shape);return"xy"===n?(r=jo(r,[1,-1]),a=jo(a,[-1,1]),[Yo(rd([i,1],r.dtype),r),Yo(a,rd([1,s],a.dtype))]):(r=jo(r,[-1,1]),a=jo(a,[1,-1]),[Yo(r,rd([1,i],r.dtype)),Yo(rd([s,1],a.dtype),a)])}var sd=Ps({minimum_:function(e,t){let n=Os(e,"a","minimum"),r=Os(t,"b","minimum");[n,r]=gs(n,r),"bool"===n.dtype&&(n=ho(n,"int32"),r=ho(r,"int32")),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(Mn,a)}});var id=Ps({mirrorPad_:function(e,t,n){K("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Os(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");K(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)K(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),K(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return Ns.runKernel(On,i,s)}});var od=Ps({mod_:function(e,t){let n=Os(e,"a","mod"),r=Os(t,"b","mod");[n,r]=gs(n,r);let a={a:n,b:r};return Ns.runKernel(Ln,a)}});var ld=Ps({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=le(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=Os(e,"x","moments")).shape),r=td(e,n,t),a=r.shape;t||(a=Yl(r.shape,n));let s=iu(Wu(ho(e,"float32"),jo(r,a)));return{mean:r,variance:td(s,n,t)}}});var ud=Ps({multiRNNCell_:function(e,t,n,r){let a=Os(t,"data","multiRNNCell"),s=Ls(n,"c","multiRNNCell"),i=Ls(r,"h","multiRNNCell"),o=a,l=[];for(let h=0;h<e.length;h++){let t=e[h](o,s[h],i[h]);l.push(t[0]),l.push(t[1]),o=t[1]}let u=[],d=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),d.push(l[h+1]);return[u,d]}});var dd=Ps({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Os(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?jo(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Ns.runKernel(zn,o,l);return 1===i?jo(u,[u.size]):u}});var hd=Ps({notEqual_:function(e,t){let n=Os(e,"a","notEqual","string_or_numeric"),r=Os(t,"b","notEqual","string_or_numeric");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(Wn,a)}});var pd=Ps({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:Os(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return Ns.runKernel(jn,s,i)}});var cd=Ps({onesLike_:function(e){let t={x:Os(e,"x","onesLike")};return Ns.runKernel(Hn,t)}});var fd=Ps({outerProduct_:function(e,t){let n=Os(e,"v1","outerProduct"),r=Os(t,"v2","outerProduct");K(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=jo(n,[-1,1]),s=jo(r,[1,-1]);return Yo(a,s)}});var md=Ps({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=Os(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Ns.runKernel(Kn,s,a)}});var gd=Ps({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return K(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),md(e,[t],n)}});var yd=Ps({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return K(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),md(e,t,n)}});var bd=Ps({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return K(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),md(e,t,n)}});var xd=Ps({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return K(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),md(e,t,n)}});var vd=Ps({spaceToBatchND_:function(e,t,n){let r=Os(e,"x","spaceToBatchND");K(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),K(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),K(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return Ns.runKernel(Cr,a,s)}});var wd=Ps({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=Os(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),K(Vo(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let d,h=Ro(l.shape,t,s,a,r),p=[h.dilationHeight,h.dilationWidth];d="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];let c=1===p[0]&&1===p[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],p,d),g=c?r:"valid",y=c?l:vd(l,p,f),b=("avg"===n?()=>qo(y,t,s,g,i):()=>Zu(y,t,s,g,i))(),x=c?b:tl(b,p,m);return u?jo(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var kd=Ps({prelu_:function(e,t){let n={x:Os(e,"x","prelu"),alpha:Os(t,"alpha","prelu")};return Ns.runKernel(Zn,n)}});var Id=Ps({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Os(e,"x","prod");"bool"===r.dtype&&(r=ho(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ns.runKernel(Jn,a,s)}});var Sd=Ps({raggedGather_:function(e,t,n,r){let a={paramsNestedSplits:e.map(((e,t)=>Os(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:Os(t,"paramsDenseValues","raggedGather"),indices:Os(n,"indices","raggedGather","int32")},s={outputRaggedRank:r},i=Ns.runKernel(Qn,a,s);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});var Nd=Ps({raggedRange_:function(e,t,n){let r=Os(e,"starts","raggedRange"),a={starts:r,limits:Os(t,"limits","raggedRange",r.dtype),deltas:Os(n,"deltas","raggedRange",r.dtype)},s=Ns.runKernel(er,a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});var Td=Ps({raggedTensorToTensor_:function(e,t,n,r,a){let s=Os(e,"shape","raggedTensorToTensor","int32"),i=Os(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:Os(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>Os(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:a};return Ns.runKernel(tr,o,l)}});var _d=Ps({rand_:function(e,t,n){$e(e);let r=Z(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return Ns.makeTensor(a,e,n)}}),Cd=m(_()),Ed={};f(Ed,{TEST_EPSILON_FLOAT16:()=>Ad,createVideoElement:()=>Vd,encodeStrings:()=>Wd,expectArrayBuffersEqual:()=>Bd,expectArraysClose:()=>Rd,expectArraysEqual:()=>Od,expectNumbersClose:()=>Ld,expectPromiseToFail:()=>Md,expectValuesInRange:()=>Pd,play:()=>Ud,testEpsilon:()=>Fd});var $d=.001,Ad=.1;function Rd(e,t,n){return null==n&&(n=Fd()),Dd(e,t,((e,t)=>zd(e,t,n)))}function Fd(){return 32===Ns.backend.floatPrecision()?$d:Ad}function Dd(e,t,n){let r=!0;if((Va(e)||Va(t))&&(r=!1),Va(e)&&Va(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Fs(e),r=Fs(t);if(!ee(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=Va(e)?e:Ua(e),s=Va(t)?t:Ua(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){let e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function Md(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Od(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ye(e)||ye(e[0])||ye(t)||ye(t[0])?Dd(e,n,((e,t)=>e==t)):Dd(e,t,((e,t)=>zd(e,t,0)))}function Ld(e,t,n){if(null==n&&(n=Fd()),!zd(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function zd(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Pd(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Bd(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function Wd(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Wd(n):e[t]=Ba(n)}return e}function Vd(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Ud(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var Gd=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Cd.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Hd=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Cd.alea(a.toString()),this.randn=new Gd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},jd=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Cd.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};var qd=Ps({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if($e(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new Hd(t,n,r,a),i=uo(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var Kd=Ps({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if($e(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Gd(t,n,r,!1,a),i=uo(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var Xd=Ps({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Kd(e,0,1,t,n)}});var Yd=Ps({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;$e(e);let s=uo(e,r),i=new jd(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});var Zd=Ps({randomUniformInt_:function(e,t,n,r){return Yd(e,t,n,"int32",r)}});function Jd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Ns.runKernel(nr,{},a)}var Qd=Ps({real_:function(e){let t={input:Os(e,"input","real")};return Ns.runKernel(rr,t)}});var eh=Ps({reciprocal_:function(e){let t={x:Os(e,"x","reciprocal")};return Ns.runKernel(ar,t)}});var th=Ps({relu_:function(e){let t={x:Os(e,"x","relu")};return Ns.runKernel(sr,t)}});var nh=Ps({relu6_:function(e){let t={x:Os(e,"x","relu6")};return Ns.runKernel(hr,t)}});var rh=Ps({reverse_:function(e,t){let n={x:Os(e,"x","reverse")},r={dims:t};return Ns.runKernel(pr,n,r)}});var ah=Ps({reverse1d_:function(e){let t=Os(e,"x","reverse");return K(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),rh(t,0)}});var sh=Ps({reverse2d_:function(e,t){let n=Os(e,"x","reverse");return K(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),rh(n,t)}});var ih=Ps({reverse3d_:function(e,t){let n=Os(e,"x","reverse");return K(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),rh(n,t)}});var oh=Ps({reverse4d_:function(e,t){let n=Os(e,"x","reverse");return K(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),rh(n,t)}});var lh=Ps({round_:function(e){let t={x:Os(e,"x","round")};return Ns.runKernel(cr,t)}});var uh=Ps({rsqrt_:function(e){let t={x:Os(e,"x","rsqrt","float32")};return Ns.runKernel(fr,t)}});var dh=Ps({selu_:function(e){let t={x:Os(e,"x","selu")};return Ns.runKernel(xr,t)}});var hh=Ps({separableConv2d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC",o=Os(e,"x","separableConv2d"),l=Os(t,"depthwiseFilter","separableConv2d"),u=Os(n,"pointwiseFilter","separableConv2d"),d=o,h=!1;if(3===o.rank&&(h=!0,d=jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");K(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),K(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),K(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),K(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),K(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let p=l.shape[2],c=l.shape[3];K(u.shape[2]===p*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${u.shape[2]}.`));let f=Al(d,l,r,a,i,s),m=bl(f,u,1,"valid",i);return h?jo(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var ph=async function(e,t){let n=Os(e,"x","setdiff1d"),r=Os(t,"y","setdiff1d");K(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),K(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),K(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let d=0;d<a.length;d++)i.has(a[d])||o++;let l=new Ja([o],n.dtype),u=new Ja([o],"int32");for(let d=0,h=0;d<a.length;d++)i.has(a[d])||(l.values[h]=a[d],u.values[h]=d,h++);return[l.toTensor(),u.toTensor()]};var ch=Ps({sign_:function(e){let t={x:Os(e,"x","sign")};return Ns.runKernel(Ir,t)}});var fh=Ps({sin_:function(e){let t={x:Os(e,"x","sin","float32")};return Ns.runKernel(wr,t)}});var mh=Ps({sinh_:function(e){let t={x:Os(e,"x","sinh")};return Ns.runKernel(kr,t)}});var gh=Ps({slice1d_:function(e,t,n){let r=Os(e,"x","slice1d");return K(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Jo(r,[t],[n])}});var yh=Ps({slice2d_:function(e,t,n){let r=Os(e,"x","slice2d");return K(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Jo(r,t,n)}});var bh=Ps({slice3d_:function(e,t,n){let r=Os(e,"x","slice3d");return K(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Jo(r,t,n)}});var xh=Ps({slice4d_:function(e,t,n){let r=Os(e,"x","slice4d");return K(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Jo(r,t,n)}});var vh=Ps({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=Os(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Ns.runKernel($r,r,a)}});var wh=Ps({fft_:function(e){K("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ns.runKernel(Kt,t)}});var kh=Ps({ifft_:function(e){K("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ns.runKernel(sn,t)}});var Ih=Ps({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=jo(e,[r,n]);t=kh(a)}else{let a=[r,2*(n-1)],s=jo(Qd(e),[r,n]),i=jo(vu(e),[r,n]),o=rh(Jo(s,[0,1],[r,n-2]),1),l=yo(rh(Jo(i,[0,1],[r,n-2]),1),au(-1)),u=Xo([s,o],1),d=Xo([i,l],1),h=jo(Bs(u,d),[a[0],a[1]]);t=kh(h)}if(t=Qd(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=jo(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var Sh=Ps({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r={x:Os(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Ns.runKernel(Er,r,a)}});var Nh=Ps({rfft_:function(e,t){K("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=Jo(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=Xo([e,nd(a)],e.shape.length-1),r=t}else n=e;let s=Bl(n),i=jo(Bs(n,s),[a,r]),o=wh(i),l=Math.floor(r/2)+1,u=Qd(o),d=vu(o),h=Sh(u,[l,r-l],u.shape.length-1),p=Sh(d,[l,r-l],d.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,jo(Bs(h[0],p[0]),c)}});var Th=Ps({squaredDifference_:function(e,t){let n=Os(e,"a","squaredDifference"),r=Os(t,"b","squaredDifference");[n,r]=gs(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ns.runKernel(Or,a,{})}});var _h=Ps({squeeze_:function(e,t){let n=Os(e,"x","squeeze","string_or_numeric");return jo(n,ue(n.shape,t).newShape)}});var Ch=Ps({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Ls(e,"tensors","stack","string_or_numeric");K(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&K(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return Ns.runKernel(qn,r,a)}});var Eh=Ps({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Os(e,"x","step")},r={alpha:t};return Ns.runKernel(ta,n,r)}});var $h=Ps({stridedSlice_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,u={x:Os(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ns.runKernel(Pr,u,d)}});var Ah=Ps({tan_:function(e){let t={x:Os(e,"x","tan","float32")};return Ns.runKernel(Gr,t)}});function Rh(e,t){Y(e);let n=Fs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ws(e,null,n,t)}function Fh(e,t,n){if(Y(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Fs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ws(e,t,r,n)}function Dh(e,t,n){if(Y(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Fs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ws(e,t,r,n)}function Mh(e,t,n){if(Y(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Fs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ws(e,t,r,n)}function Oh(e,t,n){if(Y(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Fs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ws(e,t,r,n)}function Lh(e,t,n){if(Y(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Fs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ws(e,t=t||r,r,n)}var zh={};function Ph(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Bh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ph(n,t,e)}function Wh(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let l=a;l<s;++l)i*=n[l];let o=a<1?1:a;return{sliceRank:a,numUpdates:Z(t.shape)/o,sliceSize:i,strides:[...Ie(n.slice(0,a)),1],outputSize:Z(n)}}f(zh,{calculateShapes:()=>Wh,validateInput:()=>Bh,validateUpdateShape:()=>Ph});var Vh=Ps({tensorScatterUpdate_:function(e,t,n){let r=Os(e,"tensor","tensorScatterupdate"),a=Os(t,"indices","tensorScatterupdate","int32"),s=Os(n,"updates","tensorScatterupdate");if(Bh(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s};return Ns.runKernel(gr,i,{})}});var Uh=Ps({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=Os(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Ns.runKernel(qr,s,i);return{values:o,indices:l}}});var Gh=Ps({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if($e(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Gd(t,n,r,!0,a),i=uo(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var Hh=Ps({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Os(e,"x","unique","string_or_numeric");K(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=Ns.runKernel(Yr,r,a);return{values:s,indices:i}}});var jh=Ps({unsortedSegmentSum_:function(e,t,n){let r=Os(e,"x","unsortedSegmentSum"),a=Os(t,"segmentIds","unsortedSegmentSum","int32");K(te(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return Ns.runKernel(Jr,s,i)}});var qh=Ps({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Os(e,"x","unstack","string_or_numeric");K(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return Ns.runKernel(Zr,r,a)}});function Kh(e,t){return Xu(e,t,"right")}function Xh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Ns.makeVariable(e,t,n,r)}function Yh(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=uo(e,"int32"),a=uo([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let t=r.indexToLoc(n[s]),i=s*e.length;a.values.set(t,i)}return a.toTensor()}var Zh=async function(e){let t=Os(e,"condition","whereAsync","bool"),n=await t.data(),r=Yh(t.shape,n);return e!==t&&t.dispose(),r};var Jh=async function(e,t,n){let r=Os(e,"tensor","boolMask"),a=Os(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;K(i>0,(()=>"mask cannot be scalar")),X(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=jo(r,u),h=jo(a,[-1]),p=await Zh(h),c=_h(p,[1]),f=yu(d,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),d.dispose(),h.dispose(),p.dispose(),f};var Qh=Ps({transpose_:function(e,t,n){let r=Os(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),K(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{K(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?Qs((()=>{let e=Qd(r),t=vu(r);return e=Ns.runKernel(Xr,{x:e},s),t=Ns.runKernel(Xr,{x:t},s),n&&(t=zu(t)),Bs(e,t)})):Ns.runKernel(Xr,a,s)}});var ep=Ps({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=Os(e,"v","movingAverage"),i=Os(t,"x","movingAverage"),o=Os(n,"decay","movingAverage");ys(s,i),K(ee(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=au(1),u=Wu(l,o),d=yo(Wu(i,s),u);if(a){K(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Os(r,"step","movingAverage");d=go(d,Wu(l,ru(o,e)))}return fo(s,d)}});var tp=Ps({scatterND_:function(e,t,n){$e(n);let r=Os(e,"indices","scatterND","int32"),a=Os(t,"updates","scatterND");Bh(a,r,n);let s={indices:r,updates:a},i={shape:n};return Ns.runKernel(mr,s,i)}});var np=Ps({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;$e(n);let a=Os(e,"sparseIndices","sparseToDense","int32"),s=Os(t,"sparseValues","sparseToDense","string_or_numeric"),i=Os(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Ns.runKernel(Mr,o,l)}});var rp=Ps({gatherND_:function(e,t){let n=Os(t,"indices","gatherND","int32"),r={params:Os(e,"x","gatherND","string_or_numeric"),indices:n};return Ns.runKernel(tn,r)}});var ap=Ps({dropout_:function(e,t,n,r){let a=Os(e,"x","dropout");if(K("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),K(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ts?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(ee(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=go(gu(fo(Yd(s,0,1,"float32",r),i)),i);return yo(a,o)}});function sp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ip(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Rh(a,"float32")}var op=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=Os(e,"predictions","inTopK"),a=Os(t,"targets","inTopK");K(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),K(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),X(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];K(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],d=de("bool",l);for(let h=0;h<l;h++){let e=h*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),d[h]=0;for(let a=0;a<n;a++)if(r[a].index===o[h]){d[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Vs(d,a.shape,"bool")},lp={};f(lp,{conv2d:()=>fp,depthwiseConv2d:()=>yp,matMul:()=>bp});var up=Ps({conv2DBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=jo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=jo(t,[1,t.shape[0],t.shape[1],t.shape[2]])),K(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),K(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),K(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];K(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),K(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),Ho("conv2dDerFilter",a,i);let h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Ns.runKernel(xt,h,p)}});function dp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return yo(e,Eh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function hp(e,t){let n=t,r=Ol(e.shape,t.shape);return r.length>0&&(n=ou(n,r)),jo(n,e.shape)}function pp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return th(e);if("elu"===t)return Gl(e);if("relu6"===t)return nh(e);if("prelu"===t)return kd(e,n);if("leakyrelu"===t)return Su(e,r);if("sigmoid"===t)return Zo(e);throw new Error(`Unknown fused activation ${t}.`)}var cp=(e,t)=>!(e>0)||"linear"===t;var fp=Ps({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:h}=e;if(u=u||"linear",!1===cp(Ns.state.gradientDepth,u)){K("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=bl(t,n,r,a,s,i,o);return null!=l&&(e=fo(e,l)),pp(e,u,d,h)}let p=Os(t,"x","conv2d","float32"),c=Os(n,"filter","conv2d","float32"),f=p,m=!1;3===p.rank&&(m=!0,f=jo(p,[1,p.shape[0],p.shape[1],p.shape[2]])),K(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),K(4===c.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`)),Ho("fused conv2d",a,o);let g="NHWC"===s?f.shape[3]:f.shape[1];K(c.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${c.shape[2]}.`)),K(Vo(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`));let y,b,x=Do(f.shape,c.shape,r,i,a,o);if(null!=l&&(y=Os(l,"bias","fused conv2d"),[y]=gs(y,p),"NHWC"===s?Ll(x.outShape,y.shape):(K(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),K(0===y.shape.length||y.shape[0]===x.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`)))),null!=d){let e=d.shape;if(K(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)K(1===e[0]||e[0]===x.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`));else if(3===e.length)try{Ll(e,x.outShape)}catch(I){let t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(t)}b=Os(d,"prelu weights","fused conv2d")}let v=(e,t)=>{K("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));let[n,o,l,d]=t,h=dp(e,l,u);K(Wo(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));let p=[vl(o.shape,h,n,r,a),up(o,h,n.shape,r,a)];if(null!=d){let e=hp(d,h);p.push(e)}return p},w={x:f,filter:c,bias:y,preluActivationWeights:b},k={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};return null==l?Ou(((e,t,n)=>{let r=Ns.runKernel(sa,w,k);return n([t,e,r]),m&&(r=jo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}))(f,c):Ou(((e,t,n,r)=>{let a=Ns.runKernel(sa,w,k);return r([t,e,a,n]),m&&(a=jo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}))(f,c,y)}});var mp=Ps({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=jo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=jo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Ns.runKernel(Rt,u,d)}});var gp=Ps({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=jo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=Ns.runKernel(Ft,u,d);return l?jo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var yp=Ps({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:h}=e;if(!1===cp(Ns.state.gradientDepth,u)){let e=Al(t,n,r,a,s,i,o);return null!=l&&(e=fo(e,l)),pp(e,u,d,h)}let p=Os(t,"x","depthwiseConv2d","float32"),c=Os(n,"filter","depthwiseConv2d","float32"),f=p,m=!1;3===p.rank&&(m=!0,f=jo(p,[1,p.shape[0],p.shape[1],p.shape[2]])),K(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),K(4===c.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),K(f.shape[3]===c.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null==i&&(i=[1,1]),K(Vo(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),Ho("fused depthwiseConv2d",a,o);let g,y,b=Do(f.shape,c.shape,r,i,a,o,!0);null!=l&&(g=Os(l,"bias","fused conv2d"),[g]=gs(g,p),Ll(b.outShape,g.shape)),null!=d&&(y=Os(d,"prelu weights","fused depthwiseConv2d"));let x=(e,t)=>{K(Wo(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));let[n,s,l,d]=t,h=dp(e,l,u),p=gp(s.shape,h,n,r,a,i,o),c=mp(s,h,n.shape,r,a,i,o);if(null!=d){return[p,c,hp(g,h)]}return[p,c]},v={x:f,filter:c,bias:g,preluActivationWeights:y},w={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};return null==l?Ou(((e,t,n)=>{let r=Ns.runKernel(ia,v,w);return n([t,e,r]),m&&(r=jo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,c):Ou(((e,t,n,r)=>{let a=Ns.runKernel(ia,v,w);return r([t,e,a,n]),m&&(a=jo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,c,g)}});var bp=Ps({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}=e;if(!1===cp(Ns.state.gradientDepth,i)){let e=Yo(t,n,r,a);return null!=s&&(e=fo(e,s)),pp(e,i,o,l)}let u=Os(t,"a","fused matMul"),d=Os(n,"b","fused matMul");[u,d]=gs(u,d);let h=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=a?d.shape[d.rank-1]:d.shape[d.rank-2],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],f=a?d.shape[d.rank-2]:d.shape[d.rank-1],m=u.shape.slice(0,-2),g=d.shape.slice(0,-2),y=Z(m),b=Z(g);K(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${r} and transposeB=${a} must match.`));let x,v,w=Ll(u.shape.slice(0,-2),d.shape.slice(0,-2)).concat([c,f]),k=jo(u,r?[y,h,c]:[y,c,h]),I=jo(d,a?[b,f,p]:[b,p,f]);null!=s&&(x=Os(s,"bias","fused matMul"),[x]=gs(x,u),Ll(w,x.shape)),null!=o&&(v=Os(o,"prelu weights","fused matMul"));let S=(e,t)=>{let n,o,[l,u,d,h]=t,p=dp(jo(e,d.shape),d,i);if(r||a?!r&&a?(n=Yo(p,u,!1,!1),o=Yo(p,l,!0,!1)):r&&!a?(n=Yo(u,p,!1,!0),o=Yo(l,p,!1,!1)):(n=Yo(u,p,!0,!0),o=Yo(p,l,!0,!0)):(n=Yo(p,u,!1,!0),o=Yo(l,p,!0,!1)),null!=s){return[n,o,hp(h,p)]}return[n,o]},N={a:k,b:I,bias:x,preluActivationWeights:v},T={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:l};return null==s?Ou(((e,t,n)=>{let r=Ns.runKernel(aa,N,T);return n([e,t,r]),{value:jo(r,w),gradFunc:S}}))(k,I):Ou(((e,t,n,r)=>{let a=Ns.runKernel(aa,N,T);return r([e,t,a,n]),{value:jo(a,w),gradFunc:S}}))(k,I,x)}});var xp=Ps({hammingWindow_:function(e){return ip(e,.54,.46)}});var vp=Ps({hannWindow_:function(e){return ip(e,.5,.5)}});var wp=Ps({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0,i=[];for(;s+t<=e.size;)i.push(Jo(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=Xo([Jo(e,s,t-r),pl([r],a)]);i.push(o),s+=n}return 0===i.length?Fh([],[0,t]):jo(Xo(i),[i.length,t])}});var kp=Ps({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:vp;null==r&&(r=sp(t));let s=wp(e,t,n),i=yo(s,a(t));return Nh(i,r)}});var Ip=Ps({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Os(e,"image","cropAndResize"),o=Os(t,"boxes","cropAndResize","float32"),l=Os(n,"boxInd","cropAndResize","int32"),u=o.shape[0];K(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),K(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),K(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),K(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),K(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),K("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let d={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return Ns.runKernel(Ct,d,h)}});var Sp=Ps({flipLeftRight_:function(e){let t=Os(e,"image","flipLeftRight","float32");K(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Ns.runKernel(Yt,n,{})}});var Np=Ps({grayscaleToRGB_:function(e){let t=Os(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];K(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),K(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,fu(t,a)}});var Tp=Ps({rgbToGrayscale_:function(e){let t=Os(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];K(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),K(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));let a,s=t.dtype,i=ho(t,"float32"),o=Rh([.2989,.587,.114]);switch(t.rank){case 2:a=Ul("ij,j->i",i,o);break;case 3:a=Ul("ijk,k->ij",i,o);break;case 4:a=Ul("ijkl,l->ijk",i,o);break;case 5:a=Ul("ijklm,m->ijkl",i,o);break;case 6:a=Ul("ijklmn,n->ijklm",i,o);break;default:throw new Error("Not a valid tensor rank.")}return a=pu(a,-1),ho(a,s)}});var _p=Ps({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=Os(e,"image","rotateWithOffset","float32");K(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return Ns.runKernel(ra,s,i)}});function Cp(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),K(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),K(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),K(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),K(1===t.rank,(()=>"scores must be a 1D tensor")),K(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),K(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Ep=Ps({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=Os(e,"boxes","nonMaxSuppression","float32"),i=Os(t,"scores","nonMaxSuppression","float32"),o=Cp(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Ns.runKernel(Vn,{boxes:s,scores:i},l)}});function $p(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Ap)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Ap(e,t){return e>t?1:e<t?-1:0}function Rp(e,t,n,r,a){return Mp(e,t,n,r,a,0)}function Fp(e,t,n,r,a,s){return Mp(e,t,n,r,a,0,!1,s,!0)}function Dp(e,t,n,r,a,s){return Mp(e,t,n,r,a,s,!0)}function Mp(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(zp);let d=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let l=h.length-1;l>=i;--l){let n=Op(e,s,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Lp(r,d,n),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&$p(u,t,zp))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=c),m}function Op(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(p-d);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function Lp(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function zp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Pp=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=Os(e,"boxes","nonMaxSuppressionAsync"),i=Os(t,"scores","nonMaxSuppressionAsync"),o=Cp(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h}=Rp(u,d,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Rh(h,"int32")};var Bp=Ps({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Os(e,"boxes","nonMaxSuppression"),o=Os(t,"scores","nonMaxSuppression"),l=Cp(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=Ns.runKernel(Gn,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}});var Wp=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Os(e,"boxes","nonMaxSuppressionAsync"),o=Os(t,"scores","nonMaxSuppressionAsync"),l=Cp(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:c}=Dp(d,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Rh(p,"int32"),selectedScores:Rh(c)}};var Vp=Ps({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=Os(e,"boxes","nonMaxSuppression"),o=Os(t,"scores","nonMaxSuppression"),l=Cp(i,o,n,r,a,null),u={boxes:i,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=Ns.runKernel(Un,u,d);return{selectedIndices:h[0],validOutputs:h[1]}}});var Up=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=Os(e,"boxes","nonMaxSuppressionAsync"),o=Os(t,"scores","nonMaxSuppressionAsync"),l=Cp(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Fp(p,c,u,d,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Rh(f,"int32"),validOutputs:au(m,"int32")}};var Gp=Ps({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Os(e,"images","resizeBilinear");K(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),K(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),K(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=jo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ns.runKernel(ur,o,l);return i?jo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Hp=Ps({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Os(e,"images","resizeNearestNeighbor");K(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),K(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),K("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),K(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=jo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ns.runKernel(or,o,l);return i?jo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var jp=Ps({threshold_:function(e){let t,n,r,a,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,l=Os(e,"image","threshold"),u=l.shape[0]*l.shape[1],d=yo(Rh([o]),255);if(K(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),K(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),K("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),K("otsu"===s||"binary"===s,(()=>`Method must be binary or otsu, but was ${s}`)),3===l.shape[2]){[t,n,r]=Sh(l,[1,1,1],-1);let e=yo(t,.2989),s=yo(n,.587),i=yo(r,.114);a=fo(fo(e,s),i)}else a=e;if("otsu"===s){d=function(e,t){let n,r,a,s,i,o,l=Rh([-1]),u=Rh([0]),d=Rh([0]);for(let h=0;h<e.size-1;h++){n=Jo(e,0,h+1),r=Jo(e,h+1),i=go(ou(n),t),o=go(ou(r),t);let p=ou(yo(n,Jd(0,n.size)));a=go(p,ou(n));let c=pl(r.shape,n.size),f=fo(Jd(0,r.size),c),m=yo(r,f);s=go(ou(m),ou(r));let g=Wu(a,s),y=Wu(a,s),b=yo(i,o);d=yo(yo(b,g),y);let x=bu(d,u);u=Pl(x,d,u),l=Pl(x,Rh([h]),l)}return l}(ol(ho(lh(a),"int32"),Vs([]),256),u)}let h=i?Tu(a,d):bu(a,d);return ho(yo(h,255),"int32")}});var qp=Ps({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0,i=Os(e,"image","transform","float32"),o=Os(t,"transforms","transform","float32");K(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),K(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),K(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Ns.runKernel(Kr,l,u)}});var Kp=Ps({bandPart_:function(e,t,n){let r=Os(e,"a","bandPart");K(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a,s,i=r.shape,[o,l]=r.shape.slice(-2);"number"==typeof t?(K(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),K(t<=o,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`)),a=Os(t<0?o:t,"numLower","bandPart")):(K("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),a=Pl(Nu(t,0),o,sd(t,o))),"number"==typeof n?(K(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),K(n<=l,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`)),s=Os(n<0?l:n,"numUpper","bandPart")):(K("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),s=Pl(Nu(n,0),l,sd(n,l)));let u=jo(Jd(0,o,1,"int32"),[-1,1]),d=Jd(0,l,1,"int32"),h=Wu(u,d),p=Gu(Tu(h,a),xu(h,zu(s))),c=nd([o,l],r.dtype);return jo(Ch(qh(jo(r,[-1,o,l])).map((e=>Pl(p,e,c)))),i)}});var Xp=Ps({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,K(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)K(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Sh(e,e.shape[0],0).map((e=>_h(e,[0])));K(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let a=0;a<e.length;++a)n.push(Ns.tidy((()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){let r=yo(ou(yo(n[t],e)),n[t]);e=Wu(e,r)}return go(e,uu(e,"euclidean"))})));return t?Ch(n,0):n}});function Yp(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Ns.tidy((()=>{K(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=mu(n),s=po(e),i=Fh([[1]],[1,1]),o=po(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Ns.tidy((()=>{let t=Jo(s,[e,e],[n-e,1]),l=uu(t),u=Jo(s,[e,e],[1,1]),d=Pl(bu(u,0),Fh([[-1]]),Fh([[1]])),h=Wu(u,yo(d,l)),p=go(t,h);o=1===p.shape[0]?po(i):Xo([i,Jo(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);let c=zu(go(Yo(d,h),l)),f=Jo(s,[e,0],[n-e,r]),m=yo(c,o),g=Qh(o);if(0===e)s=Wu(f,Yo(m,Yo(g,f)));else{let t=Wu(f,Yo(m,Yo(g,f)));s=Xo([Jo(s,[0,0],[e,r]),t],0)}let y=Qh(m),b=Jo(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Wu(b,Yo(Yo(b,o),y));else{let t=Wu(b,Yo(Yo(b,o),y));a=Xo([Jo(a,[0,0],[n,e]),t],1)}return[o,s,a]})),ei([t,l,u])}return!t&&n>r&&(a=Jo(a,[0,0],[n,r]),s=Jo(s,[0,0],[r,r])),[a,s]}))}var Zp,Jp=Ps({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(K(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Yp(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=qh(jo(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=Yp(e,t);a.push(n),s.push(r)})),[jo(Ch(a,0),e.shape),jo(Ch(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Zp||(Zp={}));var Qp=Ps({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Zp.SUM_BY_NONZERO_WEIGHTS,r=Os(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Os(t,"weights","computeWeightedLoss"));let s=null==a?r:yo(r,a);if(n===Zp.NONE)return s;if(n===Zp.SUM)return ou(s);if(n===Zp.MEAN){if(null==a)return td(s);{let e=r.size/a.size,t=go(ou(s),ou(a));return e>1?go(t,au(e)):t}}if(n===Zp.SUM_BY_NONZERO_WEIGHTS){if(null==a)return go(ou(s),au(r.size));{let e=yo(a,rd(r.shape)),t=ho(ou(hd(e,au(0))),"float32");return go(ou(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var ec=Ps({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zp.SUM_BY_NONZERO_WEIGHTS,a=Os(e,"labels","absoluteDifference"),s=Os(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Os(n,"weights","absoluteDifference")),X(a.shape,s.shape,"Error in absoluteDifference: ");let o=bo(Wu(a,s));return Qp(o,i,r)}});var tc=Ps({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zp.SUM_BY_NONZERO_WEIGHTS,s=Os(e,"labels","cosineDistance"),i=Os(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Os(r,"weights","cosineDistance")),X(s.shape,i.shape,"Error in cosineDistance: ");let l=au(1),u=Wu(l,ou(yo(s,i),n,!0));return Qp(u,o,a)}});var nc=Ps({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zp.SUM_BY_NONZERO_WEIGHTS,a=Os(e,"labels","hingeLoss"),s=Os(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Os(n,"weights","hingeLoss")),X(a.shape,s.shape,"Error in hingeLoss: ");let o=au(1);a=Wu(yo(au(2),a),o);let l=th(Wu(o,yo(a,s)));return Qp(l,i,r)}});var rc=Ps({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zp.SUM_BY_NONZERO_WEIGHTS,s=Os(e,"labels","huberLoss"),i=Os(t,"predictions","huberLoss"),o=null;null!=n&&(o=Os(n,"weights","huberLoss")),X(s.shape,i.shape,"Error in huberLoss: ");let l=au(r),u=bo(Wu(i,s)),d=sd(u,l),h=Wu(u,d),p=fo(yo(au(.5),iu(d)),yo(l,h));return Qp(p,o,a)}});var ac=Ps({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zp.SUM_BY_NONZERO_WEIGHTS,s=Os(e,"labels","logLoss"),i=Os(t,"predictions","logLoss"),o=null;null!=n&&(o=Os(n,"weights","logLoss")),X(s.shape,i.shape,"Error in logLoss: ");let l=au(1),u=au(r),d=zu(yo(s,Eu(fo(i,u)))),h=yo(Wu(l,s),Eu(fo(Wu(l,i),u))),p=Wu(d,h);return Qp(p,o,a)}});var sc=Ps({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Zp.SUM_BY_NONZERO_WEIGHTS,a=Os(e,"labels","meanSquaredError"),s=Os(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Os(n,"weights","meanSquaredError")),X(a.shape,s.shape,"Error in meanSquaredError: ");let o=Th(a,s);return Qp(o,i,r)}});var ic=Ps({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zp.SUM_BY_NONZERO_WEIGHTS,s=Os(e,"multiClassLabels","sigmoidCrossEntropy"),i=Os(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Os(n,"weights","sigmoidCrossEntropy")),X(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=au(r),t=au(1),n=au(.5);s=fo(yo(s,Wu(t,e)),yo(n,e))}let l=function(e,t){let n=Os(e,"labels","sigmoidCrossEntropyWithLogits"),r=Os(t,"logits","sigmoidCrossEntropyWithLogits");X(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=th(r),s=yo(r,n),i=$u(hu(zu(bo(r))));return fo(Wu(a,s),i)}(s,i);return Qp(l,o,a)}});var oc=Ps({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zp.SUM_BY_NONZERO_WEIGHTS,s=Os(e,"onehotLabels","softmaxCrossEntropy"),i=Os(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Os(n,"weights","softmaxCrossEntropy")),X(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=au(r),t=au(1),n=au(s.shape[1]);s=fo(yo(s,Wu(t,e)),go(e,n))}let l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Ou(((e,t,r)=>{let a=Uu(t,[n],!0),s=Wu(ho(t,"float32"),a);r([e,s]);let i=zu(yo(s,e));return{value:ou(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Yl(e.shape,[n]);return[yo(jo(e,s),Wu(ho(r,"float32"),hu(a))),yo(jo(e,s),Wu(hu(a),ho(r,"float32")))]}}}))(e,t)}(s,i);return Qp(l,o,a)}});var lc=Ps({sparseFillEmptyRows_:function(e,t,n,r){let a=Os(e,"indices","sparseFillEmptyRows","int32"),s=Os(t,"values","sparseFillEmptyRows"),i=Os(n,"denseShape","sparseFillEmptyRows","int32"),o=Os(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=Ns.runKernel(Ar,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var uc=Ps({sparseReshape_:function(e,t,n){let r=Os(e,"inputIndices","sparseReshape","int32"),a=Os(t,"inputShape","sparseReshape","int32"),s=Os(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=Ns.runKernel(Rr,i);return{outputIndices:o[0],outputShape:o[1]}}});var dc=Ps({sparseSegmentMean_:function(e,t,n){let r=Os(e,"data","sparseSegmentMean"),a=Os(t,"indices","sparseSegmentMean","int32"),s=Os(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Ns.runKernel(Fr,i)}});var hc=Ps({sparseSegmentSum_:function(e,t,n){let r=Os(e,"data","sparseSegmentSum"),a=Os(t,"indices","sparseSegmentSum","int32"),s=Os(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Ns.runKernel(Dr,i)}});var pc=Ps({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=Os(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Os(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=Ns.runKernel(Br,h,d);return{nGrams:p[0],nGramsSplits:p[1]}}});var cc=Ps({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=Os(e,"input","stringSplit","string"),a=Os(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=Ns.runKernel(Wr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var fc=Ps({stringToHashBucketFast_:function(e,t){let n=Os(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return Ns.runKernel(Vr,a,r)}});var mc=Ps({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=Os(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return Ns.runKernel(zr,{x:a},s)}}),gc={fft:wh,ifft:kh,rfft:Nh,irfft:Ih},yc={hammingWindow:xp,hannWindow:vp,frame:wp,stft:kp},bc={flipLeftRight:Sp,grayscaleToRGB:Np,resizeNearestNeighbor:Hp,resizeBilinear:Gp,rgbToGrayscale:Tp,rotateWithOffset:_p,cropAndResize:Ip,nonMaxSuppression:Ep,nonMaxSuppressionAsync:Pp,nonMaxSuppressionWithScore:Bp,nonMaxSuppressionWithScoreAsync:Wp,nonMaxSuppressionPadded:Vp,nonMaxSuppressionPaddedAsync:Up,threshold:jp,transform:qp},xc={bandPart:Kp,gramSchmidt:Xp,qr:Jp},vc={absoluteDifference:ec,computeWeightedLoss:Qp,cosineDistance:tc,hingeLoss:nc,huberLoss:rc,logLoss:ac,meanSquaredError:sc,sigmoidCrossEntropy:ic,softmaxCrossEntropy:oc},wc={sparseFillEmptyRows:lc,sparseReshape:uc,sparseSegmentMean:dc,sparseSegmentSum:hc},kc={stringNGrams:pc,stringSplit:cc,stringToHashBucketFast:fc,staticRegexReplace:mc},Ic={};f(Ic,{Serializable:()=>Tc,SerializationMap:()=>_c,getRegisteredName:()=>Ec,registerClass:()=>Cc});var Sc=new Map,Nc=new Map,Tc=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},_c=class e{constructor(){this.classNameMap={}}static getMap(){return null==e.instance&&(e.instance=new e),e.instance}static register(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Cc(e,t,n){K(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),K("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),K(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"==typeof t&&(t="Custom"),"undefined"==typeof n&&(n=e.className);let r=t+">"+n;return _c.register(e),Sc.set(r,e),Nc.set(e,r),e}function Ec(e){return Nc.has(e)?Nc.get(e):e.className}var $c=class extends Tc{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0,{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return ei(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Mu(e,t)}dispose(){null!=this.iterations_&&ei(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:au(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty($c,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Ac=class extends $c{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ns.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ns.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Qs((()=>Bl(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Qs((()=>Bl(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Qs((()=>{let e=fo(yo(i,this.rho),yo(iu(s),1-this.rho)),t=yo(go(su(fo(o,this.epsilon)),su(fo(i,this.epsilon))),s),n=fo(yo(o,this.rho),yo(iu(t),1-this.rho));i.assign(e),o.assign(n);let a=fo(yo(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ei(this.accumulatedGrads.map((e=>e.variable))),ei(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Rc=class extends $c{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ns.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Qs((()=>pl(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;Qs((()=>{let e=fo(s,iu(a));s.assign(e);let t=fo(yo(go(a,su(fo(e,Ns.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ei(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Fc=class extends $c{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Qs((()=>{this.accBeta1=au(t).variable(),this.accBeta2=au(n).variable()})),null==r&&(this.epsilon=Ns.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qs((()=>{let n=Wu(1,this.accBeta1),r=Wu(1,this.accBeta2);t.forEach(((t,a)=>{let s=Ns.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Qs((()=>Bl(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Qs((()=>Bl(s).variable(i)))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=fo(yo(l,this.beta1),yo(o,1-this.beta1)),h=fo(yo(u,this.beta2),yo(iu(o),1-this.beta2)),p=go(d,n),c=go(h,r);l.assign(d),u.assign(h);let f=fo(yo(go(p,fo(su(c),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(yo(this.accBeta1,this.beta1)),this.accBeta2.assign(yo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ei(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ei(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Qs((()=>{this.accBeta1.assign(ru(this.beta1,this.iterations_+1)),this.accBeta2.assign(ru(this.beta2,this.iterations_+1))}));let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Dc=class extends $c{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Qs((()=>{this.iteration=au(0).variable(),this.accBeta1=au(t).variable()})),null==r&&(this.epsilon=Ns.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qs((()=>{let n=Wu(1,this.accBeta1),r=go(-this.learningRate,fo(yo(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=Ns.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Bl(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Bl(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=fo(yo(l,this.beta1),yo(o,1-this.beta1)),h=yo(u,this.beta2),p=bo(o),c=ed(h,p);l.assign(d),u.assign(c);let f=fo(yo(go(r,n),go(d,fo(c,this.epsilon))),s);s.assign(f)})),this.iteration.assign(fo(this.iteration,1)),this.accBeta1.assign(yo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ei(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ei(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Mc=class extends $c{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Ns.registeredVariables[t];Qs((()=>{let e=fo(yo(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ti(au(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Oc=class extends Mc{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=au(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ns.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Qs((()=>Bl(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Qs((()=>{let e,t=fo(yo(this.m,a),s);e=this.useNesterov?fo(yo(this.c,fo(s,yo(t,this.m))),r):fo(yo(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ei(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Lc=class extends $c{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ns.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ns.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Qs((()=>Bl(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Qs((()=>Bl(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Qs((()=>Bl(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Qs((()=>{let e=fo(yo(i,this.decay),yo(iu(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=fo(yo(t,this.decay),yo(s,1-this.decay)),l=go(yo(s,this.learningRate),su(Wu(e,fo(iu(a),this.epsilon)))),u=fo(yo(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let d=Wu(r,u);r.assign(d)}else{let e=fo(yo(i,this.decay),yo(iu(s),1-this.decay)),t=fo(yo(o,this.momentum),go(yo(s,this.learningRate),su(fo(e,this.epsilon))));i.assign(e),o.assign(t);let n=Wu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ei(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ei(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ei(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},zc=[Ac,Rc,Fc,Dc,Oc,Lc,Mc];var Pc={};f(Pc,{CompositeArrayBuffer:()=>Gs,browserFiles:()=>Uc,browserHTTPRequest:()=>Jc,concatenateArrayBuffers:()=>ki,copyModel:()=>so,decodeWeights:()=>ci,decodeWeightsStream:()=>bi,encodeWeights:()=>pi,fromMemory:()=>nf,fromMemorySync:()=>rf,getLoadHandlers:()=>Fi,getModelArtifactsForJSON:()=>Ti,getModelArtifactsForJSONSync:()=>Ni,getModelArtifactsInfoForJSON:()=>_i,getSaveHandlers:()=>Ri,getWeightSpecs:()=>Ci,http:()=>Zc,isHTTPScheme:()=>Xc,listModels:()=>ro,loadWeights:()=>jc,moveModel:()=>io,registerLoadRouter:()=>Ai,registerSaveRouter:()=>$i,removeModel:()=>ao,weightsLoaderFactory:()=>qc,withSaveHandler:()=>af,withSaveHandlerSync:()=>sf});function Bc(e){return new Promise((e=>setTimeout(e))).then(e)}var Wc=class e{constructor(t){if(!Le().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),(null==t||0===t.length)&&(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=Gs.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=Si(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Bc((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Bc((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:_i(e)}}}};Wc.URL_SCHEME="downloads://";var Vc=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Ti(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Ii(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Ii(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function Uc(e){return new Vc(e)}function Gc(e,t,n,r){var a;K(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){K(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),K(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),K(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Hc(e,t){null==t&&(t={});let n=null==t.fetchFunc?Le().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Gc(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Gc(a,t.onProgress,.5,1)}async function jc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return qc((e=>Hc(e,{requestInit:r})))(e,t,n)}function qc(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0,a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Us[l]*Z(e.shape),d=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(d(),i[n]=!0)})):d(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let d=await e(u),h={},p=0;return l.forEach((e=>{let n=t[e].paths.length,r=new Gs(d.slice(p,p+n));s[e].forEach((e=>{let t=ci(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let n in t)h[n]=t[n]})),p+=n})),h}}Ei.registerSaveRouter((e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Wc.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Wc(e)}(e.slice(Wc.URL_SCHEME.length)):null));var Kc=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(K("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Le().platform.fetch,K(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&K(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Si(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=Gs.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:_i(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(xJ){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Ti(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ci(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;let r,a=null==t.fetchFunc?Le().platform.fetch:t.fetchFunc,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){r||(r=(await a(e[s],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await r.read();if(!o)return void n.enqueue(l);s++,r=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[],i=[];for(let o of e)for(let e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e);return[Ci(e),await Hc(t,this.loadOptions)]}};function Xc(e){return null!=e.match(Kc.URL_SCHEME_REGEX)}Kc.URL_SCHEME_REGEX=/^https?:\/\//;var Yc=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Xc(e))):Xc(e),n)return Zc(e,t)}return null};function Zc(e,t){return new Kc(e,t)}function Jc(e,t){return Zc(e,t)}Ei.registerSaveRouter(Yc),Ei.registerLoadRouter(Yc);var Qc=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},ef=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},tf=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function nf(e,t,n,r){return new tf(rf(...arguments))}function rf(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Qc(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Qc({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Qc({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function af(e){return new ef(e)}function sf(e){return new ef(e)}var of={};f(of,{confusionMatrix:()=>lf});var lf=Ps({confusionMatrix_:function(e,t,n){let r=Os(e,"labels","confusionMatrix"),a=Os(t,"predictions","confusionMatrix");K(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),K(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),K(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),K(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),K(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=pd(ho(r,"int32"),n),i=pd(ho(a,"int32"),n),o=Qh(s),l=Yo(o,i);return ho(l,"int32")}}),uf={};f(uf,{draw:()=>yf,fromPixels:()=>bf,fromPixelsAsync:()=>ff,toPixels:()=>gf});var df,hf=!1;function pf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=ha(na,Ns.backendName)){let n={pixels:e},r={numChannels:t};return Ns.runKernel(na,n,r)}let l,u,[d,h]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,d,h).data;else if(r||n)l=e.data;else if(s||a||o){if(null==df)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");df=new OffscreenCanvas(1,1).getContext("2d")}else df=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});df.canvas.width=d,df.canvas.height=h,df.drawImage(e,0,0,d,h),l=df.getImageData(0,0,d,h).data}if(4===t)u=new Int32Array(l);else{let e=d*h;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Dh(u,[h,d,t],"int32")}function cf(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function ff(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Le().getBool("WRAP_TO_IMAGEBITMAP")&&cf(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(xJ){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return pf(n,t)}function mf(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function gf(e,t){let n=Os(e,"img","toPixels");if(!(e instanceof ts)){let e=n;n=ho(e,"int32"),e.dispose()}mf(n);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let e=[0,0,0,255];for(let r=0;r<s;r++){let t=i[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}let t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){hf||null!=ha(zt,Ns.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),hf=!0),t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function yf(e,t,n){let r=Os(e,"img","draw");if(!(e instanceof ts)){let e=r;r=ho(e,"int32"),e.dispose()}mf(r),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);let a={image:r},s={canvas:t,options:n};Ns.runKernel(zt,a,s)}var bf=Ps({fromPixels_:pf}),xf={};function vf(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Z(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let h=0;h<a.length-1;++h)i*=a[h];let o=e.shape,l=a.slice();l.pop();let u=1;for(let h=s;h<n;++h)u*=o[h],l.push(o[h]);let d=[...Ie(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,d]}f(xf,{prepareAndValidate:()=>vf});var wf={};f(wf,{assertParamsValid:()=>Sf,computeFlatOffset:()=>Lf,computeOutShape:()=>Tf,getNormalizedAxes:()=>$f,isSliceContinous:()=>Of,maskToAxes:()=>Nf,parseSliceParams:()=>zf,sliceInfo:()=>Pf,startForAxis:()=>Df,startIndicesWithElidedDims:()=>Af,stopForAxis:()=>Mf,stopIndicesWithElidedDims:()=>Rf,stridesForAxis:()=>Ff,stridesWithElidedDims:()=>_f});var kf=-2,If=-1;function Sf(e,t,n){let r=e.shape.length;K(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),K(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)K(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Nf(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Tf(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function _f(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Cf(e,t,n){return n<=e?n:n-(t-1)}function Ef(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function $f(e,t,n,r,a,s,i,o,l){let u=e.length,d=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=Af(i,l,u,r,e),h=Rf(o,l,u,a,e),p=_f(s,l,u,e)}else for(let c=0;c<u;c++)d[c]=Df(i,r,s,e,c,l),h[c]=Mf(o,a,s,e,c,l),p[c]=Ff(s,c,l);return{begin:d,end:h,strides:p}}function Af(e,t,n,r,a){let s=[...a],i=Ef(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let a=Cf(t,n,o),i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function Rf(e,t,n,r,a){let s=[...a],i=Ef(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let a=Cf(t,n,o),i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){let e=a[o];s[o]<0&&(s[o]+=e),s[o]=V(0,s[o],a[o])}return s}function Ff(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Df(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=V(0,i,l-1),i}function Mf(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?V(0,i,l):V(-1,i,l-1),i}function Of(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Lf(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function zf(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{K(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(K(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Pf(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)d&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(kf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(If),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(0===p.strides[b])throw Error(`strides[${b}] must be non-zero`);let t=!!(p.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}let r=[p.beginMask&1<<b,p.endMask&1<<b],a=[p.strides[b]>0?0:-1,p.strides[b]>0?n:n-1];if(t&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];let s=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(t){let e=p.begin[b]<0?n+p.begin[b]:p.begin[b];if(p.begin[b]=e,p.end[b]=p.begin[b]+1,e<0||e>=n)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=Bf(p.begin[b],0,p.strides[b],n,r,a),p.end[b]=Bf(p.end[b],1,p.strides[b],n,r,a);let e=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===n;c=c&&e,f=f&&(0===b&&1===p.strides[b]||e)}else c=c&&1===p.strides[b]&&s,f=f&&(0===b&&1===p.strides[b]||s);let i,o=!1;if(p.beginValid&&p.endValid?(i=p.end[b]-p.begin[b],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=p.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=p.strides[b]<0?0:Math.trunc(i/p.strides[b])+(i%p.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){let e=p.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===kf&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==kf)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Bf(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Wf="4.21.0",Vf=class{static sgd(e){return new Mc(e)}static momentum(e,t){return new Oc(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Lc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Fc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ac(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Dc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Rc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},Uf=Vf,Gf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Hf(){return new Promise((e=>Gf((()=>e()))))}var jf,qf={};function Kf(e,t){let n=e[0].length;e.forEach(((e,t)=>{K(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),K(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)K(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Xf(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Yf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function Zf(e){let t={FIRST_DIM_SIZE:jf.FIRST_DIM_SIZE,VALUE_ROWIDS:jf.VALUE_ROWIDS,ROW_LENGTHS:jf.ROW_LENGTHS,ROW_SPLITS:jf.ROW_SPLITS,ROW_LIMITS:jf.ROW_LIMITS,ROW_STARTS:jf.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function Jf(e){return 0===e.length?0:e[0]===jf.FIRST_DIM_SIZE?e.length-1:e.length}function Qf(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}f(qf,{ERF_A1:()=>hm,ERF_A2:()=>pm,ERF_A3:()=>cm,ERF_A4:()=>fm,ERF_A5:()=>mm,ERF_P:()=>dm,PARALLELIZE_THRESHOLD:()=>em,RowPartitionType:()=>jf,SELU_SCALE:()=>um,SELU_SCALEALPHA:()=>lm,applyActivation:()=>pp,assertAndGetBroadcastShape:()=>Ll,assertAxesAreInnerMostDims:()=>Zl,assertParamsConsistent:()=>Kf,assignToTypedArray:()=>wm,axesAreInnerMostDims:()=>ql,calculateShapes:()=>Wh,checkEinsumDimSizes:()=>$m,checkPadOnDimRoundingMode:()=>Ho,combineLocations:()=>Kl,combineRaggedTensorToTensorShapes:()=>Yf,complexWithEvenIndex:()=>bm,complexWithOddIndex:()=>xm,computeConv2DInfo:()=>Do,computeConv3DInfo:()=>Mo,computeDefaultPad:()=>Oo,computeDilation2DInfo:()=>Ao,computeOptimalWindowSize:()=>tm,computeOutAndReduceShapes:()=>Xl,computeOutShape:()=>Xf,computePool2DInfo:()=>Ro,computePool3DInfo:()=>Fo,convertConv2DDataFormat:()=>Go,decodeEinsumEquation:()=>Cm,eitherStridesOrDilationsAreOne:()=>Vo,expandShapeToKeepDim:()=>Yl,exponent:()=>Im,exponents:()=>km,fromStringArrayToUint8:()=>Jm,fromUint8ToStringArray:()=>Zm,getAxesPermutation:()=>Jl,getBroadcastDims:()=>Ml,getComplexWithIndex:()=>vm,getEinsumComputePath:()=>Am,getEinsumPermutation:()=>Em,getFusedBiasGradient:()=>hp,getFusedDyActivation:()=>dp,getImageCenter:()=>nm,getInnerMostAxes:()=>eu,getPermuted:()=>am,getRaggedRank:()=>Jf,getReductionAxes:()=>Ol,getReshaped:()=>rm,getReshapedPermuted:()=>sm,getRowPartitionTypesHelper:()=>Zf,getSliceBeginCoords:()=>im,getSliceSize:()=>om,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Mm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Om,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Lm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Bm,getSparseReshapeInputOutputMismatchErrorMessage:()=>Vm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Wm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>zm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Pm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>jm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Um,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Gm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Hm,getUndoAxesPermutation:()=>Ql,isIdentityPermutation:()=>Rm,log:()=>la,mergeRealAndImagArrays:()=>gm,prepareAndValidate:()=>vf,prepareSplitSize:()=>Dm,segment_util:()=>qm,shouldFuse:()=>cp,slice_util:()=>wf,splitRealAndImagArrays:()=>ym,stridesOrDilationsArePositive:()=>Uo,tupleValuesAreOne:()=>Wo,upcastType:()=>ps,validateDefaultValueShape:()=>Qf,validateInput:()=>Bh,validateUpdateShape:()=>Ph,warn:()=>oa}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(jf||(jf={}));var em=30;function tm(e){return e<=em?e:ke(e,Math.floor(Math.sqrt(e)))}function nm(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function rm(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function am(e,t){let n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{let r=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?a.push(n):r.push(n);n.push(...r),n.push(0),n.push(...a)}return n}function sm(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function im(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function om(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var lm=1.7580993408473768,um=1.0507009873554805,dm=.3275911,hm=.254829592,pm=-.284496736,cm=1.421413741,fm=-1.453152027,mm=1.061405429;function gm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ym(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function bm(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function xm(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function vm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function wm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function km(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Im(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Sm="->",Nm=/->/g,Tm=",",_m="...";function Cm(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(Nm,"").length)/Sm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Sm}").`);let[r,a]=e.split(Sm);K(-1===r.indexOf(_m),(()=>`The ellipsis notation ("${_m}") is not supported yet.`));let s=r.split(Tm),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let h=0;h<a.length;++h){let e=a[h];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){let e=r[h];-1===o.indexOf(e)&&e!==Tm&&o.push(e)}let l=new Array(s.length);for(let h=0;h<i;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<s[h].length;++e)l[h].push(o.indexOf(s[h][e]))}let u=o.length,d=[];for(let h=a.length;h<u;++h)d.push(h);return{allDims:o,summedDims:d,idDims:l}}function Em(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function $m(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:K(r[t[a][n]]===e[n],(()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Am(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let e=Fm(t,n[i]);for(let t of e)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function Rm(e){return e.every(((e,t)=>e===t))}function Fm(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Dm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)K(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{K(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}K(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Mm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Om(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Lm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function zm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Pm(e,t){return`size ${e} must be non-negative, not ${t}`}function Bm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Wm(e,t){return`Input to reshape is a SparseTensor with ${Z(e)}\n  dense values, but the requested shape requires a multiple of ${Z(t)}. inputShape=${e} outputShape= ${t}`}function Vm(e,t){return`Input to reshape is a tensor with ${Z(e)} dense values, but the requested shape has ${Z(t)}. inputShape=${e} outputShape=${t}`}function Um(){return"segment ids must be >= 0"}function Gm(){return"segment ids are not increasing"}function Hm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function jm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var qm={};function Km(e,t){let n,r=!1;for(e<=em?(n=e,r=!0):n=ke(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ke(e,n+1);return n}function Xm(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Ym(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),d*=e.shape[h];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function Zm(e){try{return e.map((e=>Wa(e)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Jm(e){return e.map((e=>Ba(e)))}f(qm,{collectGatherOpShapeInfo:()=>Ym,computeOutShape:()=>Xm,segOpComputeOptimalWindowSize:()=>Km});var Qm={};f(Qm,{nonMaxSuppressionV3Impl:()=>Rp,nonMaxSuppressionV4Impl:()=>Fp,nonMaxSuppressionV5Impl:()=>Dp,whereImpl:()=>Yh}),function(){for(let e of zc)Cc(e)}();var eg={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,Eh(ho(n,"float32"),-1))}}},tg={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=iu(ho(n,"float32")),r=su(Wu(au(1),t));return zu(go(e,r))}}}},ng={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=su(Wu(iu(ho(n,"float32")),1));return go(e,t)}}}},rg={kernelName:He,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=e,r=Ol(n.shape,a);return r.length>0&&(t=ou(t,r)),jo(t,n.shape)},b:()=>{let t=e,n=Ol(r.shape,a);return n.length>0&&(t=ou(t,n)),jo(t,r.shape)}}}},ag={kernelName:je,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},sg={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Bl(n)}}},ig={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Bl(n)}}},og={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,su(Wu(au(1),iu(ho(n,"float32")))))}}},lg={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=su(fo(au(1),iu(ho(n,"float32"))));return go(e,t)}}}},ug={kernelName:tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=fo(iu(n),iu(r)),s=yo(e,go(r,t)),i=Ol(n.shape,a);return i.length>0&&(s=ou(s,i)),jo(s,n.shape)},b:()=>{let t=fo(iu(n),iu(r)),s=zu(yo(e,go(n,t))),i=Ol(r.shape,a);return i.length>0&&(s=ou(s,i)),jo(s,r.shape)}}}},dg={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,fo(iu(ho(n,"float32")),1))}}},hg={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,Wu(au(1),iu(ho(n,"float32"))))}}};var pg=Ps({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Os(e,"dy","avgPool3dGrad"),o=Os(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;4===o.rank&&(d=!0,l=jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=jo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),K(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),K(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Ho("avgPool3dGrad",a,s);let h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Ns.runKernel(st,h,p);return d?jo(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),cg={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>pg(e,r,a,s,i,o)}}};var fg=Ps({avgPoolGrad_:function(e,t,n,r,a){let s=Os(e,"dy","avgPoolGrad"),i=Os(t,"input","avgPoolGrad");K(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=jo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=jo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),K(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),K(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let d={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=Ns.runKernel(rt,d,h);return u?jo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),mg={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>fg(e,r,a,s,i)}}},gg={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Yo(e,a,!1,!1),b:()=>Yo(e,r,!0,!1)}:s&&!i?{a:()=>Yo(a,e,!1,!0),b:()=>Yo(r,e,!1,!1)}:{a:()=>Yo(a,e,!0,!0),b:()=>Yo(e,r,!0,!0)}:{a:()=>Yo(e,a,!1,!0),b:()=>Yo(r,e,!0,!1)}}},yg={kernelName:ot,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>vd(e,r,a)}}},bg={kernelName:dt,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ou(e,o,!0)}}},xg={kernelName:pt,gradFunc:e=>({x:()=>e.clone()})},vg={kernelName:ct,gradFunc:e=>({x:()=>Bl(e)})},wg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Pl(Gu(xu(r,a),Tu(r,s)),e,Bl(e))}}},kg={kernelName:gt,inputsToSave:["x"],gradFunc:eg.gradFunc},Ig={kernelName:yt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=le(a,t[0].shape)[0],i=r.map((e=>e[s]));return Sh(e,i,s).map((e=>()=>e))}},Sg={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return K(Wo(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>vl(r.shape,e,a,i,o,l),filter:()=>up(r,e,a.shape,i,o,l)}}},Ng={kernelName:vt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>bl(e,a,s,i,o,1,l),filter:()=>up(e,r,a.shape,s,i,o,l)}}};var Tg=Ps({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=jo(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=jo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),K(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),K(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),K(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),K(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),K(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Ns.runKernel(kt,o,l)}}),_g={kernelName:wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;K(Wo(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Il(i.shape,e,o,a,s),filter:()=>Tg(i,e,o.shape,a,s)}}},Cg={kernelName:St,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(zu(fh(ho(n,"float32"))),e)}}},Eg={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(mh(ho(n,"float32")),e)}}},$g={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Jl([a],r.rank),n=Cl(e,a,s,!i);return null!=t&&(n=Qh(n,t)),n}}}},Ag={kernelName:At,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;K(Wo(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return K(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),K(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),K(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),K(Vo(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Ho("depthwiseConv2d",s,i),{x:()=>gp(l.shape,e,u,a,s,o,i),filter:()=>mp(l,e,u.shape,a,s,o,i)}}},Rg={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Ns.runKernel(Ot,s,n),filter:()=>Ns.runKernel(Lt,i,n)}}},Fg={kernelName:Wt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Ns.runKernel(Vt,r)}}},Dg={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=yo(hu(zu(iu(n))),2/Math.sqrt(Math.PI));return{x:()=>yo(e,r)}}},Mg={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,n)}}},Og={kernelName:jt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>jo(e,n.shape)}}},Lg={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,hu(n))}}},zg={kernelName:Zt,gradFunc:e=>({x:()=>Bl(e)})},Pg={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=go(e,ho(r,"float32")),s=Ol(n.shape,a);return s.length>0?jo(ou(t,s),n.shape):t},b:()=>{let t=yo(e,ho(n,"float32")),s=Ol(r.shape,a);s.length>0&&(t=jo(ou(t,s),r.shape));let i=iu(r);return zu(go(t,ho(i,"float32")))}}}},Bg={kernelName:Qt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?au(1):o,u=Ol(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}let h=Wu(a,s),p=yo(e,l),c=uh(fo(i,au(r))),f=yo(yo(yo(c,c),c),au(-.5));return{x:()=>1===s.rank?jo(yo(yo(e,fu(jo(c,[1,1,1,s.shape[0]]),d)),l),a.shape):jo(yo(yo(e,c),l),a.shape),mean:()=>{let e=yo(yo(c,au(-1)),p);return 1===s.rank&&(e=ou(e,u)),jo(e,s.shape)},variance:()=>{let e=yo(yo(f,h),p);return 1===s.rank&&(e=ou(e,u)),jo(e,s.shape)},scale:()=>{let t=yo(h,c),n=yo(e,t);return 1===s.rank&&(n=ou(n,u)),jo(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=ou(t,u)),jo(t,s.shape)}}}},Wg={kernelName:en,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=le(s,r.shape)[0],l=(e,t,n)=>()=>{let r=e.shape,a=t.size,i=r.slice(0,o),l=i.length,u=r.slice(s,r.length).slice(1),d=u.length,h=Vg(0,l),p=Vg(l+1,l+1+d),c=Ug([i,[a],u]),f=jo(n,c),m=jo(t,[a]),g=Ug([[l],h,p]),y=Qh(f,g),b=jh(y,m,e.shape[o]),x=Ql(g);return b=Qh(b,x),b};if(1===i){let t=r.shape[0],n=r.split(t,0);return{x:()=>Ch(n.map(((t,n)=>l(t,a.slice(n,1),e.slice(n,1))()))).reshape(r.shape),indices:()=>a}}return{x:l(r,a,e),indices:()=>a}}};function Vg(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ug(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Gg={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Bl(n),b:()=>Bl(r)}}},Hg={kernelName:an,gradFunc:e=>({x:()=>ho(e,"float32")})},jg={kernelName:ln,gradFunc:e=>({x:()=>Bl(e)})},qg={kernelName:un,gradFunc:e=>({x:()=>Bl(e)})},Kg={kernelName:dn,gradFunc:e=>({x:()=>Bl(e)})},Xg={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=bu(r,0);return{x:()=>Pl(s,e,yo(e,a))}}},Yg={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,fo(n,1))}}},Zg={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,ho(n,"float32"))}}},Jg={kernelName:wn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=hu(r);return Wu(e,yo(ou(e,a,!0),t))}}}};var Qg=Ps({localResponseNormalizationBackprop_:function(e,t,n){let r={x:e,y:t,dy:n},a={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Ns.runKernel(Sn,r,a)}}),ey={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>Qg(r,a,e,s,i,o,l)}}};function ty(e,t,n,r){return t.rank<n.rank&&(t=jo(t,Yl(t.shape,r))),e.rank<n.rank&&(e=jo(e,Yl(e.shape,r))),{x:()=>yo(e,ho(zl(n,t),e.dtype))}}var ny={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=ty(e,t[1],s,le(a,s.shape));return{x:()=>i.x()}}},ry={kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>yo(e,ho(xu(n,r),"float32")),b:()=>yo(e,ho(Nu(n,r),"float32"))}}};var ay=Ps({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Os(e,"dy","maxPool3dGrad"),l=Os(t,"input","maxPool3dGrad"),u=Os(n,"output","maxPool3dGrad"),d=o,h=l,p=u,c=!1;4===l.rank&&(c=!0,d=jo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=jo(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=jo(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),K(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),K(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),K(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Ho("maxPool3dGrad",s,i);let f={dy:d,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Ns.runKernel(An,f,m);return c?jo(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),sy={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ay(e,r,a,s,i,o,l)}}};var iy=Ps({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Os(e,"dy","maxPoolGrad"),l=Os(t,"input","maxPoolGrad"),u=Os(n,"output","maxPoolGrad");K(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),K(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),K(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Ho("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Ns.runKernel(En,d,h)}}),oy={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>iy(e,r,a,s,i,o)}}},ly={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=le(a,r.shape),i=Z(Xl(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=jo(e,t);return go(yo(n,rd(r.shape,"float32")),i)}}}},uy={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=ty(e,i,s,le(a,s.shape));return{x:()=>o.x()}}},dy={kernelName:Mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>yo(e,ho(Tu(n,r),"float32")),b:()=>yo(e,ho(bu(n,r),"float32"))}}},hy={kernelName:On,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Jo(e,s,r.shape)}}},py={kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=Ol(n.shape,a);return t.length>0?jo(ou(e,t),n.shape):e},b:()=>{let t=yo(e,zu(gu(go(n,r)))),s=Ol(r.shape,a);return s.length>0?jo(ou(t,s),r.shape):t}}}},cy={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=yo(e,ho(r,"float32")),s=Ol(n.shape,a);return s.length>0?jo(ou(t,s),n.shape):t},b:()=>{let t=yo(e,ho(n,"float32")),s=Ol(r.shape,a);return s.length>0?jo(ou(t,s),r.shape):t}}}},fy={kernelName:Bn,gradFunc:e=>({x:()=>zu(e)})},my={kernelName:jn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>nd(n.shape,"float32")}}},gy={kernelName:Hn,gradFunc:e=>({x:()=>Bl(e)})},yy={kernelName:qn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return qh(e,r).map((e=>()=>e))}},by={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Jo(e,s,r.shape)}}},xy={kernelName:Yn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Ll(s.shape,i.shape);return{a:()=>{let t=ho(i,"float32"),n=yo(e,yo(t,ru(s,Wu(t,au(1))))),r=Ol(s.shape,o);return r.length>0&&(n=ou(n,r)),jo(n,s.shape)},b:()=>{let t=bu(s,0),n=Pl(t,Eu(s),Bl(s)),r=yo(e,yo(a,n)),l=Ol(i.shape,o);return l.length>0&&(r=ou(r,l)),jo(r,i.shape)}}}},vy={kernelName:Zn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=bu(n,0);return{x:()=>Pl(a,e,yo(e,r)),alpha:()=>{let t=Pl(a,Bl(e),yo(e,n)),s=Ol(r.shape,e.shape);return s.length>0&&(t=ou(t,s)),jo(t,r.shape)}}}};function wy(e,t,n){let r=e.shape.length,a=r-n.length,s=qf.getAxesPermutation(n,r),i=e;null!=s&&(i=Qh(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){let r=e.shape.slice();r[n]=1;let a=jo(t,r),s=_l(e,n,!0,!1),i=_l(e,n,!0,!0),o=yo(s,i);return yo(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){let e=qf.getUndoAxesPermutation(s);u=Qh(u,e)}return u}var ky={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>wy(r,e,s)}}},Iy={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=go(e,ho(r,"float32")),s=Ol(n.shape,a);return s.length>0?jo(ou(t,s),n.shape):t},b:()=>{let t=yo(e,ho(n,"float32")),s=Ol(r.shape,a);s.length>0&&(t=jo(ou(t,s),r.shape));let i=iu(r);return zu(go(t,ho(i,"float32")))}}}},Sy={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,zu(iu(n)))}}},Ny={kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=yo(Tu(n,6),Eh(n));return{x:()=>yo(e,ho(r,"float32"))}}},Ty={kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,ho(Eh(n),"float32"))}}},_y={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>jo(e,n.shape)}}},Cy={kernelName:ur,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ns.runKernel(dr,a,n)}}},Ey={kernelName:or,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ns.runKernel(lr,a,n)}}},$y={kernelName:pr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=le(r,e.shape);return{x:()=>rh(e,a)}}},Ay={kernelName:cr,gradFunc:e=>({x:()=>Bl(e)})},Ry={kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>zu(go(e,yo(ru(n,1.5),2)))}}},Fy={kernelName:br,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ho(Bl(n),"float32"),t:()=>yo(e,ho(n,e.dtype)),e:()=>yo(e,ho(Hu(n),e.dtype))}}},Dy={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=bu(n,au(0)),r=au(lm),a=au(um),s=yo(e,a),i=yo(yo(e,r),hu(ho(n,"float32")));return Pl(t,s,i)}}}},My={kernelName:Sr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,yo(n,Wu(au(1),n)))}}},Oy={kernelName:Ir,gradFunc:e=>({x:()=>Bl(e)})},Ly={kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(Nl(ho(n,"float32")),e)}}},zy={kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(Tl(ho(n,"float32")),e)}}},Py={kernelName:vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=zf(r,a,s),u=[];for(let d=0;d<e.rank;d++)u.push([o[d],i[d]-o[d]-l[d]]);return{x:()=>md(e,u)}}},By={kernelName:$r,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=yo(e,r);return{logits:()=>Wu(s,yo(ou(s,[a],true),r))}}},Wy={kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,Zo(n))}}},Vy={kernelName:Cr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>tl(e,r,a)}}},Uy={kernelName:Er,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>Xo(e,r)}}},Gy={kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,yo(su(ho(n,"float32")),2))}}},Hy={kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(e,yo(ho(n,"float32"),2))}}},jy={kernelName:Or,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=au(2);return{a:()=>yo(e,yo(a,Wu(n,r))),b:()=>yo(e,yo(a,Wu(r,n)))}}},qy={kernelName:ta,gradFunc:e=>({x:()=>Bl(e)})},Ky={kernelName:Ur,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=e,r=Ol(n.shape,a);return r.length>0&&(t=ou(t,r)),jo(t,n.shape)},b:()=>{let t=e,n=Ol(r.shape,a);return n.length>0&&(t=ou(t,n)),jo(zu(t),r.shape)}}}},Xy={kernelName:_r,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;le(s,r.shape).forEach((e=>{a[e]=1}));let i=jo(e,a),o=yo(i,rd(r.shape,"float32"));return{x:()=>o}}},Yy={kernelName:Gr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(e,iu(Nl(n)))}}},Zy={kernelName:Hr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yo(Wu(au(1),iu(n)),e)}}},Jy={kernelName:jr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Bl(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=fo(t,Jo(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=fo(t,Jo(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=fo(t,Jo(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=fo(t,Jo(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Qy={kernelName:Xr,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Ql(a);return{x:()=>Qh(e,s)}}},eb={kernelName:Zr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Ch(e,a)}}},tb={kernelName:Jr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=ed(t,Bl(t)),r=yu(e,n),a=xu(t,au(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=pu(a,o+1);a=Gu(a,rd(r.shape,"bool"));let i=Bl(r);return Pl(a,r,i)}(e,n)}}};var nb={kernelName:ea,gradFunc:e=>({x:()=>Bl(e)})},rb=[eg,tg,ng,rg,ag,sg,ig,og,lg,ug,dg,hg,cg,mg,gg,yg,bg,xg,vg,wg,kg,Ig,Ng,Sg,_g,Cg,Eg,$g,Ag,Rg,Iy,Fg,Dg,Mg,Og,Lg,Pg,zg,Bg,Wg,Gg,Hg,jg,qg,Kg,Xg,Yg,Zg,Jg,ey,ny,ny,ry,sy,oy,ly,uy,dy,hy,py,cy,fy,my,gy,yy,by,by,xy,vy,ky,Sy,Ny,Ty,_y,Cy,Ey,$y,Ay,Ry,Fy,Dy,My,Oy,Ly,zy,Py,By,Wy,Vy,Vy,Uy,Uy,Gy,jy,Hy,qy,Ky,Xy,Yy,Zy,Jy,Qy,eb,tb,nb];for(let S0 of rb)ma(S0);ns().prototype.abs=function(){return this.throwIfDisposed(),bo(this)},ns().prototype.acos=function(){return this.throwIfDisposed(),xo(this)},ns().prototype.acosh=function(){return this.throwIfDisposed(),vo(this)},ns().prototype.add=function(e){return this.throwIfDisposed(),fo(this,e)},ns().prototype.all=function(e,t){return this.throwIfDisposed(),ko(this,e,t)},ns().prototype.any=function(e,t){return this.throwIfDisposed(),Io(this,e,t)},ns().prototype.argMax=function(e){return this.throwIfDisposed(),So(this,e)},ns().prototype.argMin=function(e){return this.throwIfDisposed(),No(this,e)},ns().prototype.asScalar=function(){return this.throwIfDisposed(),K(1===this.size,(()=>"The array must have only 1 element.")),jo(this,[])},ns().prototype.asType=function(e){return this.throwIfDisposed(),ho(this,e)},ns().prototype.as1D=function(){return this.throwIfDisposed(),jo(this,[this.size])},ns().prototype.as2D=function(e,t){return this.throwIfDisposed(),jo(this,[e,t])},ns().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),jo(this,[e,t,n])},ns().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),jo(this,[e,t,n,r])},ns().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),jo(this,[e,t,n,r,a])},ns().prototype.asin=function(){return this.throwIfDisposed(),To(this)},ns().prototype.asinh=function(){return this.throwIfDisposed(),_o(this)},ns().prototype.atan=function(){return this.throwIfDisposed(),Co(this)},ns().prototype.atan2=function(e){return this.throwIfDisposed(),Eo(this,e)},ns().prototype.atanh=function(){return this.throwIfDisposed(),$o(this)},ns().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),qo(this,e,t,n,r)},ns().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),tl(this,e,t)},ns().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),rl(this,e,t,n,r,a)},ns().prototype.broadcastTo=function(e){return this.throwIfDisposed(),dl(this,e)},ns().prototype.cast=function(e){return this.throwIfDisposed(),ho(this,e)},ns().prototype.ceil=function(){return this.throwIfDisposed(),hl(this)},ns().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),cl(this,e,t)},ns().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ts&&(e=[e]),Xo([this,...e],t)},ns().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),xl(this,e,t,n,r,a,s)},ns().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),wl(this,e,t,n,r,a)},ns().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),bl(this,e,t,n,r,a,s)},ns().prototype.cos=function(){return this.throwIfDisposed(),Nl(this)},ns().prototype.cosh=function(){return this.throwIfDisposed(),Tl(this)},ns().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),_l(this,e,t,n)},ns().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Cl(this,e,t,n)},ns().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},ns().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Al(this,e,t,n,r,a,s)},ns().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Fl(this,e,t,n,r,a)},ns().prototype.divNoNan=function(e){return this.throwIfDisposed(),Wl(this,e)},ns().prototype.div=function(e){return this.throwIfDisposed(),go(this,e)},ns().prototype.dot=function(e){return this.throwIfDisposed(),Vl(this,e)},ns().prototype.elu=function(){return this.throwIfDisposed(),Gl(this)},ns().prototype.equal=function(e){return this.throwIfDisposed(),zl(this,e)},ns().prototype.erf=function(){return this.throwIfDisposed(),jl(this)},ns().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),du(this,e,t)},ns().prototype.exp=function(){return this.throwIfDisposed(),hu(this)},ns().prototype.expandDims=function(e){return this.throwIfDisposed(),pu(this,e)},ns().prototype.expm1=function(){return this.throwIfDisposed(),cu(this)},ns().prototype.fft=function(){return this.throwIfDisposed(),wh(this)},ns().prototype.flatten=function(){return this.throwIfDisposed(),jo(this,[this.size])},ns().prototype.floor=function(){return this.throwIfDisposed(),gu(this)},ns().prototype.floorDiv=function(e){return this.throwIfDisposed(),mo(this,e)},ns().prototype.gather=function(e,t,n){return this.throwIfDisposed(),yu(this,e,t,n)},ns().prototype.greaterEqual=function(e){return this.throwIfDisposed(),xu(this,e)},ns().prototype.greater=function(e){return this.throwIfDisposed(),bu(this,e)},ns().prototype.ifft=function(){return this.throwIfDisposed(),kh(this)},ns().prototype.irfft=function(){return this.throwIfDisposed(),Ih(this)},ns().prototype.isFinite=function(){return this.throwIfDisposed(),wu(this)},ns().prototype.isInf=function(){return this.throwIfDisposed(),ku(this)},ns().prototype.isNaN=function(){return this.throwIfDisposed(),Iu(this)},ns().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Su(this,e)},ns().prototype.lessEqual=function(e){return this.throwIfDisposed(),Tu(this,e)},ns().prototype.less=function(e){return this.throwIfDisposed(),Nu(this,e)},ns().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Cu(this,e,t,n,r)},ns().prototype.logSigmoid=function(){return this.throwIfDisposed(),Bu(this)},ns().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Vu(this,e)},ns().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Uu(this,e,t)},ns().prototype.log=function(){return this.throwIfDisposed(),Eu(this)},ns().prototype.log1p=function(){return this.throwIfDisposed(),$u(this)},ns().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Gu(this,e)},ns().prototype.logicalNot=function(){return this.throwIfDisposed(),Hu(this)},ns().prototype.logicalOr=function(e){return this.throwIfDisposed(),ju(this,e)},ns().prototype.logicalXor=function(e){return this.throwIfDisposed(),qu(this,e)},ns().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Yo(this,e,t,n)},ns().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Zu(this,e,t,n,r)},ns().prototype.max=function(e,t){return this.throwIfDisposed(),tu(this,e,t)},ns().prototype.maximum=function(e){return this.throwIfDisposed(),ed(this,e)},ns().prototype.mean=function(e,t){return this.throwIfDisposed(),td(this,e,t)},ns().prototype.min=function(e,t){return this.throwIfDisposed(),nu(this,e,t)},ns().prototype.minimum=function(e){return this.throwIfDisposed(),sd(this,e)},ns().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),id(this,e,t)},ns().prototype.mod=function(e){return this.throwIfDisposed(),od(this,e)},ns().prototype.mul=function(e){return this.throwIfDisposed(),yo(this,e)},ns().prototype.neg=function(){return this.throwIfDisposed(),zu(this)},ns().prototype.norm=function(e,t,n){return this.throwIfDisposed(),uu(this,e,t,n)},ns().prototype.notEqual=function(e){return this.throwIfDisposed(),hd(this,e)},ns().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),pd(this,e,t,n)},ns().prototype.onesLike=function(){return this.throwIfDisposed(),cd(this)},ns().prototype.pad=function(e,t){return this.throwIfDisposed(),md(this,e,t)},ns().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),wd(this,e,t,n,r,a,s)},ns().prototype.pow=function(e){return this.throwIfDisposed(),ru(this,e)},ns().prototype.prelu=function(e){return this.throwIfDisposed(),kd(this,e)},ns().prototype.prod=function(e,t){return this.throwIfDisposed(),Id(this,e,t)},ns().prototype.reciprocal=function(){return this.throwIfDisposed(),eh(this)},ns().prototype.relu=function(){return this.throwIfDisposed(),th(this)},ns().prototype.relu6=function(){return this.throwIfDisposed(),nh(this)},ns().prototype.reshapeAs=function(e){return this.throwIfDisposed(),jo(this,e.shape)},ns().prototype.reshape=function(e){return this.throwIfDisposed(),jo(this,e)},ns().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Gp(this,e,t,n)},ns().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Hp(this,e,t,n)},ns().prototype.reverse=function(e){return this.throwIfDisposed(),rh(this,e)},ns().prototype.rfft=function(){return this.throwIfDisposed(),Nh(this)},ns().prototype.round=function(){return this.throwIfDisposed(),lh(this)},ns().prototype.rsqrt=function(){return this.throwIfDisposed(),uh(this)},ns().prototype.selu=function(){return this.throwIfDisposed(),dh(this)},ns().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),hh(this,e,t,n,r,a,s)},ns().prototype.sigmoid=function(){return this.throwIfDisposed(),Zo(this)},ns().prototype.sign=function(){return this.throwIfDisposed(),ch(this)},ns().prototype.sin=function(){return this.throwIfDisposed(),fh(this)},ns().prototype.sinh=function(){return this.throwIfDisposed(),mh(this)},ns().prototype.slice=function(e,t){return this.throwIfDisposed(),Jo(this,e,t)},ns().prototype.softmax=function(e){return this.throwIfDisposed(),vh(this,e)},ns().prototype.softplus=function(){return this.throwIfDisposed(),Pu(this)},ns().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),vd(this,e,t)},ns().prototype.split=function(e,t){return this.throwIfDisposed(),Sh(this,e,t)},ns().prototype.sqrt=function(){return this.throwIfDisposed(),su(this)},ns().prototype.square=function(){return this.throwIfDisposed(),iu(this)},ns().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Th(this,e)},ns().prototype.squeeze=function(e){return this.throwIfDisposed(),_h(this,e)},ns().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof ts?[this,e]:[this,...e];return Ch(n,t)},ns().prototype.step=function(e){return this.throwIfDisposed(),Eh(this,e)},ns().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),$h(this,e,t,n,r,a,s,i,o)},ns().prototype.sub=function(e){return this.throwIfDisposed(),Wu(this,e)},ns().prototype.sum=function(e,t){return this.throwIfDisposed(),ou(this,e,t)},ns().prototype.tan=function(){return this.throwIfDisposed(),Ah(this)},ns().prototype.tanh=function(){return this.throwIfDisposed(),Qo(this)},ns().prototype.tile=function(e){return this.throwIfDisposed(),fu(this,e)},ns().prototype.toBool=function(){return this.throwIfDisposed(),ho(this,"bool")},ns().prototype.toFloat=function(){return this.throwIfDisposed(),ho(this,"float32")},ns().prototype.toInt=function(){return this.throwIfDisposed(),ho(this,"int32")},ns().prototype.topk=function(e,t){return this.throwIfDisposed(),Uh(this,e,t)},ns().prototype.transpose=function(e){return this.throwIfDisposed(),Qh(this,e)},ns().prototype.unique=function(e){return this.throwIfDisposed(),Hh(this,e)},ns().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),jh(this,e,t)},ns().prototype.unstack=function(e){return this.throwIfDisposed(),qh(this,e)},ns().prototype.where=function(e,t){return this.throwIfDisposed(),Pl(e,this,t)},ns().prototype.zerosLike=function(){return this.throwIfDisposed(),Bl(this)};var ab=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},sb=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},ib=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},ob=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},lb=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},ub=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function db(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function hb(e,t){if(!e)throw new lb(t)}function pb(e,t){let n=0;for(let r of e)r===t&&n++;return n}function cb(e){return 1===e.length?e[0]:e}function fb(e){return Array.isArray(e)?e:[e]}function mb(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function gb(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var yb={};function bb(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function xb(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>xb(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?xb(t):e[n]=t.value)}}}function vb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in yb)a=yb[s];else if(a=t[s],null==a)throw new ib(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new ib(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in yb?[i,o]=yb.className:l in t&&([i,o]=t[l]),null==i)throw new ib(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let n of Object.keys(yb))e[n]=yb[n];for(let a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;let t=Object.assign({},yb);for(let a of Object.keys(n))yb[a]=n[a];xb(s.config);let r=o(i,s.config,n,a);return yb=Object.assign({},t),r}{let e=Object.assign({},yb);for(let r of Object.keys(n))yb[r]=n[r];let t=new i(s.config);return yb=Object.assign({},e),t}}}function wb(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function kb(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ib(e){if(null==e)throw new ib(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Sb(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ib(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Nb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return hb(n>=0),hb(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Tb(e,t){Array.isArray(e)?(va.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Tb(e,`element ${n+1} of ${t}`)))):va.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${_b(e)}.`))}function _b(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>_b(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Cb(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var Eb=0;function $b(){return Eb++}var Ab={};function Rb(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Ab||(Ab[e]=0),Ab[e]+=1,e+Ab[e].toString()}var Fb=["channelsFirst","channelsLast"],Db=["nearest","bilinear"],Mb=["valid","same","causal"],Ob=["max","avg"],Lb=["sum","mul","concat","ave"],zb=new Map;function Pb(e){Sb(Fb,"DataFormat",e)}function Bb(e){Sb(Mb,"PaddingMode",e)}function Wb(e){Sb(Ob,"PoolMode",e)}var Vb=[];function Ub(e,t){Vb.push(e);try{let e=t();return Vb.pop(),e}catch(xQ){throw Vb.pop(),xQ}}function Gb(e){if(!Kb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Vb.length?"":Vb.join("/")+"/")+e}function Hb(e){if(!Kb(e))throw new Error("Not a valid tensor name: '"+e+"'");zb.has(e)||zb.set(e,0);let t=zb.get(e);if(zb.set(e,zb.get(e)+1),t>0){let n=`${e}_${t}`;return zb.set(n,1),n}return e}var jb,qb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Kb(e){return!!e.match(qb)}function Xb(e){return e===parseInt(e.toString(),10)}function Yb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Zb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Jb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Qb(e,t){if(t<e)throw new ib(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function ex(){return null==jb&&(jb=di().epsilon()),jb}function tx(e,t){return ho(e,t)}function nx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),jo(e,n)}function rx(e,t,n){return Qs((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:return yh(e,[t,0],[n,e.shape[1]]);case 3:return bh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return xh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Jo(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Jo(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ib(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ax(e,t,n){return Qs((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:return yh(e,[0,t],[e.shape[0],n]);case 3:return bh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return xh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ib(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sx(e,t,n,r){return Qs((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:switch(r){case 1:return rx(e,t,n);case 2:return ax(e,t,n);default:throw new ib(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return rx(e,t,n);case 2:return bh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ax(e,t,n);default:throw new ib(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return rx(e,t,n);case 2:return xh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return xh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ax(e,t,n);default:throw new ib(`The axis is not within the rank of the tensor ${r}`)}default:throw new ib(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ix(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Xo(e,n)}function ox(e,t){switch(e.rank){case 1:return fl([e,t]);case 2:return ml([e,t],0);case 3:return gl([e,t],0);case 4:return yl([e,t],0);default:throw new ib(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function lx(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ib(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return fu(e,t)}function ux(e){return Kd(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function dx(e,t,n,r){if(e.rank<2||t.rank<2)throw new ob(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ob(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return lp.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?cx(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=jo(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=jo(Qh(t,d),[l,-1]);let h=[...a,...u];return jo(lp.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?cx(e.rank,r,"channelsLast"):null,activation:n}),h)}}function hx(e,t,n){return Qs((()=>(t=Array.isArray(t)?Rh(t,"int32"):ho(t,"int32"),yu(e,t,n))))}function px(e){return yo(e,e)}function cx(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ib(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?jo(t,[1,r[0],1,1,1]):jo(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?jo(t,[1,1,1,1,r[0]]):jo(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?jo(t,[1,r[0],1,1]):jo(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?jo(t,[1,1,1,r[0]]):jo(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?jo(t,[1,r[0],1]):jo(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?jo(t,[1,1,r[0]]):jo(t,[1].concat(r))}else if(e<3)return t;throw new ib(`Unsupported input rank by biasAdd: ${t.rank}`)}function fx(e,t,n){return Qs((()=>(null==n&&(n="channelsLast"),Pb(n),fo(e,cx(e.rank,t,n)))))}function mx(e,t,n,r){return Qs((()=>ap(e,t,n,r)))}function gx(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}var yx=["fanIn","fanOut","fanAvg"],bx=["normal","uniform","truncatedNormal"];var xx=class extends Ic.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},vx=class extends xx{apply(e,t){return nd(e,t)}};vx.className="Zeros",Ic.registerClass(vx);var wx=class extends xx{apply(e,t){return rd(e,t)}};wx.className="Ones",Ic.registerClass(wx);var kx=class extends xx{constructor(e){if(super(),"object"!=typeof e)throw new ib(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ib(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Qs((()=>yo(au(this.value),rd(e,t))))}getConfig(){return{value:this.value}}};kx.className="Constant",Ic.registerClass(kx);var Ix=class extends xx{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yd(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Ix.className="RandomUniform",Ic.registerClass(Ix);var Sx=class extends xx{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ob(`randomNormal does not support dType ${t}.`);return ux(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Sx.className="RandomNormal",Ic.registerClass(Sx);var Nx=class extends xx{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ob(`truncatedNormal does not support dType ${t}.`);return Gh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Nx.className="TruncatedNormal",Ic.registerClass(Nx);var Tx=class extends xx{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Qs((()=>{if(2!==e.length||e[0]!==e[1])throw new ib("Identity matrix initializer can only be used for 2D square matrices.");return yo(this.gain,mu(e[0]))}))}getConfig(){return{gain:this.gain}}};Tx.className="Identity",Ic.registerClass(Tx);var _x=class extends xx{constructor(e){if(super(),e.scale<0)throw new ib(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){Sb(yx,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Sb(bx,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Pb(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){let r=Yb(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){let r=Yb(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{let r=Yb(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ob(`${this.getClassName()} does not support dType ${t}.`);return Gh(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Yd(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};_x.className="VarianceScaling",Ic.registerClass(_x);var Cx=class extends _x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _x.className}};Cx.className="GlorotUniform",Ic.registerClass(Cx);var Ex=class extends _x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _x.className}};Ex.className="GlorotNormal",Ic.registerClass(Ex);var $x=class extends _x{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _x.className}};$x.className="HeNormal",Ic.registerClass($x);var Ax=class extends _x{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _x.className}};Ax.className="HeUniform",Ic.registerClass(Ax);var Rx=class extends _x{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _x.className}};Rx.className="LeCunNormal",Ic.registerClass(Rx);var Fx=class extends _x{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _x.className}};Fx.className="LeCunUniform",Ic.registerClass(Fx);var Dx=class extends xx{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Qs((()=>{if(e.length<2)throw new ob("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);let n=va.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=ux([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=xc.qr(s,!1),o=i[0],l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=yo(o,l.sign()),n<r&&(o=o.transpose()),yo(au(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Dx.className="Orthogonal",Ic.registerClass(Dx);var Mx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ox(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return vb(e,Ic.SerializationMap.getMap().classNameMap,t,"initializer")}function Lx(e){return bb(e)}function zx(e){if("string"==typeof e){let t=e in Mx?Mx[e]:e;if("GlorotNormal"===t)return new Ex;if("GlorotUniform"===t)return new Cx;if("HeNormal"===t)return new $x;if("HeUniform"===t)return new Ax;if("LeCunNormal"===t)return new Rx;if("LeCunUniform"===t)return new Fx;{let e={};return e.className=t,e.config={},Ox(e)}}return e instanceof xx?e:Ox(e)}function Px(e){return Array.isArray(e)&&Array.isArray(e[0])}function Bx(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Wx(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ib(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Vx(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ib(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ux(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Gx="Variable",Hx=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Gx,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=$b(),n=null==n?Gx:n,this.originalName=Gb(n),this.name=Hb(this.originalName),this.trainable_=r,this.constraint=a,this.val=Xh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function jx(e){return e.map((e=>e.read()))}function qx(e){e.forEach((e=>{e[0].write(e[1])}))}var Kx=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Xx=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=$b(),null!=s&&(this.originalName=Gb(s),this.name=Hb(this.originalName)),this.rank=t.length}},Yx=0,Zx=class{constructor(e,t){this.callArgs=t,this.id=Yx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Jx=0,Qx=class extends Ic.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Jx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=mb(e)+"_"+Rb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new sb(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ib(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return cb(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return cb(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ab(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ab(`Layer ${this.name} is not connected, no input to return.`);return cb(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ab(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ab(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return cb(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=fb(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let n=fb(this.inputSpec);if(t.length!==n.length)throw new ib(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){let e=t[r],a=n[r];if(null==a)continue;let s=e.rank;if(null!=a.ndim&&s!==a.ndim)throw new ib(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ib(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ib(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&e.dtype!==a.dtype)throw new ib(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${e.dtype}.`);if(a.axes){let t=e.shape;for(let e in a.axes){let n=Number(e),s=a.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(i))throw new ib(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){let n=a.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new ib(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=fb(e),r=function(e){let t=!0;for(let n of fb(e))if(!(n instanceof Xx)){t=!1;break}return t}(e),a=function(e){let t=!0;for(let n of fb(e))if(n instanceof Xx){t=!1;break}return t}(e);if(r===a)throw new ib("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ub(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of fb(e))t.push(n.shape);this.build(cb(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);let a=fb(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=cb(s),null!=this.activityRegularizer)throw new ob("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=fb(e);let t=[];for(let n of e)t.push(n.shape);return cb(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new Xx(s,n,this,fb(e),t,this.name,r))):new Xx(s,a,this,fb(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new ob("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ab(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ab(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new sb(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ux(this.weights)}build(e){this.built=!0}getWeights(){return jx(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Qs((()=>{let t=this.weights;if(t.length!==e.length)throw new ib(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=jx(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!va.arraysEqual(s.shape,o.shape))throw new ib(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}qx(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ib(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():zx("zeros"));let l=r.apply(t,n),u=new Hx(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=fb(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=fb(t),s=fb(r);if(a.length!==s.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=s[i]}addInboundNode(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=fb(e);t=fb(t),n=fb(n),r=fb(r),a=Bx(a),s=Bx(s);let l=[],u=[],d=[];for(let h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),d.push(h.tensorIndex);new Zx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ev(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=ev(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var tv=class extends Qx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Rb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ib("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ib("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ib("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Xx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Zx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ib(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function nv(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ib("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new tv({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}tv.className="InputLayer",Ic.registerClass(tv);var rv=class e{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof e)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(let e of t)this.add(e.key,e.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ib(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,n){if(null==e.dtype||e.dtype===n.dtype)return n;try{return ho(n,e.dtype)}catch(t){throw new ib(`The dtype of the feed (${n.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Xx){if(null==this.id2Value[e.id])throw new ib(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new ib(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Xx){if(null==this.id2Value[e.id])throw new ib(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new ib(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ei(this.id2Mask)}},av=new ub,sv=new ub;function iv(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d,h=o.join(",")+"|"+t.names().sort().join(","),p=av.get(h);if(null==p){let e=function(e,t){va.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=lv(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=lv(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:ov(r)}}(i,t);p=e.sorted,d=e.recipientCounts,av.put(h,p),sv.put(h,d)}d={},a||Object.assign(d,sv.get(h));let c=new rv(t);for(let f=0;f<p.length;++f){if(null!=r){let e=Zs().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let e=p[f],s=e.sourceLayer;if(s instanceof tv)continue;let i=[],u=[],h=[],m=!1;for(let n of e.inputs){let e=c.getValue(n),r=c.getMask(n);i.push(e),u.push(r),null!=r&&(m=!0),a||(d[n.name]--,0===d[n.name]&&!t.hasKey(n)&&-1===o.indexOf(n.name)&&!e.isDisposed&&!0!==n.sourceLayer.stateful&&h.push(e))}m&&((n=n||{}).mask=u[0]);let g=fb(s.apply(i,n)),y=null;s.supportsMasking&&(y=s.computeMask(i,u));let b=uv(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){c.hasKey(x[t])||c.add(x[t],g[t],Array.isArray(y)?y[0]:y);let e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}a||ei(h)}return c.disposeMasks(),s?l:l[0]}function ov(e){let t={};for(let n in e)t[n]=e[n].size;return t}function lv(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function uv(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}Le().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=av&&av.setMaxEntries(e),null!=sv&&sv.setMaxEntries(e)}));var dv={};function hv(e,t){return Qs((()=>su(ou(yo(e,e),t,!0))))}f(dv,{maxNorm:()=>wv,minMaxNorm:()=>Sv,nonNeg:()=>Iv,unitNorm:()=>kv});var pv=class extends Ic.Serializable{getConfig(){return{}}},cv=class extends pv{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qs((()=>{let t=hv(e,this.axis),n=cl(t,0,this.maxValue);return yo(e,go(n,fo(ex(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};cv.className="MaxNorm",Ic.registerClass(cv);var fv=class extends pv{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qs((()=>go(e,fo(ex(),hv(e,this.axis)))))}getConfig(){return{axis:this.axis}}};fv.className="UnitNorm",Ic.registerClass(fv);var mv=class extends pv{apply(e){return th(e)}};mv.className="NonNeg",Ic.registerClass(mv);var gv=class extends pv{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qs((()=>{let t=hv(e,this.axis),n=fo(yo(this.rate,cl(t,this.minValue,this.maxValue)),yo(1-this.rate,t));return yo(e,go(n,fo(ex(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};gv.className="MinMaxNorm",Ic.registerClass(gv);var yv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function bv(e){return bb(e)}function xv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return vb(e,Ic.SerializationMap.getMap().classNameMap,t,"constraint")}function vv(e){if(null==e)return null;if("string"==typeof e){return xv({className:e in yv?yv[e]:e,config:{}})}return e instanceof pv?e:xv(e)}function wv(e){return new cv(e)}function kv(e){return new fv(e)}function Iv(){return new mv}function Sv(e){return new gv(e)}var Nv={};function Tv(){return new vx}function _v(){return new wx}function Cv(e){return new kx(e)}function Ev(e){return new Ix(e)}function $v(e){return new Sx(e)}function Av(e){return new Nx(e)}function Rv(e){return new Tx(e)}function Fv(e){return new _x(e)}function Dv(e){return new Cx(e)}function Mv(e){return new Ex(e)}function Ov(e){return new $x(e)}function Lv(e){return new Ax(e)}function zv(e){return new Rx(e)}function Pv(e){return new Fx(e)}function Bv(e){return new Dx(e)}f(Nv,{constant:()=>Cv,glorotNormal:()=>Mv,glorotUniform:()=>Dv,heNormal:()=>Ov,heUniform:()=>Lv,identity:()=>Rv,leCunNormal:()=>zv,leCunUniform:()=>Pv,ones:()=>_v,orthogonal:()=>Bv,randomNormal:()=>$v,randomUniform:()=>Ev,truncatedNormal:()=>Av,varianceScaling:()=>Fv,zeros:()=>Tv});var Wv,Vv={};async function Uv(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];ei(r)}}function Gv(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}f(Vv,{Layer:()=>Qx,RNN:()=>aI,RNNCell:()=>sI,activation:()=>LS,add:()=>jS,alphaDropout:()=>ON,average:()=>qS,averagePooling1d:()=>nN,averagePooling2d:()=>sN,averagePooling3d:()=>lN,avgPool1d:()=>rN,avgPool2d:()=>iN,avgPool3d:()=>uN,avgPooling1d:()=>aN,avgPooling2d:()=>oN,avgPooling3d:()=>dN,batchNormalization:()=>QS,bidirectional:()=>CN,categoryEncoding:()=>WN,centerCrop:()=>PN,concatenate:()=>KS,conv1d:()=>CS,conv2d:()=>ES,conv2dTranspose:()=>$S,conv3d:()=>AS,conv3dTranspose:()=>RS,convLstm2d:()=>SN,convLstm2dCell:()=>NN,cropping2D:()=>DS,dense:()=>zS,depthwiseConv2d:()=>OS,dot:()=>JS,dropout:()=>PS,elu:()=>kS,embedding:()=>HS,flatten:()=>WS,gaussianDropout:()=>MN,gaussianNoise:()=>DN,globalAveragePooling1d:()=>hN,globalAveragePooling2d:()=>pN,globalMaxPool1d:()=>$N,globalMaxPool2d:()=>AN,globalMaxPooling1d:()=>cN,globalMaxPooling2d:()=>fN,gru:()=>bN,gruCell:()=>xN,input:()=>rk,inputLayer:()=>wS,layerNormalization:()=>eN,leakyReLU:()=>SS,lstm:()=>vN,lstmCell:()=>wN,masking:()=>LN,maxPool1d:()=>RN,maxPool2d:()=>FN,maxPooling1d:()=>mN,maxPooling2d:()=>gN,maxPooling3d:()=>yN,maximum:()=>XS,minimum:()=>YS,multiply:()=>ZS,permute:()=>GS,prelu:()=>NS,randomWidth:()=>VN,reLU:()=>IS,repeatVector:()=>VS,rescaling:()=>zN,reshape:()=>US,resizing:()=>BN,rnn:()=>TN,separableConv2d:()=>FS,simpleRNN:()=>kN,simpleRNNCell:()=>IN,softmax:()=>TS,spatialDropout1d:()=>BS,stackedRNNCells:()=>_N,thresholdedReLU:()=>_S,timeDistributed:()=>EN,upSampling2d:()=>MS,zeroPadding2d:()=>tN}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Wv||(Wv={}));var Hv=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},jv=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},qv=class extends Hv{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let r in t){let e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;let a=Qs((()=>fo(this.totals[r],yo(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Qs((()=>{let e=yo(go(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),ti(t[n])})))}},Kv=class extends Hv{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){let i=r[s];e.push(i.data()),t.push(a),n.push(s)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},Xv=class extends Hv{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Hf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");va.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():va.now();return function(){let s=null!=n?n():va.now();return s-a<t||(a=s,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await Uv(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Uv(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await Uv(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Uv(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await Uv(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):va.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Uv(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Uv(e),await this.trainEnd(e))}};function Yv(e,t){return null==e&&(e={}),e instanceof Hv?[e]:Array.isArray(e)&&e[0]instanceof Hv?e:fb(e).map((e=>new Xv(e,t)))}var Zv=class e{constructor(){}static registerCallbackConstructor(t,n){va.assert(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),e.checkForDuplicate(n),null==e.constructors[t]&&(e.constructors[t]=[]),e.constructors[t].push(n)}static checkForDuplicate(t){for(let n in e.constructors)e.constructors[+n].forEach((e=>{if(e===t)throw new ib("Duplicate callback constructor.")}))}static clear(){e.constructors={}}static createCallbacks(t){let n=[];for(let r in e.constructors){let a=+r;t>=a&&n.push(...e.constructors[a])}return n.map((e=>new e))}};function Jv(e,t,n,r,a,s,i,o,l){let u=new Kv,d=[new qv,...Zv.createCallbacks(t)];null!=e&&d.push(...e),d.push(u);let h=new jv(d);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Qv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return vb(e,Ic.SerializationMap.getMap().classNameMap,t,"layer",n)}function ew(e,t){return Qs((()=>{"float32"!==e.dtype&&(e=ho(e,"float32"));let n=ou(px(e),t,!0),r=pl(n.shape,ex()),a=su(ed(n,r));return go(e,a)}))}function tw(e,t){return Qs((()=>td(px(Wu(t,e)),-1)))}function nw(e,t){return Qs((()=>td(bo(Wu(t,e)),-1)))}function rw(e,t){return Qs((()=>{let n=Wu(e,t),r=cl(bo(e),ex(),Number.MAX_VALUE),a=bo(go(n,r));return yo(100,td(a,-1))}))}function aw(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qs((()=>{if(n)t=vh(t);else{let e=ou(t,t.shape.length-1,!0);t=go(t,e)}return t=cl(t,ex(),1-ex()),zu(ou(yo(ho(e,"float32"),Eu(t)),t.shape.length-1))}))}function sw(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qs((()=>{let r=ho(gu(function(e){let t=[Yb(e.shape)];return jo(e,t)}(e)),"int32"),a=(t=cl(t,ex(),1-ex())).shape;return aw(jo(pd(r,a[a.length-1]),a),t,n)}))}function iw(e,t){return Qs((()=>{let n;return n=cl(t,ex(),1-ex()),n=Eu(go(n,Wu(1,n))),td(function(e,t){if(!va.arraysEqual(e.shape,t.shape))throw new ib(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Qs((()=>{let n=th(t),r=zu(bo(t));return fo(Wu(n,yo(t,e)),$u(hu(r)))}))}(e,n),-1)}))}function ow(e,t){return Qs((()=>{let n=ew(e,-1),r=ew(t,-1),a=yo(n,r);return zu(ou(a,-1))}))}Zv.constructors={};var lw={meanSquaredError:tw,meanAbsoluteError:nw,meanAbsolutePercentageError:rw,meanSquaredLogarithmicError:function(e,t){return Qs((()=>{let n=cl(t,ex(),Number.MAX_VALUE),r=Eu(fo(1,n)),a=cl(e,ex(),Number.MAX_VALUE),s=Eu(fo(1,a));return td(px(Wu(r,s)),-1)}))},squaredHinge:function(e,t){return Qs((()=>{let n=ed(0,Wu(1,yo(e,t)));return td(px(n),-1)}))},hinge:function(e,t){return Qs((()=>{let n=ed(0,Wu(1,yo(e,t)));return td(n,-1)}))},categoricalHinge:function(e,t){return Qs((()=>{let n=ou(yo(e,t),-1),r=tu(yo(Wu(1,e),t),-1);return ed(0,fo(1,Wu(r,n)))}))},logcosh:function(e,t){return Qs((()=>{let n=Math.log(2),r=Wu(t,e),a=Wu(fo(r,Pu(yo(-2,r))),n);return td(a,-1)}))},categoricalCrossentropy:aw,sparseCategoricalCrossentropy:sw,binaryCrossentropy:iw,kullbackLeiblerDivergence:function(e,t){return Qs((()=>{let n=cl(e,ex(),1),r=cl(t,ex(),1);return ou(yo(e,Eu(go(n,r))),-1)}))},poisson:function(e,t){return Qs((()=>{let n=Eu(fo(ex(),t));return td(Wu(t,yo(e,n)),-1)}))},cosineProximity:ow};function uw(e){if("string"==typeof e){if(e in lw)return lw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ib(t)}return e}function dw(e,t){return Qs((()=>{let n=yo(.5,cd(t)),r=tx(bu(t,n),e.dtype);return td(zl(e,r),-1)}))}function hw(e,t){return Qs((()=>tx(zl(So(e,-1),So(t,-1)),"float32")))}function pw(e,t){return Qs((()=>ho(ou(Gu(zl(e,1),zl(t,1))),"float32")))}function cw(e,t){return Qs((()=>{let n=pw(e,t),r=function(e,t){return Qs((()=>ho(ou(Gu(zl(e,0),zl(t,1))),"float32")))}(e,t),a=fo(n,r);return ho(Pl(bu(a,0),go(n,a),0),"float32")}))}function fw(e,t){return Qs((()=>{let n=pw(e,t),r=function(e,t){return Qs((()=>ho(ou(Gu(zl(e,1),zl(t,0))),"float32")))}(e,t),a=fo(n,r);return ho(Pl(bu(a,0),go(n,a),0),"float32")}))}function mw(e,t){return iw(e,t)}function gw(e,t){return e.rank===t.rank&&(e=_h(e,[e.rank-1])),(t=So(t,-1)).dtype!==e.dtype&&(t=ho(t,e.dtype)),ho(zl(e,t),"float32")}var yw=aw,bw=sw,xw={binaryAccuracy:dw,categoricalAccuracy:hw,precision:cw,categoricalCrossentropy:yw,sparseCategoricalCrossentropy:bw,mse:tw,MSE:tw,mae:nw,MAE:nw,mape:rw,MAPE:rw,cosine:ow};function vw(e){if("string"==typeof e&&e in xw)return xw[e];if("string"!=typeof e&&null!=e)return e;throw new ib(`Unknown metric ${e}`)}function ww(e){if(hb(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(lw))if(lw[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(xw))if(xw[n]===e){t=n;break}return void 0!==t?t:e.name}}function kw(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Iw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Iw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!Iw(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!Iw(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Sw(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log,s=function(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let e=!1;for(let n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),r=[];for(let t in e.nodesByDepth)r.push(...e.nodesByDepth[t])}a("_".repeat(t)),Nw(i,n,a),a("=".repeat(t));let o=e.layers;for(let d=0;d<o.length;++d)s?Tw(o[d],n,a):_w(o[d],n,r,a),a((d===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?Ux(e.collectedTrainableWeights):Ux(e.trainableWeights),t}(e),u=Ux(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}function Nw(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function Tw(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(s){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(s){r="multiple"}Nw([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function _w(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(d){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(d){a="multiple"}let i=[];for(let h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){let t=h.inboundLayers[e].name,n=h.nodeIndices[e],r=h.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Nw([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let h=1;h<i.length;++h)Nw(["","","","",i[h]],t,r)}function Cw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Ew(e,t){if(null===e)return null;if("string"==typeof e)return gb(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Cw(t,a,r)?n.push(r):n.push(Ew(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=gb(n);t[e]=Ew(r,e)}}return t}}function $w(e,t){if(null==e)return null;if("string"==typeof e)return mb(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Cw(t,a,r)?n.push(r):n.push($w(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=mb(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?$w(r,n):r}return t}}var Aw="4.21.0",Rw=class e extends Qx{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=Rb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],kb(this.inputs).length!==this.inputs.length)throw new ib(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);kb(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;hb(0===n,"input layer has >1 nodes"),hb(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e];if(!(n instanceof tv))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let n={},r={},a={},s={},i={},o=[],l=(t,n,r,a,s,u)=>{(null==a||null==s||null==u)&&(a=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);let d=a.inboundNodes[s];if(-1!==r.indexOf(d))throw new sb(`The tensor ${t.name} at layer "${a.name}" is part of a cycle.`);if(-1!==n.indexOf(d))return;this.containerNodes.add(e.nodeKey(a,s)),a.id in i||(i[a.id]=Object.keys(i).length),-1===r.indexOf(d)&&r.push(d);let h=d.inboundLayers.length;for(let e=0;e<h;e++){let t=d.inputTensors[e],a=d.inboundLayers[e],s=d.nodeIndices[e],i=d.tensorIndices[e];l(t,n,r,a,s,i)}for(n.push(d);r.indexOf(d)>=0;)r.splice(r.indexOf(d),1);o.push(d)},u=[],d=[];for(let e of this.outputs)l(e,u,d);let h=o.slice().reverse();for(let e of h){r[e.id]=e,e.id in n||(n[e.id]=0);let t=n[e.id],i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];t=Math.max(t,i),a[e.outboundLayer.id]=t,s[e.outboundLayer.id]=e.outboundLayer,n[e.id]=t;for(let a=0;a<e.inboundLayers.length;a++){let s=e.inboundLayers[a],i=e.nodeIndices[a],o=s.inboundNodes[i],l=null==n[o.id]?0:n[o.id];n[o.id]=Math.max(t+1,l),r[o.id]=o}}let p={};for(let e in n){let t=n[e];t in p||(p[t]=[]),p[t].push(r[e])}let c={};for(let e in a){let t=a[e];t in c||(c[t]=[]),c[t].push(s[e])}let f=Object.keys(c).map((e=>parseInt(e,10))).sort(wb);this.layers=[];for(let b of f){let t=c[b];t.sort(((e,t)=>{let n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(let n of t)n instanceof e&&this.internalContainerRefs.push(n),this.layers.push(n)}this.layersByDepth=c,f=Object.keys(p).map((e=>parseInt(e,10))).sort(wb);let m=this.inputs.slice(),g=[];for(let e of f)for(let t of p[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===m.indexOf(n))throw new sb(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(let e of t.outputTensors)m.push(e);g.push(e.name)}}this.nodesByDepth=p;let y=this.layers.map((e=>e.name));for(let e of y){let t=y.filter((t=>t===e)).length;if(1!==t)throw new sb(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Zx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ib("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n={},r=0,a=(e=>{let t=Object.keys(e);if(0===t.length)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(let i of this.layers)for(let[e,t]of i.weights.entries()){let s=a?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[s])throw new ib(`Duplicate weight name: ${s}`);n[s]=t,r++}let s=[];for(let i in e){let r=i;if(null==n[i]){let e=i.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[i]]);else if(t)throw new ib(`Provided weight data has no target variable: ${i}`);delete n[r]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new ib(`${e.length} of ${r} weights are not set: ${e}`)}qx(s)}parseWeights(e){for(let t in Object.keys(e)){let n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Aw}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=$w(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Qs((()=>{e=fb(e);let n=new rv;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return iv(this.outputs,n,t)}))}computeMask(e,t){return Qs((()=>{let n;return e=fb(e),n=null==t?db(null,e.length):fb(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Bx(e);if(t.length!==this.inputLayers.length)throw new ib(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(wb);if(r.length>1)for(let i of r){let e=this.nodesByDepth[i];for(let t of e){let e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;let r=[];for(let i=0;i<t.inboundLayers.length;i++){let e=t.inboundLayers[i],a=t.nodeIndices[i],s=t.tensorIndices[i],o=n[`${e.name}_${a}_${s}`];r.push(o)}let a=Bx(e.computeOutputShape(cb(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n[`${e.name}_${s}_${t}`]=a[t]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){let e=s[i];hb(e in n),a.push(n[e])}return cb(a)}runInternalGraph(e,t){null==t&&(t=db(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let r=this.inputs[o],a=e[o],s=t[o];n[r.id]=[a,s]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(wb);for(let o of r){let e=this.nodesByDepth[o];for(let t of e){let e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(let t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){let[t,n]=s[0];null==u.mask&&(u.mask=n),o=fb(e.call(t,u)),l=fb(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=fb(e.call(r,u)),l=fb(e.computeMask(r,i));if(e.activityRegularizer)throw new ob("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let o of this.outputs){hb(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(t){let n,r={};for(let a of this.layers){n=a instanceof e?1:0;for(let t=0;t<a.inboundNodes.length;t++){let s=e.nodeKey(a,t);this.containerNodes.has(s)&&(r[s]=n,n+=1)}}return r}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new ib("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let n of this.layers)if(n.name===e)return n;throw new ib(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ib(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Qs((()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=e.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t}))}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let o of this.layers){let t=o.getClassName(),a=o.getConfig(),s=[];for(let r=0;r<o.inboundNodes.length;r++){let t=o.inboundNodes[r],a=e.nodeKey(o,r),l={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),l=t.callArgs}catch(i){console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${t.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),l={}}if(t.inboundLayers.length>0){let r=[];for(let a=0;a<t.inboundLayers.length;a++){let s=t.inboundLayers[a],i=t.nodeIndices[a],o=t.tensorIndices[a],u=n[e.nodeKey(s,i)];null==u&&(u=0),r.push([s.name,u,o,l])}s.push(r)}}}let l={};l.name=o.name,l.className=t,l.config=a,l.inboundNodes=s,r.push(l)}t.layers=r;let a=[];for(let o=0;o<this.inputLayers.length;o++){let t=this.inputLayers[o],r=this.inputLayersNodeIndices[o],s=e.nodeKey(t,r);if(!this.containerNodes.has(s))continue;let i=n[s];null==i&&(i=0);let l=this.inputLayersTensorIndices[o];a.push([t.name,i,l])}t.inputLayers=a;let s=[];for(let o=0;o<this.outputLayers.length;o++){let t=this.outputLayers[o],r=this.outputLayersNodeIndices[o],a=e.nodeKey(t,r);if(!this.containerNodes.has(a))continue;let i=n[a];null==i&&(i=0);let l=this.outputLayersTensorIndices[o];s.push([t.name,i,l])}return t.outputLayers=s,t}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){let n,a=[];for(let i of t){let o=i[0],l=i[1],u=i[2];if(n=null==i[3]?{}:i[3],!(o in r))return void s(e,t);let d=r[o];if(d.inboundNodes.length<=l)return void s(e,t);let h=d.inboundNodes[l];a.push(h.outputTensors[u])}a.length>0&&e.apply(cb(a),n)}function o(e){let a=e.name,i=Qv(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ib(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}let l=t.name,u=t.layers;for(let f of u)o(f);for(;!Ib(a);)for(let e of u){let t=r[e.name];if(t.name in a){let e=a[t.name];delete a[t.name];for(let n of e)i(t,n)}}let d=[],h=[],p=t.inputLayers;for(let f of p){let e=f[0],t=f[1],n=f[2];hb(e in r);let a=r[e].inboundNodes[t].outputTensors;d.push(a[n])}let c=t.outputLayers;for(let f of c){let e=f[0],t=f[1],n=f[2];hb(e in r);let a=r[e].inboundNodes[t].outputTensors;h.push(a[n])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new ib("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Qs((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Fw(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Dw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=Qs((()=>{if(1===e.shape.length)return po(e);if(2===e.shape.length){if(e.shape[1]>1)return So(e,1);if(1===e.shape[1])return jo(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ei(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Rh(a,"float32")}return null}function Mw(e,t){return yo(e,t)}function Ow(e,t){let n,r,a=t;n=a.xs,r=a.ys,va.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=Lw("input",e.inputNames,n),i=Lw("output",e.outputNames,r),o=s[0].shape[0];va.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),va.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<s.length;l++)va.assert(s[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)va.assert(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Lw(e,t,n){if(n instanceof ts)return[n];if(Array.isArray(n))return va.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new ib(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function zw(e,t,n){let r=null!=n.batchesPerEpoch;if(va.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),va.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),va.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),va.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),va.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(Pw(n.validationData))va.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new ob("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let d=Yv(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:c}=Jv(d,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);p.setModel(e),e.history=c,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await p.onEpochBegin(f);let d=0,h=0;for(r||(m=await t.iterator());!r||d<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=Ow(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);let i=[];if(null!=n.classWeight){let t=Fw(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Dw(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);ei(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,ti(n)}await p.onBatchEnd(h,s),Gv(s),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(i){let t;t=Pw(n.validationData)?fb(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):fb(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,o),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Pw(e){return"function"==typeof e.iterator}function Bw(e){va.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Ww(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>rx(e,t,n-t))):rx(e,t,n-t)}function Vw(e,t){return Qs((()=>null==e?null:Array.isArray(e)?e.map((e=>Vw(e,t))):hx(e,"int32"===t.dtype?t:ho(t,"int32"))))}function Uw(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Gw(e){let t=[];e instanceof ts&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(nx(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Hw(e,t){if(null==e)return;let n=[];if(t instanceof ts)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let a in t){let e=t[a];n.push(e.id)}let r=[];if(e instanceof ts)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let a in e){let t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function jw(e){return Array.isArray(e)}function qw(e){return!function(e){return e instanceof ts}(e)&&!jw(e)}function Kw(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(jw(e)&&e.length>0)t=!0;else if(qw(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ib(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(qw(e)){r=[];for(let n of t){if(null==e[n])throw new ib(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(jw(e)){if(e.length!==t.length)throw new ib(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new ib(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=Gw(r),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=r[i];if(e.shape.length!==n[i].length)throw new ib(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!a)continue;let r=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&r!==o)throw new ib(`${s} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return r}function Xw(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new ib(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new ib(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=r[i];if(e.shape.length!==n[i].length)throw new ib(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[i].length;++r){if(0===r&&!a)continue;let o=e.shape[r],l=n[i][r];if(null!=l&&l!==o)throw new ib(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}var Yw=class extends Rw{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new ib("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Sw(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Uf.adagrad(.01),Adadelta:()=>Uf.adadelta(1,.95,ex()),Adam:()=>Uf.adam(.001,.9,.999,ex()),Adamax:()=>Uf.adamax(.002,.9,.999,ex(),0),RMSProp:()=>Uf.rmsprop(.001,.9,0,ex()),SGD:()=>Uf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ib(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof $c))throw new ib("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ib(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>uw(e)))}else{let n=uw(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ib(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(uw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ub("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ub("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===iw?-1!==["accuracy","acc"].indexOf(i)?r=dw:-1!==["crossentropy","ce"].indexOf(i)&&(r=mw):this.lossFunctions[e]===sw?-1!==["accuracy","acc"].indexOf(i)?r=gw:-1!==["crossentropy","ce"].indexOf(i)&&(r=bw):-1!==["accuracy","acc"].indexOf(i)?r=hw:-1!==["crossentropy","ce"].indexOf(i)&&(r=yw),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=vw(i),n=""+ww(i);let t;Ub(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=null==n.batchSize?32:n.batchSize;Bw(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction;return cb(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Hw(a[0],e),Hw(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new ob("Verbose mode is not implemented yet.");va.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=Qs((()=>{if(t.value){let{xs:n,ys:r}=Ow(e,t.value),i=n.concat(r),u=Qs((()=>a(i)));if(ei(i),0===l)for(let e=0;e<u.length;++e)s.push(au(0));let d=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=Qs((()=>fo(s[e],yo(d,t)))),l>0&&ei(n)}ei(u),o+=d,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let e=s[u];s[u]=go(s[u],o),ei(e)}return cb(s)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new ib(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ib(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ib("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new rv;if(e instanceof ts&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ib(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let o of this.inputs){let t=e[o.name];if(null==t)throw new ib(`No value is provided for the model's input ${o.name}`);s.add(o,t)}let i=iv(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=db(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ib(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qs((()=>{let r=this.checkNumSamples(e);if(n)throw new ob("Verbose predictLoop() is not implemented yet.");let a=Uw(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Qs((()=>{let n=a[t][0],r=a[t][1],s=Ww(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new rv(i);return iv(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return cb(s.map((e=>Xo(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Gw(e);Xw(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return Bw(e),this.predictLoop(n,e)}finally{Hw(n,e)}}predictOnBatch(e){Xw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new sb("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let e=this.feedOutputShapes[a];this.feedLossFns[a]===sw?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t){let n=kb(e.map((e=>e.shape[0])));n.sort();let r=kb(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new ib(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new ib(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!va.arraysEqual(n,r))throw new ib(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Kw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Kw(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){let r=[tw,iw,aw];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===aw&&1===s.shape[s.shape.length-1])throw new ib(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new ib(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new ib(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0,[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=Fw(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Dw(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return Qs((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ob("Verbose mode is not implemented yet.");if(null!=a)throw new ob("steps mode in testLoop() is not implemented yet");{let r=Uw(s,n),a=Rh(Qb(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=rx(a,s,o-s),u=Vw(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)i.push(au(0));for(let e=0;e<d.length;++e){let t=d[e];i[e]=fo(i[e],yo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=go(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(pb(e,r)>1){a+=`_${pb(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new rv(e),l=iv(this.outputs,o,{training:!0});for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],l[n]);null!=a[n]&&(e=Mw(e,a[n]));let s=td(e);t.push(s),i=0===n?e:fo(i,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{let t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=td(t(r[a],l[a]))}ti(e),s.push(e)}return i=td(i),this.calculateLosses().forEach((e=>{i=fo(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Qs((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new rv(s),o=iv(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=td(r(a[e],o[e]));t=0===e?s:fo(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=td(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t){let n,r,a,s,i,o,l,u,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{let p=null==h.batchSize?32:h.batchSize;Bw(p);let c=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,!1,p);n=c[0],r=c[1],d=c[2];let f,m=!1;if(null!=h.validationData&&h.validationData.length>0){if(m=!0,2!==h.validationData.length)throw 3===h.validationData.length?new ob("validationData including sample weights is not supported yet."):new ib(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);i=h.validationData[0],o=h.validationData[1];let e=await this.standardizeUserData(i,o,null,null,!0,p);l=e[0],u=e[1],f=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){m=!0;let e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=Ww(n,e,t),a=n,n=Ww(n,0,e),u=Ww(r,e,t),s=r,r=Ww(r,0,e),f=l.concat(u)}else null!=h.validationSteps&&(m=!0);let g=n.concat(r).concat(d);this.checkTrainableWeightsConsistency();let y,b,x=this.makeTrainFunction(),v=this.getDedupedMetricsNames();m?(this.makeTestFunction(),y=this.testFunction,b=v.slice().concat(v.map((e=>"val_"+e)))):(y=null,f=[],b=v.slice());let w=Yv(h.callbacks,h.yieldEvery);return await this.fitLoop(x,g,v,p,h.epochs,h.verbose,w,y,f,h.shuffle,b,h.initialEpoch,null,null)}finally{this.isTraining=!1,Hw(n,e),Hw(r,t),Hw(a,e),Hw(s,t),Hw(l,i),Hw(u,o),null!=d&&ei(d)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,d,h,p,c){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=c&&(f=!0,null==p))throw new ib("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m,g=this.checkNumSamples(t,r,p,"steps_per_epoch");null!=g&&(m=Qb(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=Jv(i,s,a,h,g,p,r,f,d);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<a;++x){await y.onEpochBegin(x);let a={};if(null!=p)throw new ob("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new ob("batch shuffling is not implemneted yet");u&&va.shuffle(m);let s=Rh(m),i=Uw(g,r);for(let u=0;u<i.length;++u){let d={};if(await y.onBatchBegin(u,d),Qs((()=>{let h=i[u][0],p=i[u][1],c=rx(s,h,p-h);d.batch=u,d.size=p-h;let m=Vw(t,c),g=e(m);for(let e=0;e<n.length;++e){let t=n[e],r=g[e];d[t]=r,ti(r)}if(u===i.length-1&&f){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];ti(s),a["val_"+r]=s}}})),await y.onBatchEnd(u,d),Gv(d),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return zw(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let e=await o.data();i.push(e[0])}return ei(s),Hw(n[0],e),Hw(n[1],t),cb(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Zs().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Zs().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=mb(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>mb(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=mb(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[mb(ww(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>mb(ww(e))));{let e={};for(let t in this.metrics)e[t]=mb(ww(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=Qv(Ew(e.optimizer_config));if("string"==typeof e.loss)t=gb(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>gb(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=gb(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>gb(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=gb(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Pc.getSaveHandlers(e);if(0===t.length)throw new ib(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ib(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ib("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Pc.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Aw}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Pc.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Pc.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(kw(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){kw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Yw.className="Model",Ic.registerClass(Yw);var Zw=class extends Yw{};async function Jw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=Qv(Ew(n),t);if(null!=e.weightsManifest){let t=await Pc.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),ei(t)}return r}async function Qw(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Pc.getLoadHandlers(e,t);if(0===n.length)n.push(Pc.browserHTTPRequest(e,t));else if(n.length>1)throw new ib(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ib("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Qv(Ew(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ib("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Pc.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ei(e),ei(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Zw.className="Functional",Ic.registerClass(Zw);var ek=class e extends Yw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Rb("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ib(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let n,r=t instanceof e||t instanceof Yw;if(r){if(n=t,1!==n.outputs.length)throw new ib("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ib("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new ib("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let e=nv({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(r)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new ib(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new ib("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=ev(this.outputs[0])}this.inboundNodes=[],new Zx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:db(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Vx(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new sb("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new sb("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new sb("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new sb("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(t,n){let r,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(n instanceof Array){if(null==n[0].className||"Merge"===n[0].className)throw new ib("Legacy serialization format not supported yet.");r=n}else va.assert(null!=n.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=n.layers,delete n.layers,s=n;let i=new t(s);if(!(i instanceof e))throw new ob(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of r){let t=Qv(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ib("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ib("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function tk(e){return new Yw(e)}function nk(e){return new ek(e)}function rk(e){return nv(e)}function ak(e,t){Zv.registerCallbackConstructor(e,t)}ek.className="Sequential",Ic.registerClass(ek);var sk=class extends Ic.Serializable{getConfig(){return{}}},ik=class extends sk{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new ob(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Gl(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}};ik.className="elu",Ic.registerClass(ik);var ok=class extends sk{apply(e){return dh(e)}};ok.className="selu",Ic.registerClass(ok);var lk=class extends sk{apply(e){return th(e)}};lk.className="relu",Ic.registerClass(lk);var uk=class extends sk{apply(e){return Qs((()=>sd(6,th(e))))}};uk.className="relu6",Ic.registerClass(uk);var dk=class extends sk{apply(e){return e}};dk.className="linear",Ic.registerClass(dk);var hk=class extends sk{apply(e){return Zo(e)}};hk.className="sigmoid",Ic.registerClass(hk);var pk=class extends sk{apply(e){return function(e){return Qs((()=>{let t=fo(.5,yo(.2,e));return cl(t,0,1)}))}(e)}};pk.className="hardSigmoid",Ic.registerClass(pk);var ck=class extends sk{apply(e){return Pu(e)}};ck.className="softplus",Ic.registerClass(ck);var fk=class extends sk{apply(e){return function(e){return Qs((()=>go(e,fo(bo(e),1))))}(e)}};fk.className="softsign",Ic.registerClass(fk);var mk=class extends sk{apply(e){return Qo(e)}};mk.className="tanh",Ic.registerClass(mk);var gk=class extends sk{apply(e){return vh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};gk.className="softmax",Ic.registerClass(gk);var yk=class extends sk{apply(e){return Vu(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};yk.className="logSoftmax",Ic.registerClass(yk);var bk=class extends sk{apply(e){return Qs((()=>Qs((()=>{let t=Math.sqrt(2),n=yo(.5,fo(1,jl(go(e,t))));return yo(e,n)}))))}};bk.className="gelu",Ic.registerClass(bk);var xk=class extends sk{apply(e){return Qs((()=>yo(.5,yo(e,fo(1,Qo(yo(su(go(2,Math.PI)),fo(e,yo(.044715,ru(e,3))))))))))}};xk.className="gelu_new",Ic.registerClass(xk);var vk=class extends sk{apply(e){return Qs((()=>yo(e,Qo(Pu(e)))))}};vk.className="mish",Ic.registerClass(vk);var wk=class extends sk{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Qs((()=>yo(Zo(yo(e,t)),e)))}};function kk(e){return e.getClassName()}function Ik(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return vb(e,Ic.SerializationMap.getMap().classNameMap,t,"activation")}function Sk(e){if(null==e){let e={className:"linear",config:{}};return Ik(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},Ik(t)}return e instanceof sk?e:Ik(e)}function Nk(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}wk.className="swish",Ic.registerClass(wk);var Tk=class extends Ic.Serializable{},_k=class extends Tk{constructor(e){super(),Nk(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Qs((()=>{let t=nd([1]);return this.hasL1&&(t=fo(t,ou(yo(this.l1,bo(e))))),this.hasL2&&(t=fo(t,ou(yo(this.l2,px(e))))),jo(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};_k.className="L1L2",Ic.registerClass(_k);var Ck={l1l2:"L1L2"};function Ek(e){return bb(e)}function $k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return vb(e,Ic.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ak(e){if(null==e)return null;if("string"==typeof e){return $k({className:e in Ck?Ck[e]:e,config:{}})}return e instanceof Tk?e:$k(e)}var Rk=class extends Qx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Wx(e);let n=th(e);return null!=this.maxValue&&(n=cl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Rk.className="ReLU",Ic.registerClass(Rk);var Fk=class extends Qx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Wx(e);return Su(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Fk.className="LeakyReLU",Ic.registerClass(Fk);var Dk=class extends Qx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=zx(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ak(e.alphaRegularizer),this.alphaConstraint=vv(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ib(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=Vx(e)).slice(1);if(null!=this.sharedAxes)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Kx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Wx(e),kd(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Lx(this.alphaInitializer),alphaRegularizer:Ek(this.alphaRegularizer),alphaConstraint:bv(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Dk.className="PReLU",Ic.registerClass(Dk);var Mk=class extends Qx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ob(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Wx(e);return Gl(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Mk.className="ELU",Ic.registerClass(Mk);var Ok=class extends Qx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Wx(e);return yo(n,ho(bu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Ok.className="ThresholdedReLU",Ic.registerClass(Ok);var Lk=class extends Qx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new gk).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Qs((()=>{let n=Wx(e),r=t.mask;if(null!=r){let e=yo(Wu(rd(n.shape),ho(r,n.dtype)),au(-1e9));n=fo(n,e)}return this.axis instanceof Array?this.axis.length>1?hu(Wu(n,Uu(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function zk(e,t,n){if("number"==typeof e)return db(e,t);if(e.length!==t)throw new ib(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!Xb(a))throw new ib(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Pk(e,t,n,r){let a;return null==e?e:(a="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((a+r-1)/r))}function Bk(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Jb([n-t,0]);else{if("same"!==r)throw new ib(`Unsupport padding mode: ${r}.`);e*=t}return e}function Wk(e,t){return Qs((()=>(Pb(t),"channelsFirst"===t?Qh(e,[0,2,3,1]):e)))}function Vk(e,t){return Qs((()=>(Pb(t),"channelsFirst"===t?Qh(e,[0,2,3,4,1]):e)))}function Uk(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Qs((()=>{if(null==s&&(s="channelsLast"),Pb(s),3!==e.rank&&4!==e.rank)throw new ib(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ib(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Wk(e,s);if("causal"===a)throw new ob("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=lp.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Qh(l,[0,3,1,2])),l}))}Lk.className="Softmax",Ic.registerClass(Lk);var Gk=class e extends Qx{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.verifyArgs(n),this.rank=t,Tb(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ob(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zk(n.kernelSize,t,"kernelSize"),this.strides=zk(null==n.strides?1:n.strides,t,"strides"),this.padding=null==n.padding?"valid":n.padding,Bb(this.padding),this.dataFormat=null==n.dataFormat?"channelsLast":n.dataFormat,Pb(this.dataFormat),this.activation=Sk(n.activation),this.useBias=null==n.useBias||n.useBias,this.biasInitializer=zx(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=vv(n.biasConstraint),this.biasRegularizer=Ak(n.biasRegularizer),this.activityRegularizer=Ak(n.activityRegularizer),this.dilationRate=zk(null==n.dilationRate?1:n.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ib(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ib(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ib(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(hb("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Nb(e.kernelSize,"number",1,3))throw new ib(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:kk(this.activation),useBias:this.useBias,biasInitializer:Lx(this.biasInitializer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),biasConstraint:bv(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Hk=class e extends Gk{constructor(t,n){super(t,n),this.kernel=null,e.verifyArgs(n),this.filters=n.filters,Tb(this.filters,"filters"),this.kernelInitializer=zx(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=vv(n.kernelConstraint),this.kernelRegularizer=Ak(n.kernelRegularizer)}build(e){e=Vx(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ib(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Qs((()=>{e=Wx(e);let t,n=null==this.bias?null:this.bias.read(),r=Cb(this.activation.getClassName());if(null!=r&&2===this.rank)t=Uk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Qs((()=>{if(null==s&&(s="channelsLast"),Pb(s),3!==e.shape.length)throw new ib(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ib(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ib(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===s&&(e=Qh(e,[0,2,1])),"causal"===a)throw new ob("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=xl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=fx(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Uk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ob("convolutions greater than 3D are not implemented yet.");t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Qs((()=>{if(null==s&&(s="channelsLast"),Pb(s),4!==e.rank&&5!==e.rank)throw new ib(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ib(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Vk(e,s);if("causal"===a)throw new ob("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=kl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=fx(o,n)),"channelsFirst"===s&&(o=Qh(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Vx(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let e=Pk(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Lx(this.kernelInitializer),kernelRegularizer:Ek(this.kernelRegularizer),kernelConstraint:bv(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ib(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},jk=class e extends Hk{constructor(t){super(2,t),e.verifyArgs(t)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Nb(e.kernelSize,"number",1,2))throw new ib(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};jk.className="Conv2D",Ic.registerClass(jk);var qk=class e extends Hk{constructor(t){super(3,t),e.verifyArgs(t)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ib(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};qk.className="Conv3D",Ic.registerClass(qk);var Kk=class extends jk{constructor(e){if(super(e),this.inputSpec=[new Kx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ib(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Vx(e)).length)throw new ib("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ib("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Kx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Qs((()=>{let t=Wx(e);if(4!==t.shape.length)throw new ib(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[s,Bk(i,d,l,this.padding),Bk(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qh(t,[0,2,3,1]));let c=wl(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=Qh(c,[0,3,1,2])),null!=this.bias&&(c=fx(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=Vx(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Bk(a[n],o,s,this.padding),a[r]=Bk(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Kk.className="Conv2DTranspose",Ic.registerClass(Kk);var Xk=class extends qk{constructor(e){if(super(e),this.inputSpec=[new Kx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ib(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Vx(e)).length)throw new ib("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ib("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Kx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Qs((()=>{let t=Wx(e);if(5!==t.shape.length)throw new ib(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Bk(o,c,d,this.padding),Bk(l,f,h,this.padding),Bk(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qh(t,[0,2,3,4,1]));let y=Sl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Qh(y,[0,4,1,2,3])),null!==this.bias&&(y=fx(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=Vx(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],d=this.strides[1],h=this.strides[2];return s[t]=this.filters,s[n]=Bk(s[n],u,i,this.padding),s[r]=Bk(s[r],d,o,this.padding),s[a]=Bk(s[a],h,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Xk.className="Conv3DTranspose",Ic.registerClass(Xk);var Yk=class extends Hk{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ib("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ib("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ib(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=zx(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ak(t.depthwiseRegularizer),this.depthwiseConstraint=vv(t.depthwiseConstraint),this.pointwiseInitializer=zx(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ak(t.pointwiseRegularizer),this.pointwiseConstraint=vv(t.pointwiseConstraint)}build(e){if((e=Vx(e)).length<this.rank+2)throw new ib(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ib(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Kx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Qs((()=>{let t;if(e=Wx(e),1===this.rank)throw new ob("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Qh(e,[0,2,3,1])),t=hh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=fx(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Qh(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Lx(this.depthwiseInitializer),e.pointwiseInitializer=Lx(this.pointwiseInitializer),e.depthwiseRegularizer=Ek(this.depthwiseRegularizer),e.pointwiseRegularizer=Ek(this.pointwiseRegularizer),e.depthwiseConstraint=bv(this.depthwiseConstraint),e.pointwiseConstraint=bv(this.pointwiseConstraint),e}};Yk.className="SeparableConv";var Zk=class extends Yk{constructor(e){super(2,e)}};Zk.className="SeparableConv2D",Ic.registerClass(Zk);var Jk=class e extends Hk{constructor(t){super(1,t),e.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Nb(e.kernelSize,"number",1,1))throw new ib(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Jk.className="Conv1D",Ic.registerClass(Jk);var Qk=class extends Qx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Qs((()=>{if(e=Wx(e),"channelsLast"===this.dataFormat){let t=sx(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sx(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=sx(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sx(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Qk.className="Cropping2D",Ic.registerClass(Qk);var eI=class extends Qx{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pb(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){Sb(Db,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Qs((()=>{let t=Wx(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Qh(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?bc.resizeNearestNeighbor(t,[e,r]):bc.resizeBilinear(t,[e,r]);return Qh(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?bc.resizeNearestNeighbor(t,[e,r]):bc.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};eI.className="UpSampling2D",Ic.registerClass(eI);var tI=class extends Gk{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=zx(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=vv(e.depthwiseConstraint),this.depthwiseRegularizer=Ak(e.depthwiseRegularizer)}build(e){if((e=Vx(e)).length<4)throw new ib(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ib(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qs((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Qs((()=>{null==a&&(a="channelsLast"),Pb(a);let i=Wk(e,a);if(4!==e.rank)throw new ib(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ib(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Al(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Qh(i,[0,3,1,2])),i}))}(e=Wx(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=fx(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Vx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Pk(t,this.kernelSize[0],this.padding,this.strides[0]),s=Pk(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Lx(this.depthwiseInitializer),e.depthwiseRegularizer=Ek(this.depthwiseRegularizer),e.depthwiseConstraint=bv(this.depthwiseRegularizer),e}};function nI(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ib("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function rI(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Qs((()=>{let l=t.shape.length;if(l<3)throw new ib(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Qb(2,l));if(t=Qh(t,u),null!=s)throw new ob("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=ho(ho(a,"bool"),"float32"),a.rank===l-1&&(a=pu(a,-1)),a=Qh(a,u)),r&&(t=rh(t,0),null!=a&&(a=rh(a,0)));let d,h,p,c=[],f=n,m=t.shape[0],g=qh(t);null!=a&&(h=qh(a));for(let t=0;t<m;++t){let n=g[t],r=Qs((()=>e(n,f)));if(null==a)d=r[0],f=r[1];else{let e=Qs((()=>{let e=h[t],n=Wu(cd(e),e);return{output:fo(yo(r[0],e),yo(f[0],n)),newStates:f.map(((t,a)=>fo(yo(r[1][a],e),yo(t,n))))}}));d=e.output,f=e.newStates}o&&c.push(d)}return o&&(p=Ch(c,1)),[d,p,f]}))}tI.className="DepthwiseConv2D",Ic.registerClass(tI);var aI=class e extends Qx{constructor(e){let t;if(super(e),null==e.cell)throw new ib("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new pI({cells:e.cell}):e.cell,null==t.stateSize)throw new ib("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Kx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Qb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Px(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return Qs((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ob("Constants support is not implemented in RNN yet.");Px(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Kx({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!va.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new ib(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Kx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Qs((()=>{if(!this.stateful)throw new ab("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new ib("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nd([n,e]))):this.states_=[nd([n,this.cell.stateSize])];else if(null==e)ei(this.states_),null!=this.keptStates&&(ei(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nd([n,e]))):this.states_[0]=nd([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ib(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ei(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!va.arraysEqual(r.shape,s))throw new ib(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ti(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=nI(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new Kx({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Xx){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Qs((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Wx(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ib(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=rI(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],d=o[2];this.stateful&&this.resetStates(d,r);let h=this.returnSequences?u:l;return this.returnState?[h].concat(d):h}))}getInitialState(e){return Qs((()=>{let t=nd(e.shape);return t=ou(t,[1,2]),t=nx(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?lx(t,[1,e]):t)):this.cell.stateSize>1?[lx(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(n.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===e.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),t),n)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=Qv(t.cell,n);return new e(Object.assign(t,{cell:r}))}};aI.className="RNN",Ic.registerClass(aI);var sI=class extends Qx{},iI=class extends sI{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Tb(this.units,"units"),this.activation=Sk(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zx(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zx(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zx(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ak(e.kernelRegularizer),this.recurrentRegularizer=Ak(e.recurrentRegularizer),this.biasRegularizer=Ak(e.biasRegularizer),this.kernelConstraint=vv(e.kernelConstraint),this.recurrentConstraint=vv(e.recurrentConstraint),this.biasConstraint=vv(e.biasConstraint),this.dropout=Zb([1,Jb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zb([1,Jb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Vx(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qs((()=>{if(2!==e.length)throw new ib(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cI({ones:()=>cd(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cI({ones:()=>cd(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=dx(null!=s?yo(e,s):e,this.kernel.read()),null!=this.bias&&(a=fx(a,this.bias.read())),null!=i&&(n=yo(n,i));let o=fo(a,dx(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:kk(this.activation),useBias:this.useBias,kernelInitializer:Lx(this.kernelInitializer),recurrentInitializer:Lx(this.recurrentInitializer),biasInitializer:Lx(this.biasInitializer),kernelRegularizer:Ek(this.kernelRegularizer),recurrentRegularizer:Ek(this.recurrentRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:bv(this.kernelConstraint),recurrentConstraint:bv(this.recurrentConstraint),biasConstraint:bv(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};iI.className="SimpleRNNCell",Ic.registerClass(iI);var oI=class extends aI{constructor(e){e.cell=new iI(e),super(e)}call(e,t){return Qs((()=>{null!=this.cell.dropoutMask&&(ei(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ei(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};oI.className="SimpleRNN",Ic.registerClass(oI);var lI=class extends sI{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ib("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Tb(this.units,"units"),this.activation=Sk(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sk(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zx(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zx(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zx(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ak(e.kernelRegularizer),this.recurrentRegularizer=Ak(e.recurrentRegularizer),this.biasRegularizer=Ak(e.biasRegularizer),this.kernelConstraint=vv(e.kernelConstraint),this.recurrentConstraint=vv(e.recurrentConstraint),this.biasConstraint=vv(e.biasConstraint),this.dropout=Zb([1,Jb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zb([1,Jb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=Vx(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qs((()=>{if(2!==e.length)throw new ib(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cI({ones:()=>cd(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cI({ones:()=>cd(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=yo(e,o[0]));let u=dx(e,this.kernel.read());this.useBias&&(u=fx(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yo(r,l[0]));let d=this.recurrentKernel.read(),[h,p]=Sh(d,[2*this.units,this.units],d.rank-1),c=dx(r,h),[f,m,g]=Sh(u,3,u.rank-1),[y,b]=Sh(c,2,c.rank-1);a=this.recurrentActivation.apply(fo(f,y)),s=this.recurrentActivation.apply(fo(m,b));let x=dx(yo(s,r),p);i=this.activation.apply(fo(g,x));let v=fo(yo(a,r),yo(fo(1,zu(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:kk(this.activation),recurrentActivation:kk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Lx(this.kernelInitializer),recurrentInitializer:Lx(this.recurrentInitializer),biasInitializer:Lx(this.biasInitializer),kernelRegularizer:Ek(this.kernelRegularizer),recurrentRegularizer:Ek(this.recurrentRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:bv(this.kernelConstraint),recurrentConstraint:bv(this.recurrentConstraint),biasConstraint:bv(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};lI.className="GRUCell",Ic.registerClass(lI);var uI=class extends aI{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new lI(e),super(e)}call(e,t){return Qs((()=>{null!=this.cell.dropoutMask&&(ei(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ei(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};uI.className="GRU",Ic.registerClass(uI);var dI=class extends sI{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Tb(this.units,"units"),this.activation=Sk(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sk(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zx(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zx(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zx(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ak(e.kernelRegularizer),this.recurrentRegularizer=Ak(e.recurrentRegularizer),this.biasRegularizer=Ak(e.biasRegularizer),this.kernelConstraint=vv(e.kernelConstraint),this.recurrentConstraint=vv(e.recurrentConstraint),this.biasConstraint=vv(e.biasConstraint),this.dropout=Zb([1,Jb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Zb([1,Jb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=Vx(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends xx{apply(t,n){let a=e.apply([r]),s=(new wx).apply([r]),i=e.apply([2*r]);return ox(ox(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Qs((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new ib(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cI({ones:()=>cd(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cI({ones:()=>cd(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,d=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=yo(e,u[0]));let h=dx(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yo(r,d[0])),h=fo(h,dx(r,this.recurrentKernel.read())),this.useBias&&(h=fx(h,this.bias.read()));let[p,c,f,m]=Sh(h,4,h.rank-1);s=this.recurrentActivation.apply(p),i=this.recurrentActivation.apply(c),o=fo(yo(i,a),yo(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=yo(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:kk(this.activation),recurrentActivation:kk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Lx(this.kernelInitializer),recurrentInitializer:Lx(this.recurrentInitializer),biasInitializer:Lx(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ek(this.kernelRegularizer),recurrentRegularizer:Ek(this.recurrentRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:bv(this.kernelConstraint),recurrentConstraint:bv(this.recurrentConstraint),biasConstraint:bv(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};dI.className="LSTMCell",Ic.registerClass(dI);var hI=class extends aI{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new dI(e),super(e)}call(e,t){return Qs((()=>{null!=this.cell.dropoutMask&&(ei(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ei(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};hI.className="LSTM",Ic.registerClass(hI);var pI=class extends sI{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Qs((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Px(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Ub(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[];for(let a of t.cells)r.push(Qv(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return jx(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}qx(t)}};function cI(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):mx(t(),n),o=()=>gx(i,t,r);return!a||a<=1?ti(o().clone()):Array(a).fill(void 0).map(o).map((e=>ti(e.clone())))}pI.className="StackedRNNCells",Ic.registerClass(pI);var fI=class extends aI{constructor(e){if(e.unroll)throw new ob("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ob("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Kx({ndim:5})]}call(e,t){return Qs((()=>{if(null!=this.cell.dropoutMask&&(ei(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ei(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ib("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Qs((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=nd([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Qs((()=>{if(!this.stateful)throw new ab("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ib("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nd(a))):this.states_=[nd(a)];else if(null==e)ei(this.states_),null!=this.keptStates&&(ei(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nd(a))):this.states_[0]=nd(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ib(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ei(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!va.arraysEqual(n.shape,r))throw new ib(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ti(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],d=Pk(l,r[0],a,s[0],i[0]),h=Pk(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,d,h]:[d,h,n]]}};fI.className="ConvRNN2D";var mI=class extends dI{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Tb(this.filters,"filters"),this.kernelSize=zk(n,2,"kernelSize"),this.kernelSize.forEach((e=>Tb(e,"kernelSize"))),this.strides=zk(r||1,2,"strides"),this.strides.forEach((e=>Tb(e,"strides"))),this.padding=a||"valid",Bb(this.padding),this.dataFormat=s||"channelsLast",Pb(this.dataFormat),this.dilationRate=zk(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Tb(e,"dilationRate")))}build(e){var t;e=Vx(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ib(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends xx{apply(e,t){return ix([n.apply([r]),rd([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Qs((()=>{if(3!==e.length)throw new ib(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cI({ones:()=>cd(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?yo(t[n],e):e,l=o(r,i,0),u=o(r,i,1),d=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cI({ones:()=>cd(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,c=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3),[y,b,x,v]=Sh(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?Sh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),d=this.inputConv(d,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);let[N,T,_,C]=Sh(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,_),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(fo(l,c)),$=this.recurrentActivation.apply(fo(u,f)),A=fo(yo($,s),yo(E,this.activation.apply(fo(d,m)))),R=yo(this.recurrentActivation.apply(fo(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=bl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?fx(a,n,this.dataFormat):a}recurrentConv(e,t){return bl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};mI.className="ConvLSTM2DCell",Ic.registerClass(mI);var gI=class extends fI{constructor(e){let t=new mI(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};gI.className="ConvLSTM2D",Ic.registerClass(gI);var yI=class extends Qx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return gx((()=>mx(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};yI.className="Dropout",Ic.registerClass(yI);var bI=class extends yI{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};bI.className="SpatialDropout1D",Ic.registerClass(bI);var xI=class extends Qx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Tb(this.units,"units"),this.activation=Sk(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=zx(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=zx(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=vv(e.kernelConstraint),this.biasConstraint=vv(e.biasConstraint),this.kernelRegularizer=Ak(e.kernelRegularizer),this.biasRegularizer=Ak(e.biasRegularizer),this.activityRegularizer=Ak(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=Vx(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=Vx(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n,r=Wx(e),a=Cb(this.activation.getClassName());return null!=a?n=dx(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=dx(r,this.kernel.read()),null!=this.bias&&(n=fx(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:kk(this.activation),useBias:this.useBias,kernelInitializer:Lx(this.kernelInitializer),biasInitializer:Lx(this.biasInitializer),kernelRegularizer:Ek(this.kernelRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:bv(this.kernelConstraint),biasConstraint:bv(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};xI.className="Dense",Ic.registerClass(xI);var vI=class extends Qx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Vx(e);for(let t of e.slice(1))if(null==t)throw new ib(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Yb(e,1)]}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Qh(n,e)}return function(e){if(e.rank<=1)throw new ib(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Yb(e.shape,1)];return jo(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};vI.className="Flatten",Ic.registerClass(vI);var wI=class extends Qx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Sk(e.activation)}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e);return this.activation.apply(n)}))}getConfig(){let e={activation:kk(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};wI.className="Activation",Ic.registerClass(wI);var kI=class extends Qx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Qs((()=>function(e,t){return Qs((()=>{if(2!==e.shape.length)throw new ib(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return lx(nx(e,1),[1,t,1])}))}(e=Wx(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};kI.className="RepeatVector",Ic.registerClass(kI);var II=class extends Qx{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let e=r[o];if(this.isUnknown(e)){if(null!==s)throw new ib("Can only specifiy one unknown dimension.");s=o}else a*=e}let i=Yb(e);if(null!==s){if(0===a||i%a!==0)throw new ib(n);r[s]=i/a}else if(i!==a)throw new ib(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return jo(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};II.className="Reshape",Ic.registerClass(II);var SI=class extends Qx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Qb(1,e.dims.length+1);if(!va.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Kx({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=Vx(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Qh(Wx(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};SI.className="Permute",Ic.registerClass(SI);var NI=class extends Qx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Wx(e);return Io(hd(n,this.maskValue),-1)}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e),r=Io(hd(n,this.maskValue),-1,!0);return yo(n,ho(r,n.dtype))}))}};NI.className="Masking",Ic.registerClass(NI);var TI=class extends Qx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(fb(e.inputLength))}this.inputDim=e.inputDim,Tb(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Tb(this.outputDim,"outputDim"),this.embeddingsInitializer=zx(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ak(e.embeddingsRegularizer),this.activityRegularizer=Ak(e.activityRegularizer),this.embeddingsConstraint=vv(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Qs((()=>this.maskZero?(e=Wx(e),hd(e,Bl(e))):null))}computeOutputShape(e){if(e=Vx(e),null==this.inputLength)return[...e,this.outputDim];let t=fb(this.inputLength);if(t.length!==e.length-1)throw new ib(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ib(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e);"int32"!==n.dtype&&(n=tx(n,"int32"));let r=hx(this.embeddings.read(),jo(n,[n.size]));return jo(r,Vx(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Lx(this.embeddingsInitializer),embeddingsRegularizer:Ek(this.embeddingsRegularizer),activityRegularizer:Ek(this.activityRegularizer),embeddingsConstraint:bv(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};TI.className="Embedding",Ic.registerClass(TI);var _I=class extends Qx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ob}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ib("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Vx(e)]),e.length<2)throw new ib(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=kb(t),t.length>1)throw new ib(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){let t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===kb(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Qs((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=Jb(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=nx(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let s of e){let e=s.rank;if(null==e){let e=s.shape,r=e[0],a=e.slice(1).concat([r]),i=jo(s,[r].concat(Yb(e.slice(1))));i=Qh(i,[1,0]),i=jo(i,a),t.push(i),n=!0}else if(e>1){let r=Qb(1,e).concat([0]);t.push(Qh(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=jo(Qh(jo(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(Qb(0,a-1));r=Qh(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(let r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=kb(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Qs((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ib("`mask` should be an Array");if(!Array.isArray(e))throw new ib("`inputs` should be an Array");if(t.length!==e.length)throw new ib(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:pu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Gu(n,t[e]);return n}))}},CI=class extends _I{constructor(e){super(e)}mergeFunction(e){return Qs((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fo(t,e[n]);return t}))}};CI.className="Add",Ic.registerClass(CI);var EI=class extends _I{constructor(e){super(e)}mergeFunction(e){return Qs((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yo(t,e[n]);return t}))}};EI.className="Multiply",Ic.registerClass(EI);var $I=class extends _I{constructor(e){super(e)}mergeFunction(e){return Qs((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fo(t,e[n]);return yo(1/e.length,t)}))}};$I.className="Average",Ic.registerClass($I);var AI=class extends _I{constructor(e){super(e)}mergeFunction(e){return Qs((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ed(t,e[n]);return t}))}};AI.className="Maximum",Ic.registerClass(AI);var RI=class extends _I{constructor(e){super(e)}mergeFunction(e){return Qs((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sd(t,e[n]);return t}))}};RI.className="Minimum",Ic.registerClass(RI);var FI=class extends _I{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ib("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let t=e[r].slice();t.splice(this.axis,1);let a=!1;for(let e of n)if(va.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new ib("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Qs((()=>ix(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ib("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ib("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ib("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ib(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Qs((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let s=0;s<e.length;++s)null==t[s]?r.push(ho(cd(e[s]),"bool")):t[s].rank<e[s].rank?r.push(pu(t[s],-1)):r.push(t[s]);let a=Xo(r,this.axis);return ko(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function DI(e,t){for(;e<0;)e+=t;return e}FI.className="Concatenate",Ic.registerClass(FI);var MI=class extends _I{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){va.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ob("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ib(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ib(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>DI(t,e[n].shape.length))):[DI(this.axes,n.shape.length),DI(this.axes,r.shape.length)],this.normalize&&(n=ew(n,t[0]),r=ew(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ob("batchDot is not implemented for tensors of 4D or higher rank yet");if(va.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),va.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ob("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return Qs((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=jo(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=jo(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?ou(yo(e,t),s[0]):ou(yo(Qh(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Yo(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=_h(i,t)}return 1===i.shape.length&&(i=pu(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[DI(this.axes,e.length),DI(this.axes,t.length)],n}computeOutputShape(e){va.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ob("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};MI.className="Dot",Ic.registerClass(MI);var OI=class extends Qx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e);return gx((()=>fo(ux(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};OI.className="GaussianNoise",Ic.registerClass(OI);var LI=class extends Qx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qs((()=>{this.invokeCallHook(e,t);let n=Wx(e);return this.rate>0&&this.rate<1?gx((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return yo(n,ux(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};LI.className="GaussianDropout",Ic.registerClass(LI);var zI=class extends Qx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Wx(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qs((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return gx((()=>{let t=Wx(e),r=-1.7580993408473766,a=xu(Yd(n),this.rate);a=tx(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=fo(yo(t,a),yo(fo(a,-1),r));return fo(yo(o,s),i)}),(()=>Wx(e)),t.training||!1)}return e}))}};function PI(e,t,n,r,a){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=al(e,t,n,r,a,i);else if(3===e.rank)s=sl(e,t,n,r,a,i);else{if(4!==e.rank)throw new ob(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=il(e,t,n,r,a,i)}return s}function BI(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return va.arraysEqual(r.slice().sort(),Qb(0,e.rank-1))?function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Qs((()=>{let s=ld(e,r),i=s.mean,o=s.variance;return[PI(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Qs((()=>{let s=ld(e,r),i=s.mean,o=s.variance,l=[];for(let t of Qb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=jo(i,l),d=jo(o,l),h=null==t?null:jo(t,l),p=null==n?null:jo(n,l);return[PI(e,u,d,p,h,a),i,o]}))}(e,t,n,r,a)}zI.className="AlphaDropout",Ic.registerClass(zI);var WI=class extends Qx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zx(e.betaInitializer||"zeros"),this.gammaInitializer=zx(e.gammaInitializer||"ones"),this.movingMeanInitializer=zx(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=zx(e.movingVarianceInitializer||"ones"),this.betaConstraint=vv(e.betaConstraint),this.gammaConstraint=vv(e.gammaConstraint),this.betaRegularizer=Ak(e.betaRegularizer),this.gammaRegularizer=Ak(e.gammaRegularizer)}build(e){e=Vx(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ib(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Kx({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Qs((()=>{let n=null!=t.training&&t.training,r=Wx(e),a=r.shape,s=a.length,i=Qb(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=db(1,s);l[o]=a[o];let u=i.slice();u.sort();let d=!va.arraysEqual(u,Qb(0,s).slice(0,s-1));if(!n)return(()=>{if(d){let e=jo(this.movingMean.read(),l),t=jo(this.movingVariance.read(),l),n=this.center?jo(this.beta.read(),l):null,a=this.scale?jo(this.gamma.read(),l):null;return PI(r,e,t,n,a,this.epsilon)}return PI(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[h,p,c]=BI(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Qs((()=>{let r=1-n,a=e.read(),s=yo(Wu(a,t),r);e.write(Wu(a,s))}))};return f(this.movingMean,p,this.momentum),f(this.movingVariance,c,this.momentum),h}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Lx(this.betaInitializer),gammaInitializer:Lx(this.gammaInitializer),movingMeanInitializer:Lx(this.movingMeanInitializer),movingVarianceInitializer:Lx(this.movingVarianceInitializer),betaRegularizer:Ek(this.betaRegularizer),gammaRegularizer:Ek(this.gammaRegularizer),betaConstraint:bv(this.betaConstraint),gammaConstraint:bv(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};WI.className="BatchNormalization",Ic.registerClass(WI);var VI=class extends Qx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zx(e.betaInitializer||"zeros"),this.gammaInitializer=zx(e.gammaInitializer||"ones"),this.betaRegularizer=Ak(e.betaRegularizer),this.gammaRegularizer=Ak(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=Vx(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==kb(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Wx(e),r=n.shape,a=r.length;return Qs((()=>{let{mean:e,variance:t}=ld(n,this.axis,!0),s=db(1,a);for(let n of this.axis)s[n]=r[n];let i=e=>null!=e&&e.shape.length!==a?jo(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],d=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),d.push(1)):(u.push(1),d.push(r[n]));return e=fu(e,u),t=fu(t,u),null!=o&&(o=fu(o,d)),null!=l&&(l=fu(l,d)),PI(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Lx(this.betaInitializer),gammaInitializer:Lx(this.gammaInitializer),betaRegularizer:Ek(this.betaRegularizer),gammaRegularizer:Ek(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};VI.className="LayerNormalization",Ic.registerClass(VI);var UI=class extends Qx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ib(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ib(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ib(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Kx({ndim:4})]}computeOutputShape(e){let t,n;return e=Vx(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Qs((()=>function(e,t,n){return Qs((()=>{if(4!==e.rank)throw new ib(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new ib("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new ib(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],md(e,r)}))}(Wx(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function GI(e,t,n,r,a,s){return Qs((()=>{Pb(a),Wb(s),Bb(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Wk(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Zu(e,t,n,o):qo(e,t,n,o),"channelsFirst"===a&&(i=Qh(i,[0,3,1,2])),i}))}function HI(e,t,n,r,a,s){return Qs((()=>{Pb(a),Wb(s),Bb(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Vk(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Ju(e,t,n,o):Ko(e,t,n,o),"channelsFirst"===a&&(i=Qh(i,[0,4,1,2,3])),i}))}UI.className="ZeroPadding2D",Ic.registerClass(UI);var jI=class extends Qx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ib(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Tb(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ib(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Tb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Bb(this.padding),this.inputSpec=[new Kx({ndim:3})]}computeOutputShape(e){let t=Pk((e=Vx(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Qs((()=>{this.invokeCallHook(e,t),e=nx(Wx(e),2);let n=this.poolingFunction(Wx(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return _h(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},qI=class extends jI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pb(a),Bb(r),GI(e,t,n,r,a,"max")}};qI.className="MaxPooling1D",Ic.registerClass(qI);var KI=class extends jI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pb(a),Bb(r),GI(e,t,n,r,a,"avg")}};KI.className="AveragePooling1D",Ic.registerClass(KI);var XI=class extends Qx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ib(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Tb(this.poolSize,"poolSize"),Tb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pb(this.dataFormat),Bb(this.padding),this.inputSpec=[new Kx({ndim:4})]}computeOutputShape(e){e=Vx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Pk(t,this.poolSize[0],this.padding,this.strides[0]),n=Pk(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Qs((()=>(this.invokeCallHook(e,t),this.poolingFunction(Wx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},YI=class extends XI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pb(a),Bb(r),GI(e,t,n,r,a,"max")}};YI.className="MaxPooling2D",Ic.registerClass(YI);var ZI=class extends XI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pb(a),Bb(r),GI(e,t,n,r,a,"avg")}};ZI.className="AveragePooling2D",Ic.registerClass(ZI);var JI=class extends Qx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ib(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Tb(this.poolSize,"poolSize"),Tb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pb(this.dataFormat),Bb(this.padding),this.inputSpec=[new Kx({ndim:5})]}computeOutputShape(e){e=Vx(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Pk(t,this.poolSize[0],this.padding,this.strides[0]),n=Pk(n,this.poolSize[1],this.padding,this.strides[1]),r=Pk(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Qs((()=>(this.invokeCallHook(e,t),this.poolingFunction(Wx(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},QI=class extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pb(a),Bb(r),HI(e,t,n,r,a,"max")}};QI.className="MaxPooling3D",Ic.registerClass(QI);var eS=class extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pb(a),Bb(r),HI(e,t,n,r,a,"avg")}};eS.className="AveragePooling3D",Ic.registerClass(eS);var tS=class extends Qx{constructor(e){super(e),this.inputSpec=[new Kx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ob}},nS=class extends tS{constructor(e){super(e||{})}call(e,t){return Qs((()=>{let t=Wx(e);return td(t,1)}))}};nS.className="GlobalAveragePooling1D",Ic.registerClass(nS);var rS=class extends tS{constructor(e){super(e||{})}call(e,t){return Qs((()=>{let t=Wx(e);return tu(t,1)}))}};rS.className="GlobalMaxPooling1D",Ic.registerClass(rS);var aS=class extends Qx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pb(this.dataFormat),this.inputSpec=[new Kx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ob}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},sS=class extends aS{call(e,t){return Qs((()=>{let t=Wx(e);return"channelsLast"===this.dataFormat?td(t,[1,2]):td(t,[2,3])}))}};sS.className="GlobalAveragePooling2D",Ic.registerClass(sS);var iS=class extends aS{call(e,t){return Qs((()=>{let t=Wx(e);return"channelsLast"===this.dataFormat?tu(t,[1,2]):tu(t,[2,3])}))}};iS.className="GlobalMaxPooling2D",Ic.registerClass(iS);var oS=class extends Qx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=Qv(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},lS=class extends oS{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Vx(e)).length<3)throw new ib(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=Vx(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Qs((()=>rI(((e,n)=>[Wx(this.layer.call(e,t)),[]]),e=Wx(e),[],!1,null,null,!1,!0)[1]))}};lS.className="TimeDistributed",Ic.registerClass(lS);var uS=class extends oS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Qv(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Qv(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){Sb(Lb,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new ob("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):cb(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=nI(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new ib("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new Kx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ob("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Xx;for(let l of s)if(l instanceof Xx!==o)throw new ib("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Qs((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=rh(r,1)),"concat"===this.mergeMode?s=ix([n,r]):"sum"===this.mergeMode?s=fo(n,r):"ave"===this.mergeMode?s=yo(.5,fo(n,r)):"mul"===this.mergeMode?s=yo(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ub(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ub(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Qv(t.layer);if(delete t.layer,null!=t.numConstants)throw new ob("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};uS.className="Bidirectional",Ic.registerClass(uS);var dS=class extends Qx{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Qs((()=>("float32"!==(e=Wx(e)).dtype&&(e=tx(e,"float32")),fo(yo(e,this.scale),this.offset))))}};dS.className="Rescaling",Ic.registerClass(dS);var{resizeBilinear:hS,cropAndResize:pS}=bc,cS=class extends Qx{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return Qs((()=>{let l,u=!1,d=[t/s,n/i,(r+t)/s,(a+n)/i],h=[];3===e.rank?(u=!0,l=Ch([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(d);let p=Vs(h,[h.length,4]),c=Jd(0,h.length,1,"int32"),f=pS(l,p,c,[r,a],"nearest");return tx(u?Wx(qh(f)):f,o)}))}upsize(e,t,n,r){return Qs((()=>tx(hS(e,[t,n]),r)))}call(e,t){return Qs((()=>{let t=Wx(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){let t=(e=Vx(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};cS.className="CenterCrop",Ic.registerClass(cS);var fS=class extends Qx{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Vx(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Qs((()=>{let n;if("int32"!==(e=Wx(e)).dtype&&(e=tx(e,"int32")),"undefined"!=typeof t.countWeights){if("count"!==this.outputMode)throw new ib(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Wx(t.countWeights)}let r=tu(e),a=nu(e),s=bu(this.numTokens,r).bufferSync().get(0),i=xu(a,0).bufferSync().get(0);if(!s||!i)throw new ib(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let a=Wx(e);if("int32"!==a.dtype&&(a=tx(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=pu(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=pu(a,-1)),a.rank>2)throw new ib(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i,o=["multiHot","oneHot"].includes(t),l=a;if(i=El(l,"undefined"!=typeof r&&"count"===t?r:[],n,o),"tfIdf"!==t)return i;if(r)return yo(i,r);throw new ib("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}};fS.className="CategoryEncoding",Ic.registerClass(fS);var mS=new Set(["bilinear","nearest"]),gS=class extends Qx{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!mS.has(e.interpolation))throw new ib(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=Vx(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Qs((()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return bc.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return bc.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...mS]} are supported`)}))}};gS.className="Resizing",Ic.registerClass(gS);var yS=class{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}};yS.className="RandomSeed";var bS=class extends Qx{constructor(e){super(e),this.randomGenerator=new yS(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};bS.className="BaseRandomLayer";var xS=new Set(["bilinear","nearest"]),vS=class extends bS{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new ib(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new ib(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ib(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!xS.has(n))throw new ib(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){let t=(e=Vx(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Qs((()=>{let t=Wx(e);this.imgHeight=t.shape[t.shape.length-3];let n=t.shape[t.shape.length-2];this.widthFactor=Yd([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);let a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return bc.resizeBilinear(e,a);case"nearest":return bc.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...xS]} are supported`)}}))}};function wS(e){return new tv(e)}function kS(e){return new Mk(e)}function IS(e){return new Rk(e)}function SS(e){return new Fk(e)}function NS(e){return new Dk(e)}function TS(e){return new Lk(e)}function _S(e){return new Ok(e)}function CS(e){return new Jk(e)}function ES(e){return new jk(e)}function $S(e){return new Kk(e)}function AS(e){return new qk(e)}function RS(e){return new Xk(e)}function FS(e){return new Zk(e)}function DS(e){return new Qk(e)}function MS(e){return new eI(e)}function OS(e){return new tI(e)}function LS(e){return new wI(e)}function zS(e){return new xI(e)}function PS(e){return new yI(e)}function BS(e){return new bI(e)}function WS(e){return new vI(e)}function VS(e){return new kI(e)}function US(e){return new II(e)}function GS(e){return new SI(e)}function HS(e){return new TI(e)}function jS(e){return new CI(e)}function qS(e){return new $I(e)}function KS(e){return new FI(e)}function XS(e){return new AI(e)}function YS(e){return new RI(e)}function ZS(e){return new EI(e)}function JS(e){return new MI(e)}function QS(e){return new WI(e)}function eN(e){return new VI(e)}function tN(e){return new UI(e)}function nN(e){return new KI(e)}function rN(e){return nN(e)}function aN(e){return nN(e)}function sN(e){return new ZI(e)}function iN(e){return sN(e)}function oN(e){return sN(e)}function lN(e){return new eS(e)}function uN(e){return lN(e)}function dN(e){return lN(e)}function hN(e){return new nS(e)}function pN(e){return new sS(e)}function cN(e){return new rS(e)}function fN(e){return new iS(e)}function mN(e){return new qI(e)}function gN(e){return new YI(e)}function yN(e){return new QI(e)}function bN(e){return new uI(e)}function xN(e){return new lI(e)}function vN(e){return new hI(e)}function wN(e){return new dI(e)}function kN(e){return new oI(e)}function IN(e){return new iI(e)}function SN(e){return new gI(e)}function NN(e){return new mI(e)}function TN(e){return new aI(e)}function _N(e){return new pI(e)}function CN(e){return new uS(e)}function EN(e){return new lS(e)}vS.className="RandomWidth",Ic.registerClass(vS);var $N=cN,AN=fN,RN=mN,FN=gN;function DN(e){return new OI(e)}function MN(e){return new LI(e)}function ON(e){return new zI(e)}function LN(e){return new NI(e)}function zN(e){return new dS(e)}function PN(e){return new cS(e)}function BN(e){return new gS(e)}function WN(e){return new fS(e)}function VN(e){return new vS(e)}var UN={};function GN(e,t){return dw(e,t)}function HN(e,t){return mw(e,t)}function jN(e,t){return gw(e,t)}function qN(e,t){return hw(e,t)}function KN(e,t){return yw(e,t)}function XN(e,t){return cw(e,t)}function YN(e,t){return fw(e,t)}function ZN(e,t){return ow(e,t)}function JN(e,t){return nw(e,t)}function QN(e,t){return rw(e,t)}function eT(e,t){return rw(e,t)}function tT(e,t){return rw(e,t)}function nT(e,t){return tw(e,t)}function rT(e,t){return tw(e,t)}function aT(e,t){return tw(e,t)}function sT(e,t){return function(e,t){return Qs((()=>{let n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return au(1).sub(n.div(r))}))}(e,t)}f(UN,{MAPE:()=>eT,MSE:()=>rT,binaryAccuracy:()=>GN,binaryCrossentropy:()=>HN,categoricalAccuracy:()=>qN,categoricalCrossentropy:()=>KN,cosineProximity:()=>ZN,mape:()=>tT,meanAbsoluteError:()=>JN,meanAbsolutePercentageError:()=>QN,meanSquaredError:()=>nT,mse:()=>aT,precision:()=>XN,r2Score:()=>sT,recall:()=>YN,sparseCategoricalAccuracy:()=>jN});var iT={};f(iT,{modelFromJSON:()=>Jw});var oT={};function lT(e){return new _k(e)}function uT(e){return function(e){return Nk(e),new _k({l1:null!=e?e.l1:null,l2:0})}(e)}function dT(e){return function(e){return Nk(e),new _k({l2:null!=e?e.l2:null,l1:0})}(e)}f(oT,{l1:()=>uT,l1l2:()=>lT,l2:()=>dT});var hT=class extends Hv{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Yw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function pT(e,t){return e<t}function cT(e,t){return e>t}var fT=class extends hT{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ob("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=pT:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=cT:this.monitorFunc=pT,this.monitorFunc===pT&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===pT?1/0:-1/0}async onEpochEnd(e,t){await Uv(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};var mT,gT,yT={earlyStopping:function(e){return new fT(e)}};Le().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(mT||(mT={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(gT||(gT={}));var bT={};function xT(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};bT[e]=n}function vT(e){return bT[e]}function wT(e){delete bT[e]}function kT(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return IT(t.inputNames[o],n,r,a);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>IT(e,n,r,a)))}let l=IT(t.inputNames[o],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:va.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function IT(e,t,n,r){let[a,s]=_T(e,n);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[TT(a,e)]));return void 0!==i?t[TT(a,i)][s]:void 0}function ST(e,t,n){return t[TT(e,n.currentContextId)]}function NT(e,t){let[n,r,a]=_T(e,t);return[TT(n,t&&t.currentContextId),r,a]}function TT(e,t){return t?`${e}-${t}`:e}function _T(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let r,a=e.split(":");if(1===a.length)r=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function CT(e,t,n){let r=kT("pad",e,t,n);if("explicit"===r){r=kT("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function ET(e){return e.kept?e:po(e)}var $T={};f($T,{json:()=>AT});var AT=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RT={};f(RT,{json:()=>FT});var FT=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],DT={};f(DT,{json:()=>MT});var MT=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],OT={};f(OT,{json:()=>LT});var LT=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],zT={};f(zT,{json:()=>PT});var PT=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],BT={};f(BT,{json:()=>WT});var WT=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VT={};f(VT,{json:()=>UT});var UT=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],GT={};f(GT,{json:()=>HT});var HT=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],jT={};f(jT,{json:()=>qT});var qT=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],KT={};f(KT,{json:()=>XT});var XT=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],YT={};f(YT,{json:()=>ZT});var ZT=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],JT={};f(JT,{json:()=>QT});var QT=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],e_={};f(e_,{json:()=>t_});var t_=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],n_={};f(n_,{json:()=>r_});var r_=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],a_={};f(a_,{json:()=>s_});var s_=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],i_={};f(i_,{json:()=>o_});var o_=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],l_={};f(l_,{json:()=>u_});var u_=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],d_={};f(d_,{json:()=>h_});var h_=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],p_={};f(p_,{json:()=>c_});var c_=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],f_=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[$T,RT,DT,OT,zT,BT,VT,GT,jT,KT,YT,JT,e_,n_,a_,i_,l_,d_,p_].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=NT(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(d).length?h.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(d).forEach((e=>{let[t]=NT(e),n=i[t];null!=n&&(n.signatureKey=d[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=NT(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=vT(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=g_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=g_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=T_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=T_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=b_(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=b_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=N_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=N_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=y_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=y_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=C_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=C_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=S_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=S_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=__(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=__(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=w_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=w_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=k_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=k_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=v_(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=v_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=NT(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:x_(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=NT(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=NT(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function m_(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Le().global;if("undefined"!=typeof t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function g_(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e[t];return null!=a?m_(a.s,r):n}function y_(e,t,n){let r=e[t];return r?r.b:n}function b_(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function x_(e){switch("string"==typeof e&&(e=mT[e]),e){case mT.DT_FLOAT:case mT.DT_HALF:return"float32";case mT.DT_INT32:case mT.DT_INT64:case mT.DT_INT8:case mT.DT_UINT8:return"int32";case mT.DT_BOOL:return"bool";case mT.DT_DOUBLE:return"float32";case mT.DT_STRING:return"string";case mT.DT_COMPLEX64:case mT.DT_COMPLEX128:return"complex64";default:return null}}function v_(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function w_(e,t,n){let r=e[t];return r&&r.type?x_(r.type):n}function k_(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>x_(e))):n}function I_(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function S_(e,t,n){let r=e[t];return r&&r.shape?I_(r.shape):n}function N_(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function T_(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>m_(e,r))):n}function __(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>I_(e))):n}function C_(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var E_=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return IT(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return IT(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return b_(this.node.rawAttrs,e,t);if(null!=n.s)return g_(this.node.rawAttrs,e,t);if(null!=n.b)return y_(this.node.rawAttrs,e,t);if(null!=n.shape)return S_(this.node.rawAttrs,e,t);if(null!=n.type)return w_(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return N_(this.node.rawAttrs,e,t);if(null!=n.list.s)return T_(this.node.rawAttrs,e,t);if(null!=n.list.shape)return __(this.node.rawAttrs,e,t);if(null!=n.list.b)return C_(this.node.rawAttrs,e,t);if(null!=n.list.type)return k_(this.node.rawAttrs,e,t)}return t}},$_={};f($_,{OP_SCOPE_SUFFIX:()=>zs,abs:()=>bo,acos:()=>xo,acosh:()=>vo,add:()=>fo,addN:()=>wo,all:()=>ko,any:()=>Io,argMax:()=>So,argMin:()=>No,asin:()=>To,asinh:()=>_o,atan:()=>Co,atan2:()=>Eo,atanh:()=>$o,avgPool:()=>qo,avgPool3d:()=>Ko,basicLSTMCell:()=>el,batchNorm:()=>rl,batchNorm2d:()=>al,batchNorm3d:()=>sl,batchNorm4d:()=>il,batchToSpaceND:()=>tl,bincount:()=>ol,bitwiseAnd:()=>ll,booleanMaskAsync:()=>Jh,broadcastArgs:()=>ul,broadcastTo:()=>dl,buffer:()=>uo,cast:()=>ho,ceil:()=>hl,clipByValue:()=>cl,clone:()=>po,complex:()=>Bs,concat:()=>Xo,concat1d:()=>fl,concat2d:()=>ml,concat3d:()=>gl,concat4d:()=>yl,conv1d:()=>xl,conv2d:()=>bl,conv2dTranspose:()=>wl,conv3d:()=>kl,conv3dTranspose:()=>Sl,cos:()=>Nl,cosh:()=>Tl,cosineWindow:()=>ip,cumprod:()=>_l,cumsum:()=>Cl,denseBincount:()=>El,depthToSpace:()=>$l,depthwiseConv2d:()=>Al,diag:()=>Rl,dilation2d:()=>Fl,div:()=>go,divNoNan:()=>Wl,dot:()=>Vl,dropout:()=>ap,einsum:()=>Ul,elu:()=>Gl,enclosingPowerOfTwo:()=>sp,ensureShape:()=>Hl,equal:()=>zl,erf:()=>jl,euclideanNorm:()=>du,exp:()=>hu,expandDims:()=>pu,expm1:()=>cu,eye:()=>mu,fft:()=>wh,fill:()=>pl,floor:()=>gu,floorDiv:()=>mo,fused:()=>lp,gather:()=>yu,gatherND:()=>rp,greater:()=>bu,greaterEqual:()=>xu,ifft:()=>kh,imag:()=>vu,image:()=>bc,inTopKAsync:()=>op,irfft:()=>Ih,isFinite:()=>wu,isInf:()=>ku,isNaN:()=>Iu,leakyRelu:()=>Su,less:()=>Nu,lessEqual:()=>Tu,linalg:()=>xc,linspace:()=>_u,localResponseNormalization:()=>Cu,log:()=>Eu,log1p:()=>$u,logSigmoid:()=>Bu,logSoftmax:()=>Vu,logSumExp:()=>Uu,logicalAnd:()=>Gu,logicalNot:()=>Hu,logicalOr:()=>ju,logicalXor:()=>qu,losses:()=>vc,lowerBound:()=>Yu,matMul:()=>Yo,max:()=>tu,maxPool:()=>Zu,maxPool3d:()=>Ju,maxPoolWithArgmax:()=>Qu,maximum:()=>ed,mean:()=>td,meshgrid:()=>ad,min:()=>nu,minimum:()=>sd,mirrorPad:()=>id,mod:()=>od,moments:()=>ld,movingAverage:()=>ep,mul:()=>yo,multiRNNCell:()=>ud,multinomial:()=>dd,neg:()=>zu,norm:()=>uu,notEqual:()=>hd,oneHot:()=>pd,ones:()=>rd,onesLike:()=>cd,op:()=>Ps,outerProduct:()=>fd,pad:()=>md,pad1d:()=>gd,pad2d:()=>yd,pad3d:()=>bd,pad4d:()=>xd,pool:()=>wd,pow:()=>ru,prelu:()=>kd,print:()=>co,prod:()=>Id,raggedGather:()=>Sd,raggedRange:()=>Nd,raggedTensorToTensor:()=>Td,rand:()=>_d,randomGamma:()=>qd,randomNormal:()=>Kd,randomStandardNormal:()=>Xd,randomUniform:()=>Yd,randomUniformInt:()=>Zd,range:()=>Jd,real:()=>Qd,reciprocal:()=>eh,relu:()=>th,relu6:()=>nh,reshape:()=>jo,reverse:()=>rh,reverse1d:()=>ah,reverse2d:()=>sh,reverse3d:()=>ih,reverse4d:()=>oh,rfft:()=>Nh,round:()=>lh,rsqrt:()=>uh,scalar:()=>au,scatterND:()=>tp,searchSorted:()=>Xu,selu:()=>dh,separableConv2d:()=>hh,setdiff1dAsync:()=>ph,sigmoid:()=>Zo,sign:()=>ch,signal:()=>yc,sin:()=>fh,sinh:()=>mh,slice:()=>Jo,slice1d:()=>gh,slice2d:()=>yh,slice3d:()=>bh,slice4d:()=>xh,softmax:()=>vh,softplus:()=>Pu,spaceToBatchND:()=>vd,sparse:()=>wc,sparseToDense:()=>np,spectral:()=>gc,split:()=>Sh,sqrt:()=>su,square:()=>iu,squaredDifference:()=>Th,squeeze:()=>_h,stack:()=>Ch,step:()=>Eh,stridedSlice:()=>$h,string:()=>kc,sub:()=>Wu,sum:()=>ou,tan:()=>Ah,tanh:()=>Qo,tensor:()=>Vs,tensor1d:()=>Rh,tensor2d:()=>Fh,tensor3d:()=>Dh,tensor4d:()=>Mh,tensor5d:()=>Oh,tensor6d:()=>Lh,tensorScatterUpdate:()=>Vh,tile:()=>fu,topk:()=>Uh,transpose:()=>Qh,truncatedNormal:()=>Gh,unique:()=>Hh,unsortedSegmentSum:()=>jh,unstack:()=>qh,upperBound:()=>Kh,variable:()=>Xh,where:()=>Pl,whereAsync:()=>Zh,zeros:()=>nd,zerosLike:()=>Bl});function A_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!=typeof e&&"number"!=typeof t){va.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];va.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function R_(e){return!("number"==typeof e||e.some((e=>e<0)))}function F_(e,t,n){let r=D_(e,n),a=!R_(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=D_(e.shape,r)})),!R_(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function D_(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var M_=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=au(0),ti(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),A_(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ti(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Vs([],[0].concat(this.elementShape));let n=this.readMany(e);return A_(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ch(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Vs([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return A_(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Xo(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,qh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];Qs((()=>{t=jo(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=jo(Jo(t,i,o),this.elementShape)}return s}));let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},O_=class e{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);A_(t,e.shape,"TensorList shape mismatch: "),ti(e)})),this.idTensor=au(0),this.maxNumElements=r,ti(this.idTensor)}copy(){return new e([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);A_(e,this.elementShape,"TensorList shape mismatch: ");let r=F_(this.elementShape,this.tensors,e);return Qs((()=>{let e=this.tensors.map((e=>jo(e,r)));return Ch(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=F_(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,A_(r.shape,e,"TensorList shape mismatch: "),jo(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(A_(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ti(e),this.tensors.push(e)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new e([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let e=0;e<Math.min(this.tensors.length,t);++e)n.tensors[e]=this.tensors[e];return n}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);A_(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=F_(this.elementShape,this.tensors,t);return jo(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);A_(this.elementShape,t.shape,"TensorList shape mismatch: "),ti(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);A_(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=F_(this.elementShape,this.tensors,n);return 0===e.length?Vs([],[0].concat(r)):Qs((()=>{let t=e.map((e=>jo(this.tensors[e],r)));return Ch(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);A_(this.elementShape,t,"TensorList shape mismatch: ");let n=F_(this.elementShape,this.tensors,t);return 0===this.size()?Vs([],[0].concat(n)):Qs((()=>{let e=this.tensors.map((e=>jo(e,n)));return Xo(e,0)}))}};var L_=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=kT("thenBranch",e,t,n),a=kT("elseBranch",e,t,n),s=kT("cond",e,t,n),i=kT("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=kT("body",e,t,n),a=kT("cond",e,t,n),s=kT("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[ET(kT("pred",e,t,n))];case"Switch":{let r=kT("pred",e,t,n),a=kT("data",e,t,n);return a.kept||(a=ET(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==IT(e,t,n)));if(r){return[ET(IT(r,t,n))]}return}case"Enter":{let r=kT("frameName",e,t,n),a=kT("tensor",e,t,n);return n.enterFrame(r),[ET(a)]}case"Exit":{let r=kT("tensor",e,t,n);return n.exitFrame(),[ET(r)]}case"NextIteration":{let r=kT("tensor",e,t,n);return n.nextIteration(),[ET(r)]}case"TensorArrayV3":{let r=kT("size",e,t,n),a=kT("dtype",e,t,n),s=kT("elementShape",e,t,n),i=kT("dynamicSize",e,t,n),o=kT("clearAfterRead",e,t,n),l=kT("identicalElementShapes",e,t,n),u=kT("name",e,t,n),d=new M_(u,a,r,s,l,i,o);return n.addTensorArray(d),[d.idTensor,au(1)]}case"TensorArrayWriteV3":{let r=kT("tensorArrayId",e,t,n),a=kT("index",e,t,n),s=kT("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=kT("tensorArrayId",e,t,n),a=kT("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=kT("tensorArrayId",e,t,n),a=kT("indices",e,t,n),s=kT("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=kT("tensorArrayId",e,t,n),a=kT("indices",e,t,n),s=kT("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=kT("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=kT("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=kT("tensorArrayId",e,t,n),a=kT("tensor",e,t,n),s=kT("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=kT("tensorArrayId",e,t,n);return[au(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=kT("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=kT("tensorListId",e,t,n),a=kT("index",e,t,n),s=kT("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=kT("tensorListId",e,t,n),a=kT("index",e,t,n),s=kT("elementShape",e,t,n),i=kT("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=kT("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new O_([],n,e.dtype,r),i=qh(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(kT("tensor",e,t,n),r,kT("elementShape",e,t,n),kT("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=kT("elementShape",e,t,n),s=kT("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=kT(r,e,t,n),o=function(e,t,n,r){return new O_([],e,t,r)}(a,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=kT("tensorListId",e,t,n),a=kT("indices",e,t,n),s=kT("elementShape",e,t,n),i=kT("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=kT("tensorListId",e,t,n),a=kT("elementShape",e,t,n),s=kT("elementDType",e,t,n),i=kT("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);A_(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=qh(e);return new O_(a,t,r)}(kT("tensor",e,t,n),kT("elementShape",e,t,n),kT("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=kT("tensorListId",e,t,n),a=n.getTensorList(r.id),s=kT("dtype",e,t,n),i=kT("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=kT("tensorListId",e,t,n),a=kT("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=kT("tensorListId",e,t,n),a=kT("elementShape",e,t,n),s=kT("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=kT("tensor",e,t,n),a=kT("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=D_(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Qs((()=>{let n=[];e=jo(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=jo(Jo(e,o,l),s)}return e.dispose(),n})),l=new O_([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,kT("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=kT("tensorListId",e,t,n);return[au(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=kT("tensorListId",e,t,n),a=kT("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function z_(e,t,n){let[r,a]=kT("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=kT("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=kT("strides",e,t,n),h=CT(e,t,n),p=kT("dataFormat",e,t,n).toUpperCase(),c=kT("dilations",e,t,n),[f,m]=kT("args",e,t,n);return i&&(m=f,f=void 0),{stride:d,pad:h,dataFormat:p,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:kT("leakyreluAlpha",e,t,n)}}function P_(e,t,n){return{boxes:kT("boxes",e,t,n),scores:kT("scores",e,t,n),maxOutputSize:kT("maxOutputSize",e,t,n),iouThreshold:kT("iouThreshold",e,t,n),scoreThreshold:kT("scoreThreshold",e,t,n),softNmsSigma:kT("softNmsSigma",e,t,n)}}var B_=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=au(0),this.tensorMap=new Map,ti(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return au(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Qs((()=>{let e=qh(t),r=n.length,a=e.length;va.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];ti(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Qs((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Ch(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function W_(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qs,s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(kT("a",e,t,n),kT("b",e,t,n))];case"AddN":return[r.addN(kT("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(kT("a",e,t,n),kT("b",e,t,n))];case"Mul":return[r.mul(kT("a",e,t,n),kT("b",e,t,n))];case"RealDiv":case"Div":return[r.div(kT("a",e,t,n),kT("b",e,t,n))];case"DivNoNan":return[r.divNoNan(kT("a",e,t,n),kT("b",e,t,n))];case"FloorDiv":return[r.floorDiv(kT("a",e,t,n),kT("b",e,t,n))];case"Sub":return[r.sub(kT("a",e,t,n),kT("b",e,t,n))];case"Minimum":return[r.minimum(kT("a",e,t,n),kT("b",e,t,n))];case"Maximum":return[r.maximum(kT("a",e,t,n),kT("b",e,t,n))];case"Pow":return[r.pow(kT("a",e,t,n),kT("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(kT("a",e,t,n),kT("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(kT("x",e,t,n))];case"Acos":return[r.acos(kT("x",e,t,n))];case"Acosh":return[r.acosh(kT("x",e,t,n))];case"Asin":return[r.asin(kT("x",e,t,n))];case"Asinh":return[r.asinh(kT("x",e,t,n))];case"Atan":return[r.atan(kT("x",e,t,n))];case"Atan2":return[r.atan2(kT("x",e,t,n),kT("y",e,t,n))];case"Atanh":return[r.atanh(kT("x",e,t,n))];case"Ceil":return[r.ceil(kT("x",e,t,n))];case"Complex":return[r.complex(kT("real",e,t,n),kT("imag",e,t,n))];case"Cos":return[r.cos(kT("x",e,t,n))];case"Cosh":return[r.cosh(kT("x",e,t,n))];case"Elu":return[r.elu(kT("x",e,t,n))];case"Erf":return[r.erf(kT("x",e,t,n))];case"Exp":return[r.exp(kT("x",e,t,n))];case"Expm1":return[r.expm1(kT("x",e,t,n))];case"Floor":return[r.floor(kT("x",e,t,n))];case"Log":return[r.log(kT("x",e,t,n))];case"Log1p":return[r.log1p(kT("x",e,t,n))];case"Imag":return[r.imag(kT("x",e,t,n))];case"Neg":return[r.neg(kT("x",e,t,n))];case"Reciprocal":return[r.reciprocal(kT("x",e,t,n))];case"Real":return[r.real(kT("x",e,t,n))];case"Relu":return[r.relu(kT("x",e,t,n))];case"Round":return[r.round(kT("x",e,t,n))];case"Selu":return[r.selu(kT("x",e,t,n))];case"Sigmoid":return[r.sigmoid(kT("x",e,t,n))];case"Sin":return[r.sin(kT("x",e,t,n))];case"Sign":return[r.sign(kT("x",e,t,n))];case"Sinh":return[r.sinh(kT("x",e,t,n))];case"Softplus":return[r.softplus(kT("x",e,t,n))];case"Sqrt":return[r.sqrt(kT("x",e,t,n))];case"Square":return[r.square(kT("x",e,t,n))];case"Tanh":return[r.tanh(kT("x",e,t,n))];case"Tan":return[r.tan(kT("x",e,t,n))];case"ClipByValue":return[r.clipByValue(kT("x",e,t,n),kT("clipValueMin",e,t,n),kT("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(kT("x",e,t,n))];case"Rsqrt":return[r.rsqrt(IT(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(kT("x",e,t,n),kT("alpha",e,t,n))];case"Prelu":return[r.prelu(kT("x",e,t,n),kT("alpha",e,t,n))];case"IsNan":return[r.isNaN(IT(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(IT(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(IT(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return L_(e,t,n);case"convolution":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Conv1D":{let a=kT("stride",e,t,n),s=kT("pad",e,t,n),i=kT("dataFormat",e,t,n).toUpperCase(),o=kT("dilation",e,t,n);return[r.conv1d(kT("x",e,t,n),kT("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=kT("strides",e,t,n),s=CT(e,t,n),i=kT("dataFormat",e,t,n).toUpperCase(),o=kT("dilations",e,t,n);return[r.conv2d(kT("x",e,t,n),kT("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=z_(e,t,n);return[r.fused.conv2d({x:kT("x",e,t,n),filter:kT("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=z_(e,t,n);return[r.fused.depthwiseConv2d({x:kT("x",e,t,n),filter:kT("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=kT("outputShape",e,t,n),s=kT("strides",e,t,n),i=CT(e,t,n);return[r.conv2dTranspose(kT("x",e,t,n),kT("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=kT("strides",e,t,n),s=CT(e,t,n),i=kT("dilations",e,t,n),o=kT("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(kT("input",e,t,n),kT("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("dataFormat",e,t,n).toUpperCase(),o=kT("dilations",e,t,n);return[r.conv3d(kT("x",e,t,n),kT("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("kernelSize",e,t,n);return[r.avgPool(kT("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("kernelSize",e,t,n);return[r.maxPool(kT("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("kernelSize",e,t,n),o=kT("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(kT("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("kernelSize",e,t,n);return[r.avgPool3d(kT("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("kernelSize",e,t,n);return[r.maxPool3d(kT("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=kT("strides",e,t,n),s=kT("pad",e,t,n),i=kT("dilations",e,t,n),o=a[1],l=a[2],u=i[1],d=i[2];return[r.dilation2d(kT("x",e,t,n),kT("filter",e,t,n),[o,l],s,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Fill":{let a=kT("shape",e,t,n),s=kT("dtype",e,t,n),i=kT("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=kT("start",e,t,n),s=kT("stop",e,t,n),i=kT("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=kT("logits",e,t,n),s=kT("numSamples",e,t,n),i=kT("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=kT("indices",e,t,n),s=kT("depth",e,t,n),i=kT("onValue",e,t,n),o=kT("offValue",e,t,n),l=kT("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(kT("shape",e,t,n),kT("dtype",e,t,n))];case"OnesLike":return[r.onesLike(kT("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(kT("shape",e,t,n),kT("dtype",e,t,n),kT("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(kT("shape",e,t,n),kT("minval",e,t,n),kT("maxval",e,t,n),kT("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(kT("shape",e,t,n),kT("minval",e,t,n),kT("maxval",e,t,n),kT("seed",e,t,n))];case"Range":{let a=kT("start",e,t,n),s=kT("stop",e,t,n),i=kT("step",e,t,n);return[r.range(a,s,i,kT("dtype",e,t,n))]}case"TruncatedNormal":{let a=kT("shape",e,t,n),s=kT("mean",e,t,n),i=kT("stdDev",e,t,n),o=kT("seed",e,t,n);return[r.truncatedNormal(a,s,i,kT("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(kT("shape",e,t,n),kT("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(kT("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:$_;switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=P_(e,t,n),d=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=P_(e,t,n),u=kT("padToMaxOutputSize",e,t,n),d=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=P_(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(kT("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(kT("x",e,t,n),kT("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"LowerBound":{let a=kT("sortedSequence",e,t,n),s=kT("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=kT("x",e,t,n),s=kT("k",e,t,n),i=kT("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=kT("sortedSequence",e,t,n),s=kT("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=kT("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=kT("x",e,t,n),s=kT("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"ResizeBilinear":{let a=kT("images",e,t,n),s=kT("size",e,t,n),i=kT("alignCorners",e,t,n),o=kT("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=kT("images",e,t,n),s=kT("size",e,t,n),i=kT("alignCorners",e,t,n),o=kT("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=kT("image",e,t,n),s=kT("boxes",e,t,n),i=kT("boxInd",e,t,n),o=kT("cropSize",e,t,n),l=kT("method",e,t,n),u=kT("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=kT("images",e,t,n),s=kT("transforms",e,t,n),i=kT("outputShape",e,t,n),o=kT("fillValue",e,t,n),l=kT("interpolation",e,t,n),u=kT("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=kT("default",e,t,n);return[IT(e.name,t,n)||a];case"Placeholder":return[IT(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ET(kT("x",e,t,n))];case"IdentityN":return kT("x",e,t,n).map((e=>ET(e)));case"Shape":return[r.tensor1d(kT("x",e,t,n).shape,"int32")];case"ShapeN":return kT("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(kT("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(kT("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let s=kT("x",e,t,n),i=kT("data",e,t,n),o=kT("message",e,t,n),l=kT("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Equal":return[r.equal(kT("a",e,t,n),kT("b",e,t,n))];case"NotEqual":return[r.notEqual(kT("a",e,t,n),kT("b",e,t,n))];case"Greater":return[r.greater(kT("a",e,t,n),kT("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(kT("a",e,t,n),kT("b",e,t,n))];case"Less":return[r.less(kT("a",e,t,n),kT("b",e,t,n))];case"LessEqual":return[r.lessEqual(kT("a",e,t,n),kT("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(kT("a",e,t,n),kT("b",e,t,n))];case"LogicalNot":return[r.logicalNot(kT("a",e,t,n))];case"LogicalOr":return[r.logicalOr(kT("a",e,t,n),kT("b",e,t,n))];case"Select":case"SelectV2":return[r.where(kT("condition",e,t,n),kT("a",e,t,n),kT("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(kT("a",e,t,n),kT("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(kT("a",e,t,n),kT("b",e,t,n),kT("transposeA",e,t,n),kT("transposeB",e,t,n))];case"Einsum":return[r.einsum(kT("equation",e,t,n),...kT("tensors",e,t,n))];case"Transpose":return[r.transpose(kT("x",e,t,n),kT("perm",e,t,n))];case"_FusedMatMul":let[a,s]=kT("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=kT("numArgs",e,t,n),u=kT("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,h]=kT("args",e,t,n);return[r.fused.matMul({a:kT("a",e,t,n),b:kT("b",e,t,n),transposeA:kT("transposeA",e,t,n),transposeB:kT("transposeB",e,t,n),bias:d,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(kT("a",e,t,n),kT("numLower",e,t,n),kT("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(kT("x",e,t,n),kT("axis",e,t,n),kT("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(kT("x",e,t,n),kT("mean",e,t,n),kT("variance",e,t,n),kT("offset",e,t,n),kT("scale",e,t,n),kT("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(kT("x",e,t,n),kT("radius",e,t,n),kT("bias",e,t,n),kT("alpha",e,t,n),kT("beta",e,t,n))];case"Softmax":return[r.softmax(kT("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(kT("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(kT("paramsNestedSplits",e,t,n),kT("paramsDenseValues",e,t,n),kT("indices",e,t,n),kT("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(kT("starts",e,t,n),kT("limits",e,t,n),kT("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(kT("shape",e,t,n),kT("values",e,t,n),kT("defaultValue",e,t,n),kT("rowPartitionTensors",e,t,n),kT("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Max":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.max(kT("x",e,t,n),a,s)]}case"Mean":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.mean(kT("x",e,t,n),a,s)]}case"Min":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.min(kT("x",e,t,n),a,s)]}case"Sum":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.sum(kT("x",e,t,n),a,s)]}case"All":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.all(kT("x",e,t,n),a,s)]}case"Any":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.any(kT("x",e,t,n),a,s)]}case"ArgMax":{let a=kT("axis",e,t,n);return[r.argMax(kT("x",e,t,n),a)]}case"ArgMin":{let a=kT("axis",e,t,n);return[r.argMin(kT("x",e,t,n),a)]}case"Prod":{let a=kT("axis",e,t,n),s=kT("keepDims",e,t,n);return[r.prod(kT("x",e,t,n),a,s)]}case"Cumprod":{let a=kT("axis",e,t,n),s=kT("exclusive",e,t,n),i=kT("reverse",e,t,n);return[r.cumprod(kT("x",e,t,n),a,s,i)]}case"Cumsum":{let a=kT("axis",e,t,n),s=kT("exclusive",e,t,n),i=kT("reverse",e,t,n);return[r.cumsum(kT("x",e,t,n),a,s,i)]}case"Bincount":let a=kT("x",e,t,n),s=kT("weights",e,t,n),i=kT("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=kT("x",e,t,n),s=kT("weights",e,t,n),i=kT("size",e,t,n),o=kT("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"ConcatV2":case"Concat":{let a=kT("n",e,t,n),s=kT("axis",e,t,n),i=kT("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=kT("x",e,t,n),s=kT("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=kT("axis",e,t,n),s=kT("batchDims",e,t,n),i=kT("x",e,t,n),o=kT("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=kT("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=kT("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=kT("axis",e,t,n),s=kT("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=kT("begin",e,t,n),s=kT("size",e,t,n);return[r.slice(kT("x",e,t,n),a,s)]}case"StridedSlice":{let a=kT("begin",e,t,n),s=kT("end",e,t,n),i=kT("strides",e,t,n),o=kT("beginMask",e,t,n),l=kT("endMask",e,t,n),u=kT("ellipsisMask",e,t,n),d=kT("newAxisMask",e,t,n),h=kT("shrinkAxisMask",e,t,n),p=kT("x",e,t,n);return[r.stridedSlice(p,a,s,i,o,l,u,d,h)]}case"Pack":return Qs((()=>{let a=kT("axis",e,t,n),s=kT("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map((e=>{let t=va.arraysEqual(e.shape,i);if(!t&&!va.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,a)]}));case"Unpack":{let a=kT("axis",e,t,n),s=kT("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=kT("reps",e,t,n);return[r.tile(kT("x",e,t,n),a)]}case"Split":case"SplitV":{let a=kT("axis",e,t,n),s=kT("numOrSizeSplits",e,t,n),i=kT("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=kT("indices",e,t,n),s=kT("values",e,t,n),i=kT("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=kT("x",e,t,n),s=kT("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=kT("sparseIndices",e,t,n),s=kT("outputShape",e,t,n),i=kT("sparseValues",e,t,n),o=kT("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=kT("indices",e,t,n),s=kT("values",e,t,n),i=kT("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(kT("indices",e,t,n),kT("values",e,t,n),kT("denseShape",e,t,n),kT("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(kT("inputIndices",e,t,n),kT("inputShape",e,t,n),kT("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(kT("data",e,t,n),kT("indices",e,t,n),kT("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(kT("data",e,t,n),kT("indices",e,t,n),kT("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"FFT":return[r.fft(kT("x",e,t,n))];case"IFFT":return[r.ifft(kT("x",e,t,n))];case"RFFT":return[r.rfft(kT("x",e,t,n))];case"IRFFT":return[r.irfft(kT("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(kT("input",e,t,n),kT("pattern",e,t,n),kT("rewrite",e,t,n),kT("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(kT("data",e,t,n),kT("dataSplits",e,t,n),kT("separator",e,t,n),kT("nGramWidths",e,t,n),kT("leftPad",e,t,n),kT("rightPad",e,t,n),kT("padWidth",e,t,n),kT("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(kT("input",e,t,n),kT("delimiter",e,t,n),kT("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(kT("input",e,t,n),kT("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:$_;switch(e.op){case"Cast":return[r.cast(kT("x",e,t,n),kT("dtype",e,t,n))];case"ExpandDims":{let a=kT("axis",e,t,n);return[r.expandDims(kT("x",e,t,n),a)]}case"Squeeze":{let a=kT("axis",e,t,n);return[r.squeeze(kT("x",e,t,n),a)]}case"Reshape":return[r.reshape(kT("x",e,t,n),kT("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(kT("x",e,t,n),kT("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(kT("x",e,t,n),kT("padding",e,t,n),kT("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(kT("x",e,t,n),kT("padding",e,t,n),kT("constantValue",e,t,n))];case"SpaceToBatchND":{let a=kT("blockShape",e,t,n),s=kT("paddings",e,t,n);return[r.spaceToBatchND(kT("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=kT("blockShape",e,t,n),s=kT("crops",e,t,n);return[r.batchToSpaceND(kT("x",e,t,n),a,s)]}case"DepthToSpace":{let a=kT("blockSize",e,t,n),s=kT("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(kT("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(kT("x",e,t,n),kT("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(kT("s0",e,t,n),kT("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=kT("keyDType",e,t,n),s=kT("valueDType",e,t,n),i=new B_(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=kT("tableHandle",e,t,n,r),s=kT("keys",e,t,n),i=kT("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=kT("tableHandle",e,t,n,r),s=kT("keys",e,t,n),i=kT("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=kT("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":let s=vT(e.op);if(s&&s.customExecutor)return s.customExecutor(new E_(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return va.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var V_=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function U_(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map((e=>_T(e)[0])));r=r||[];let d=new Set(r.map((e=>_T(e.name)[0]))),h=[...t];for(;h.length>0;){let e=h.pop();if((X_(e)||Y_(e)||Z_(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&!u.has(e.name)&&!d.has(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function G_(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>_T(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),d=new Map(u.map((e=>[e.name,e]))),h={};for(let m of u){h[m.name]=h[m.name]||0;for(let e of m.children)i(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}let p=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),c=[...p];for(;p.length>0;){let e=p.pop(),t=d.get(e);for(let n of t.children.filter(i))0===--h[n.name]&&(c.push(n.name),p.push(n.name))}let f=function(e,t){let n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){let e=r.pop(),t=n.get(e);for(let s of t.children)!n.has(s.name)||a.has(s.name)||(a.add(s.name),r.push(s.name))}return e.filter((e=>a.has(e.name)))}(c.map((e=>d.get(e))),l);return function(e,t){let n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map((e=>e.name))),i=e=>s.has("string"==typeof e?e:e.name);for(let o of e){for(let e of o.children.filter(i)){if(!n.has(e.name))throw new H_(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new H_(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!a(o))for(let e of o.inputs){if(!n.has(e.name))throw new H_(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new H_(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}var H_=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};var j_=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),q_=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),K_=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function X_(e){return j_.has(e.op)}function Y_(e){return q_.has(e.op)}function Z_(e){return K_.has(e.op)}var J_=class e{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((n=>{this._functionExecutorMap[n]=new e(t.functions[n],this)}))}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=U_(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}let i=G_(this.graph,n),o=function(e){let t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>X_(e)?n:t)),a=e=>{let n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let o=0;o<e.length;++o){let t=s[o];if(t===n)continue;let r=e[o],a=e[t];i.has(a.name)||i.set(a.name,[]),i.get(a.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return ti(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[_T(e)[0]])),a=t.map((e=>_T(e)[0])),s=new Set(a),i=a.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);let o=this.getCompilationKey(r,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Le().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let u={},d={};return Qs((()=>{let n=new V_(this.weightMap,u,d,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{let[a,s]=_T(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))}));let a=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(r[e.name])continue;let t=W_(e,r,n,this._resourceManager);if(va.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>IT(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!X_(t)&&!s.has(e)){for(let r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(let e of t.inputs){if(X_(e))continue;let t=ST(e.name,n,r);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(e){return X_(e)||a.has(e.name)}if(!X_(e)&&null!=s)for(let o of s){if(i(o))continue;let e=ST(o.name,t,n);for(let t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Le().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let s=new V_(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>IT(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),d=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!d.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(d),o}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[_T(e)[0]])),i=n.map((e=>_T(e)[0])),o=new Set(i),l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:d,dynamicNode:h,syncInputs:p}=U_(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=_T(t),a=[];a[r]=e[t],f[n]=a}));let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(s,c,t,f,y,g,o,m,u);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter((e=>!X_(e)&&!IT(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${d}]. ${e}`)}return f}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&kT("isConstant",e.node,r,n)&&([d]=NT(e.node.name,n)),null==r[e.node.name]){let h=W_(e.node,r,n,this._resourceManager);d||([d]=NT(e.node.name,n));let p=n.currentContext;va.isPromise(h)?u.push(h.then((u=>(r[d]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(u)),n.currentContext=p,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[d]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(h)),this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=NT(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!IT(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!IT(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=_T(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));va.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&va.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=_T(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{let[t]=_T(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},Q_=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},eC="?tfjs-format=file",tC="model.json",nC=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Pc;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Q_}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return va.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");let t=await bi(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new J_(f_.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=f_.Instance.transformGraph(e.modelInitializer);this.initializer=new J_(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof ts?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ts)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ei(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function rC(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Pc;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${tC}${eC}`}(e));let r=new nC(e,t,n);return await r.load(),r}function aC(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let a=Pc.getWeightSpecs(n.weightsManifest),s=Pc.getModelArtifactsForJSONSync(n,a,r);t=Pc.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Pc.fromMemorySync(e)}let n=new nC(t);return n.load(),n}var sC="4.21.0",iC={};f(iC,{CSVDataset:()=>JC,Dataset:()=>PC,FileDataSource:()=>hE,TextLineDataset:()=>HC,URLDataSource:()=>pE,array:()=>WC,csv:()=>cE,func:()=>fE,generator:()=>mE,microphone:()=>yE,version_data:()=>bE,webcam:()=>gE,zip:()=>VC});var oC=m(_()),lC=m(_());function uC(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(fC(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=uC(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function dC(e){return hC(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:pC)}function hC(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set,r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(fC(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=hC(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function pC(e){return null===e?null:fC(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function cC(e,t){let n=new Map;uC(e,t,n);for(let r of Array.from(n.keys())){let e=n.get(r);if(va.isPromise(e)){let t=await e;n.set(r,t)}}return uC(e,t,n)}function fC(e){let t=!1;if(Le().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=C();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ts)&&!(e instanceof Promise)&&!t)}function mC(e){return function(e,t){return uC(e,t)}(e,gC)}function gC(e){return e instanceof ts?{value:e.clone(),recurse:!1}:fC(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var yC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},bC=class e extends yC{constructor(){super(e.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function xC(e){return new IC(e)}function vC(e){return new SC(e)}bC.INITIAL_CAPACITY=32;var wC,kC=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new AC(this,e)}filter(e){return new EC(this,e)}map(e){return new $C(this,e)}mapAsync(e){return new RC(this,e)}serialMapAsync(e){return new RC(this,e).serial()}flatmap(e){return new DC(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new CC(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:pC;return this.rowMajorBatch(e,t).map((e=>dC(e,n)))}concatenate(e,t){return new MC(xC([this,e]),t)}take(e){return e<0||null==e?this:new _C(this,e)}skip(e){return e<0||null==e?this:new TC(this,e)}prefetch(e){return new LC(this,e)}shuffle(e,t){return new zC(this,e,t)}serial(){return new NC(this)}},IC=class extends kC{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:mC(e),done:!1}}},SC=class extends kC{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(ss){throw ss.message=`Error thrown while iterating through a dataset: ${ss.message}`,ss}}},NC=class extends kC{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},TC=class extends kC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ei(e.value)}return this.upstream.next()}},_C=class extends kC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},CC=class extends kC{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},EC=class extends kC{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ei(e.value)}}},$C=class extends kC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ds.getTensorsInContainer(e.value),n=this.transform(e.value),r=ds.getTensorsInContainer(n);for(let a of t)ds.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},AC=class extends kC{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(ss){if(!this.handler(ss))return{value:null,done:!0}}}},RC=class extends kC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ds.getTensorsInContainer(e.value),n=await this.transform(e.value),r=ds.getTensorsInContainer(n);for(let a of t)ds.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},FC=class extends kC{constructor(){super(),this.outputQueue=new bC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},DC=class extends FC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=ds.getTensorsInContainer(e.value),n=this.transform(e.value),r=ds.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)ds.isTensorInList(a,r)||a.dispose();return!0}},MC=class extends kC{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(wC||(wC={}));var OC=class extends kC{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:wC.FAIL;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await cC(this.iterators,(function(e){return e instanceof kC?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case wC.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case wC.SHORTEST:return{value:null,done:!0};case wC.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},LC=class extends kC{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new yC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},zC=class extends LC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=lC.alea(n||va.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},PC=class{constructor(){this.size=null}batch(e){let t,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=this;return va.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),t=this.size===1/0||null==this.size?this.size:n?Math.ceil(this.size/e):Math.floor(this.size/e),BC((async()=>(await r.iterator()).columnMajorBatch(e,n,UC)),t)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,BC((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,BC((async()=>(await n.iterator()).filter((t=>Qs((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return BC((async()=>(await t.iterator()).map((t=>Qs((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return BC((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return BC((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,BC((async()=>function(e,t){return new MC(e,t)}(vC((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,BC((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=oC.alea(t||va.now().toString());return BC((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,BC((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function BC(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends PC{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function WC(e){return BC((async()=>xC(e)),e.length)}function VC(e){if(!fC(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return BC((async()=>function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:wC.FAIL;return new OC(e,t)}(await cC(e,(e=>{if(e instanceof PC)return{value:e.iterator(),recurse:!1};if(fC(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),wC.SHORTEST)),t)}function UC(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof ts||va.isTypedArray(e)}(e[0])?{value:GC(e),recurse:!1}:{value:null,recurse:!0}}function GC(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ts?Ch(e):Vs(e)}PC.MAX_BUFFER_SIZE=1e4;var HC=class extends PC{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},jC='"',qC=Symbol("out"),KC=Symbol("field"),XC=Symbol("quote"),YC=Symbol("quoteafterquote"),ZC=Symbol("quoteinquote"),JC=class extends PC{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&va.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(va.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new HC(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(va.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=[],r=0,a=e.length,s=qC;for(let i=0;i<a;i++)switch(s){case qC:switch(e.charAt(i)){case jC:r=i+1,s=XC;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=qC;break;default:s=KC,r=i}break;case KC:if(e.charAt(i)===this.delimiter)n.push(e.substring(r,i)),s=qC,r=i+1;break;case XC:if(e.charAt(i)===jC)s=YC;break;case YC:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=qC,r=i+1;break;case jC:s=XC;break;default:s=ZC}break;case ZC:if(e.charAt(i)===jC)s=XC}if(s===YC?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},QC=class e extends kC{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!Le().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new e(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(va.sizeFromShape(t));return n.set(e,n.length-e.length),Vs(n,t)}},eE=class e extends kC{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Rh([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Fh([r,n,s,a],[1,4])}else this.cropBox=Fh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Le().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let r=new e(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&va.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=uf.fromPixels(this.webcamVideoElement)}catch(xQ){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(xQ)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(xQ){throw new Error(`Error thrown cropping the video: ${xQ.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Qs((()=>{let t,n=pu(ho(e,"float32"),0);t=bc.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return jo(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},tE=class{},nE=class extends kC{split(e){return new rE(this,e)}},rE=class extends nE{constructor(e,t){super(),this.upstream=e,this.impl=new aE(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},aE=class extends FC{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},sE=class extends kC{decodeUTF8(){return new iE(this)}},iE=class extends nE{constructor(e){super(),this.upstream=e,this.impl=new oE(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},oE=class extends FC{constructor(e){if(super(),this.upstream=e,Le().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=C();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Le().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},lE=class extends sE{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.file=e,this.options=t,va.assert(e instanceof Uint8Array||!!Le().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var uE=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function dE(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var hE=class extends tE{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.input=e,this.options=t}async iterator(){if(dE(this.input)&&Le().get("IS_NODE")){let e=E();this.input=e.readFileSync(this.input.slice(7))}return new lE(this.input,this.options)}},pE=class extends tE{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.url=e,this.fileOptions=t}async iterator(){return dE(this.url)?new hE(this.url,this.fileOptions).iterator():async function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;"string"==typeof e?t=e:(t=e.url,n=uE(e));let s=await(a||va.fetch)(t,n);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new lE(e,r)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function cE(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new JC(new pE(e),t)}function fE(e){let t=vC(e);return BC((async()=>t))}function mE(e){return BC((async()=>{let t=await e();return vC((()=>t.next()))}))}async function gE(e,t){return eE.create(e,t)}async function yE(e){return QC.create(e)}var bE="4.21.0";function xE(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&va.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var vE=Qm.whereImpl,wE=class e extends z{nextDataId(){return e.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new L(this,Ys())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Le().get("IS_NODE")&&qf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&va.isString(n[0])){let a=n.map((e=>va.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return qf.mergeRealAndImagArrays(e,t)}return va.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>va.decodeString(e)));return uo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return uo(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ys().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=va.now();return e(),{kernelMs:va.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xE([e],"where");let t=this.readSync(e.dataId);return vE(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};wE.nextDataId=0;var kE={};function IE(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}f(kE,{addImpl:()=>zE,bincountImpl:()=>VE,bincountReduceImpl:()=>UE,bitwiseAndImpl:()=>GE,castImpl:()=>FE,ceilImpl:()=>YE,concatImpl:()=>QE,equalImpl:()=>e$,expImpl:()=>r$,expm1Impl:()=>i$,floorDivImpl:()=>p$,floorImpl:()=>u$,gatherNdImpl:()=>m$,gatherV2Impl:()=>g$,greaterEqualImpl:()=>v$,greaterImpl:()=>y$,lessEqualImpl:()=>T$,lessImpl:()=>I$,linSpaceImpl:()=>E$,logImpl:()=>$$,maxImpl:()=>F$,maximumImpl:()=>D$,minimumImpl:()=>L$,multiplyImpl:()=>B$,negImpl:()=>G$,notEqualImpl:()=>j$,prodImpl:()=>J$,raggedGatherImpl:()=>rA,raggedRangeImpl:()=>sA,raggedTensorToTensorImpl:()=>dA,rangeImpl:()=>hA,rsqrtImpl:()=>pA,scatterImpl:()=>mA,sigmoidImpl:()=>gA,simpleAbsImpl:()=>IE,sliceImpl:()=>xA,sparseFillEmptyRowsImpl:()=>kA,sparseReshapeImpl:()=>IA,sparseSegmentReductionImpl:()=>SA,sqrtImpl:()=>NA,squaredDifferenceImpl:()=>CA,staticRegexReplaceImpl:()=>AA,stridedSliceImpl:()=>DA,stringNGramsImpl:()=>OA,stringSplitImpl:()=>zA,stringToHashBucketFastImpl:()=>PA,subImpl:()=>BA,tileImpl:()=>GA,topKImpl:()=>qA,transposeImpl:()=>X$,uniqueImpl:()=>KA});var SE={kernelName:Ve,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;xE(t,"abs");let r=new Float32Array(va.sizeFromShape(t.shape));return r=IE(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function NE(e){return(t,n,r,a,s)=>{let i=qf.assertAndGetBroadcastShape(t,n),o=i.length,l=va.computeStrides(i),u=va.sizeFromShape(i),d=va.getTypedArrayFromDType(s,u),h=t.length,p=n.length,c=va.computeStrides(t),f=va.computeStrides(n),m=qf.getBroadcastDims(t,i),g=qf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<d.length;++y)d[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<d.length;++y){let t=va.indexToLoc(y,o,l),n=t.slice(-h);m.forEach((e=>n[e]=0));let s=va.locToIndex(n,h,c),i=t.slice(-p);g.forEach((e=>i[e]=0));let u=va.locToIndex(i,p,f);d[y]=e(r[s],a[u])}return[d,i]}}function TE(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var _E={kernelName:mt,backendName:"cpu",kernelFunc:TE};function CE(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return TE({inputs:{real:CE(e,t,"float32"),imag:CE(e,t,"float32")},backend:e})}let r=va.makeZerosTypedArray(va.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function EE(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var $E={kernelName:an,backendName:"cpu",kernelFunc:EE};function AE(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var RE={kernelName:rr,backendName:"cpu",kernelFunc:AE};function FE(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){let r=va.toTypedArray([0],n),[a,s]=NE(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function DE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return EE({inputs:{x:a},backend:n});let e=CE(n,a.shape,a.dtype),t=DE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=TE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=AE({inputs:{input:a},backend:n}),t=DE({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!va.hasEncodingLoss(a.dtype,s)){let e=EE({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=FE(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var ME={kernelName:pt,backendName:"cpu",kernelFunc:DE};function OE(e,t,n,r){return null==n?n=>{let{inputs:a,backend:s}=n,{a:i,b:o}=a,l=s;xE([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h="string"===i.dtype?qf.fromUint8ToStringArray(u):u,p="string"===i.dtype?qf.fromUint8ToStringArray(d):d,c=r||i.dtype,[f,m]=t(i.shape,o.shape,h,p,c);return l.makeTensorInfo(m,c,f)}:e=>{let{inputs:a,backend:s}=e,{a:i,b:o}=a,l=s;if("complex64"===i.dtype||"complex64"===o.dtype){let e=DE({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=l.data.get(r.dataId).values,u=l.data.get(a.dataId).values,d=DE({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(d.dataId),p=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=l.data.get(p.dataId).values,m=l.data.get(c.dataId).values,[g,y,b]=n(i.shape,o.shape,s,u,f,m),x=l.makeTensorInfo(b,"float32",g),v=l.makeTensorInfo(b,"float32",y),w=TE({inputs:{real:x,imag:v},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(v),w}{let e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,a=r||i.dtype,[s,u]=t(i.shape,o.shape,e,n,a);return l.makeTensorInfo(u,a,s)}}}function LE(e){return(t,n,r,a,s,i)=>{let o=qf.assertAndGetBroadcastShape(t,n),l=va.sizeFromShape(o),u=o.length,d=va.computeStrides(o),h=va.getTypedArrayFromDType("float32",l),p=va.getTypedArrayFromDType("float32",l),c=qf.getBroadcastDims(t,o),f=qf.getBroadcastDims(n,o),m=qf.mergeRealAndImagArrays(r,a),g=qf.mergeRealAndImagArrays(s,i),y=t.length,b=va.computeStrides(t),x=n.length,v=va.computeStrides(n);if(c.length+f.length===0)for(let w=0;w<h.length;w++){let t=w%m.length,n=w%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=r.real,p[w]=r.imag}else for(let w=0;w<h.length;w++){let t=va.indexToLoc(w,u,d),n=t.slice(-y);c.forEach((e=>n[e]=0));let r=va.locToIndex(n,y,b),a=t.slice(-x);f.forEach((e=>a[e]=0));let s=va.locToIndex(a,x,v),i=e(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);h[w]=i.real,p[w]=i.imag}return[h,p,o]}}var zE=NE(((e,t)=>e+t)),PE=LE(((e,t,n,r)=>({real:e+n,imag:t+r}))),BE=OE(He,zE,PE),WE={kernelName:He,backendName:"cpu",kernelFunc:BE};function VE(e,t,n,r,a){let s=va.sizeFromShape(r),i=va.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?t[o]:1)}return i}function UE(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e.shape[0],s=e.shape[1],i=uo([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}var GE=NE(((e,t)=>e&t)),HE=OE(ut,GE),jE={kernelName:ut,backendName:"cpu",kernelFunc:HE};function qE(e){return(t,n,r)=>{let a=va.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function KE(e,t,n){return XE(e,qE(t),n)}function XE(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r,{x:o}=a;xE(o,e);let l,u=i,d=u.data.get(o.dataId).values;if("string"===o.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");l=qf.fromUint8ToStringArray(d)}else l=d;let h=n||o.dtype,p=t(l,h,s);return u.makeTensorInfo(o.shape,h,p)}}var YE=qE((e=>Math.ceil(e))),ZE=XE(ct,YE),JE={kernelName:ct,backendName:"cpu",kernelFunc:ZE};function QE(e,t,n,r){let a=va.getArrayFromDType(n,va.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=va.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?qf.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var e$=NE(((e,t)=>e===t?1:0)),t$=OE(Gt,e$,null,"bool"),n$={kernelName:Gt,backendName:"cpu",kernelFunc:t$},r$=qE((e=>Math.exp(e))),a$=XE(Ht,r$,"float32"),s$={kernelName:Ht,backendName:"cpu",kernelFunc:a$},i$=qE((e=>Math.expm1(e))),o$=XE(qt,i$),l$={kernelName:qt,backendName:"cpu",kernelFunc:o$},u$=qE((e=>Math.floor(e))),d$=XE(Zt,u$),h$={kernelName:Zt,backendName:"cpu",kernelFunc:d$},p$=NE(((e,t)=>Math.floor(e/t))),c$=OE(Jt,p$,null,"int32"),f$={kernelName:Jt,backendName:"cpu",kernelFunc:c$};function m$(e,t,n,r,a,s,i,o,l){let u=uo([r,s],n);for(let d=0;d<r;d++){let n=[],r=0;for(let t=0;t<a;t++){let s=e[d*a+t];r+=s*i[t],n.push(s)}if(r<0||r>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[d*s+e]=t.get(...t.indexToLoc(r*s+e))}return u}function g$(e,t,n){let r=uo(n,e.dtype);for(let a=0;a<r.size;++a){let n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];let l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[a]=e.values[l])}return r}var y$=NE(((e,t)=>e>t?1:0)),b$=OE(nn,y$,null,"bool"),x$={kernelName:nn,backendName:"cpu",kernelFunc:b$},v$=NE(((e,t)=>e>=t?1:0)),w$=OE(rn,v$,null,"bool"),k$={kernelName:rn,backendName:"cpu",kernelFunc:w$},I$=NE(((e,t)=>e<t?1:0)),S$=OE(pn,I$,null,"bool"),N$={kernelName:pn,backendName:"cpu",kernelFunc:S$},T$=NE(((e,t)=>e<=t?1:0)),_$=OE(cn,T$,null,"bool"),C$={kernelName:cn,backendName:"cpu",kernelFunc:_$};function E$(e,t,n){let r=(t-e)/(n-1),a=va.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var $$=qE((e=>Math.log(e))),A$=XE(mn,$$),R$={kernelName:mn,backendName:"cpu",kernelFunc:A$};function F$(e,t,n,r){let a=va.getTypedArrayFromDType(r,va.sizeFromShape(n));for(let s=0;s<a.length;++s){let n=s*t,r=e[n];for(let a=0;a<t;++a){let t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}a[s]=r}return a}var D$=NE(((e,t)=>Math.max(e,t))),M$=OE(_n,D$),O$={kernelName:_n,backendName:"cpu",kernelFunc:M$},L$=NE(((e,t)=>Math.min(e,t))),z$=OE(Mn,L$),P$={kernelName:Mn,backendName:"cpu",kernelFunc:z$},B$=NE(((e,t)=>e*t)),W$=LE(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),V$=OE(Pn,B$,W$),U$={kernelName:Pn,backendName:"cpu",kernelFunc:V$};function G$(e,t,n){let r=va.createScalarValue(-1,n);return B$([],t,r,e,n)}var H$={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;xE(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=G$(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},j$=NE(((e,t)=>e!==t?1:0)),q$=OE(Wn,j$,null,"bool"),K$={kernelName:Wn,backendName:"cpu",kernelFunc:q$};function X$(e,t,n,r,a){let s=t.length,i=va.sizeFromShape(t),o=va.computeStrides(t),l=va.computeStrides(a),u=va.getTypedArrayFromDType(n,va.sizeFromShape(a));for(let d=0;d<i;++d){let t=va.indexToLoc(d,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];u[va.locToIndex(n,s,l)]=e[d]}return u}function Y$(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;xE(a,"transpose");let i=a.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=a.shape[s[u]];let l=X$(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var Z$={kernelName:Xr,backendName:"cpu",kernelFunc:Y$};function J$(e,t,n,r){let[a,s]=qf.computeOutAndReduceShapes(e,r),i=ps(t,"int32"),o=va.makeZerosTypedArray(va.sizeFromShape(a),i),l=va.sizeFromShape(s);for(let u=0;u<o.length;++u){let e=u*l,t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:a,outDtype:i}}var Q$={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;xE(a,"prod");let o=a.shape.length,l=va.parseAxisParam(s,a.shape),u=qf.getAxesPermutation(l,o),d=l,h=a,p=[];null!=u&&(h=Y$({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),d=qf.getInnerMostAxes(d.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=J$(h.shape,h.dtype,c,d),y=m;return i&&(y=qf.expandShapeToKeepDim(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function eA(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){let a=n[e],s=e+t.length-1;if(s>=0){let e=o[s],t=e[e.length-1]-a[r];for(let n=r;n<i;++n)o[s].push(a[n+1]+t)}r=a[r],i=a[i]}i!==r&&(a.push([r,i]),s+=i-r)}return{outSplits:o,valueSlices:a,numValues:s}}function tA(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function nA(e,t,n,r,a){let s=t.slice();s[0]=a;let i=va.getArrayFromDType(n,va.sizeFromShape(s)),o=e.length;return function(e,t,n,r,a,s){let i=tA(t,2)[1],o=tA(s,2)[1],l=0;for(let u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)a[l*o+n]=e[t*i+n];++l}}(e,t,r,0===o?0:o/t[0],i,s),[i,s]}function rA(e,t,n,r,a,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){let a=va.indexToLoc(r,t.length,va.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(s,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");let l=r[0],{outSplits:u,valueSlices:d,numValues:h}=eA(s,i,e,l),p=function(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=va.getArrayFromDType("int32",r);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(u),c=nA(n,r,a,d,h);return[p,c[0],c[1]]}var aA=2147483647;function sA(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,d=[];o||d.push(t[0]),l||d.push(a[0]),u||d.push(i[0]);for(let g=1;g<d.length;++g)if(d[g]!==d[g-1])throw new Error("starts, limits, and deltas must have the same shape");let h=0===d.length?1:d[0],p=va.getArrayFromDType("int32",h+1);p[0]=0;for(let g=0;g<h;++g){let t,n=o?e[0]:e[g],a=l?r[0]:r[g],i=u?s[0]:s[g];if(0===i)throw new Error("Requires delta != 0");if(i>0&&a<n||i<0&&a>n)t=0;else if(t=Math.ceil(Math.abs((a-n)/i)),t>aA)throw new Error(`Requires ((limit - start) / delta) <= ${aA}`);p[g+1]=p[g]+t}let c=p[h],f=va.getArrayFromDType(n,c),m=0;for(let g=0;g<h;++g){let t=p[g+1]-p[g],n=o?e[0]:e[g],r=u?s[0]:s[g];for(let e=0;e<t;++e)f[m++]=n,n+=r}return[p,f]}var iA=qf.RowPartitionType,oA=class e{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=qf.getRowPartitionTypesHelper(u),this.raggedRank=qf.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===iA.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===iA.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case iA.VALUE_ROWIDS:return e.getMaxWidthValueRowID(n);case iA.ROW_SPLITS:return e.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${iA[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return uA(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;qf.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=qf.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return va.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case iA.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case iA.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${iA[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case iA.FIRST_DIM_SIZE:return e[0];case iA.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case iA.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${iA[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=uA(t,!1),a=va.getArrayFromDType(this.valuesDType,va.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=va.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;Qs((()=>{let t=jo(u,e);u=dl(t,i).dataSync()}))}let d=0,h=0,p=0;for(let c=0;c<=l;++c){let e=c<l?t[c]:-1;if(e!==p){if(h<p){let e=a.subarray(d*o);lA(s.subarray(h*o),e,(p-h)*o)}if(c>=l){let t=n.length;e=Math.floor(t/o)}if(e>p)if(1===this.defaultValue.length)s.subarray(p*o,e*o).fill(this.defaultValue[0]),p=e;else for(;e>p;){lA(s.slice(p*o),u,o),++p}e<0?(d=c+1,h=p):(d=c,h=p,p=h+1)}else++p}}};function lA(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function uA(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function dA(e,t,n,r,a,s,i,o,l,u){return new oA(e,t,n,r,a,s,i,o,l,u).compute()}function hA(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return va.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=va.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}var pA=qE((e=>1/Math.sqrt(e))),cA=XE(fr,pA),fA={kernelName:fr,backendName:"cpu",kernelFunc:cA};function mA(e,t,n,r,a,s,i,o,l,u){let d=[r/a,a],h=e.values,p=t.values;if(0===r)return uo(n,t.dtype);let c=l instanceof Ja?l:uo(d,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let f=0;f<s;f++){let e=[],s=0;for(let t=0;t<i;t++){let n=h[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[s*a+n]+=p[f*a+n]:c.values[s*a+n]=0===t.rank?p[0]:p[f*a+n]}return c}var gA=qE((e=>1/(1+Math.exp(-e)))),yA=KE(Sr,(e=>1/(1+Math.exp(-e)))),bA={kernelName:Sr,backendName:"cpu",kernelFunc:yA};function xA(e,t,n,r,a){let s=wf.isSliceContinous(r,t,n),i=va.sizeFromShape(n),o=va.computeStrides(r);if(s){let n=wf.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=uo(r,a,"string"===a?qf.fromUint8ToStringArray(e):e),u=uo(n,a);for(let d=0;d<u.size;++d){let e=u.indexToLoc(d),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===a?qf.fromStringArrayToUint8(u.values):u.values}function vA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;xE(a,"slice");let[o,l]=wf.parseSliceParams(a,s,i);wf.assertParamsValid(a,o,l);let u=xA(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var wA={kernelName:vr,backendName:"cpu",kernelFunc:vA};function kA(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(qf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[va.getArrayFromDType(n,0),[0,h],va.getArrayFromDType(a,0),u,d]}let p=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let t=e[g*h];if(t<0)throw new Error(qf.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=l)throw new Error(qf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,l));++f[t],p=p&&t>=c,c=t}let m=!0;for(let g=0;g<l;++g){let e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let t=e,n=r;for(let e=0;e<o;++e)d[e]=e;return[t,[o,h],n,u,d]}{let t=f[l-1],s=va.getArrayFromDType(n,t*h),p=va.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let n=0;n<o;++n){let t=e[n*h],a=c[t],i=(0===t?0:f[t-1])+a;c[t]++;for(let r=0;r<h;++r)s[i*h+r]=e[n*h+r];p[i]=r[n],d[n]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,u,d]}}function IA(e,t,n,r,a){let s=va.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,d=-1;for(let m=0;m<o;++m){let e=a[m];if(-1===e){if(-1!==d)throw new Error(qf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(e<0)throw new Error(qf.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(qf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(qf.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(va.sizeFromShape(l)!==s)throw new Error(qf.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=va.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*p[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/c[e]),t%=c[e]}return[f,[i,o],l]}function SA(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error(qf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce(((e,t)=>e*t),1),c=va.getArrayFromDType(n,p);if(0===o)return d>0&&c.fill(i),[c,h];if(d<=0)throw new Error(qf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(qf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(qf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let n=f;n<m;++n){let t=r[n];if(t<0||t>=l[0])throw new Error(qf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],l[0]));for(let n=0;n<u;n++)c[y*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&c.fill(i,g*u,d*u),[c,h]}var NA=qE((e=>Math.sqrt(e))),TA=KE(Tr,(e=>Math.sqrt(e))),_A={kernelName:Tr,backendName:"cpu",kernelFunc:TA},CA=NE(((e,t)=>{let n=e-t;return n*n})),EA=OE(Or,CA),$A={kernelName:Or,backendName:"cpu",kernelFunc:EA},AA=qE(((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),RA=XE(zr,AA),FA={kernelName:zr,backendName:"cpu",kernelFunc:RA};function DA(e,t,n,r){let a=uo(e,t.dtype);for(let s=0;s<a.size;s++){let e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}var MA=class{constructor(e,t,n,r,a,s){this.separator=va.encodeString(e),this.nGramWidths=t,this.leftPad=va.encodeString(n),this.rightPad=va.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),d=s-(l+u),h=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let t=0;t<d;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+d-1)*this.separator.length,n[r+i]=new Uint8Array(p);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[h+t]),m(this.separator);if(d>0){m(e[h+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=va.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let t=0;t<=a;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=a;++o){let e=t[o]-t[o-1],n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}let i=new Array(s[a]);for(let o=0;o<a;++o){let n=t[o],r=s[o];if(this.nGramWidths.forEach((a=>{let s=t[o+1]-t[o],l=this.getNumNGrams(s,a);this.createNGrams(e,n,i,r,l,a),r+=l})),this.preserveShort&&r===s[o]){let a=t[o+1]-t[o];if(0===a)continue;let s=a+2*this.padWidth;this.createNGrams(e,n,i,r,1,s)}}return[i,s]}};function OA(e,t,n,r,a,s,i,o){return new MA(n,r,a,s,i,o).compute(e,t)}function LA(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function zA(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let p=0;p<r;++p){let r=a.length;LA(e[p],t,n,a);let l=a.length-r;o[p]=l,s+=l,i=Math.max(i,l)}let l=va.getArrayFromDType("int32",2*s),u=new Array(s),d=[r,i],h=0;for(let p=0;p<r;++p)for(let e=0;e<o[p];++e)l[2*h]=p,l[2*h+1]=e,u[h]=a[h],++h;return[l,u,d]}function PA(e,t){let n=va.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=va.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var BA=NE(((e,t)=>e-t)),WA=LE(((e,t,n,r)=>({real:e-n,imag:t-r}))),VA=OE(Ur,BA,WA),UA={kernelName:Ur,backendName:"cpu",kernelFunc:VA};function GA(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=uo(n,e.dtype);for(let a=0;a<r.values.length;++a){let t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];let s=e.locToIndex(n);r.values[a]=e.values[s]}return r}var HA=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function jA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);jA(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(va.swap(e,n,t),HA(e[r],a)>0&&va.swap(e,n,r);s<i;){for(va.swap(e,s,i),s++,i--;HA(e[s],a)<0;)s+=1;for(;HA(e[i],a)>0;)i-=1}0===HA(e[n],a)?va.swap(e,n,i):(i+=1,va.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function qA(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=va.getTypedArrayFromDType(n,i*r),u=va.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let t=h*o,n=e.subarray(t,t+o),s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(jA(s,r),s=s.slice(0,r)),a&&s.sort(HA);let i=h*r,d=l.subarray(i,i+r),p=u.subarray(i,i+r);for(let e=0;e<r;e++)d[e]=s[e].value,p[e]=s[e].index}let d=t.slice();return d[d.length-1]=r,[uo(d,n,l),uo(d,"int32",u)]}function KA(e,t,n,r){let a=va.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];let i=new Map,o=new Int32Array(n[a]),l=new Ja(s,r,e),u=[],d=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let t;if(d)t=e[f].toString();else{let e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,f,n));t=e.join(",")}let n=i.get(t);if(null!=n)o[f]=n;else{let e=i.size;i.set(t,e),o[f]=e,u.push(f)}}let h=s.slice();h[1]=i.size;let p=new Ja(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=h[1],{outputValues:p.values,outputShape:c,indices:o}}var XA="4.21.0";ui("cpu",(()=>new wE),1);var YA=KE(Wt,(e=>e>=0?e:Math.exp(e)-1)),ZA={kernelName:Wt,backendName:"cpu",kernelFunc:YA};function JA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;xE([a],"leakyRelu");let i=va.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=va.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var QA={kernelName:hn,backendName:"cpu",kernelFunc:JA},eR=NE(((e,t)=>e<0?t*e:e));function tR(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;xE([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=eR(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var nR={kernelName:Zn,backendName:"cpu",kernelFunc:tR},rR=KE(sr,(e=>Math.max(0,e))),aR={kernelName:sr,backendName:"cpu",kernelFunc:rR},sR=KE(hr,(e=>Math.min(Math.max(0,e),6))),iR={kernelName:hr,backendName:"cpu",kernelFunc:sR};function oR(e,t,n,r,a){if("linear"===n)return EE({inputs:{x:t},backend:e});if("relu"===n)return rR({inputs:{x:t},backend:e});if("elu"===n)return YA({inputs:{x:t},backend:e});if("relu6"===n)return sR({inputs:{x:t},backend:e});if("prelu"===n)return tR({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return JA({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return yA({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function lR(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=va.sizeFromShape(a.shape),o=va.inferFromImplicitShape(s,i),l=va.sizeFromShape(o);va.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var uR={kernelName:ir,backendName:"cpu",kernelFunc:lR};function dR(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;xE([a,s],"matMul");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=va.sizeFromShape(f),y=va.sizeFromShape(m),b=Dl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);va.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,h]:[y,h,c],v=lR({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),w=lR({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,_=n.data.get(w.dataId).values,C=va.computeStrides(v.shape),E=va.computeStrides(w.shape),[$,A,R]=i?[C[0],1,C[1]]:[C[0],C[1],1],[F,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=uo([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let B=0;B<N;B++){let e=B%g,t=B%y;for(let n=0;n<I;n+=P){let r=Math.min(n+P,I);for(let a=0;a<S;a+=P){let s=Math.min(a+P,S);for(let i=0;i<k;i+=P){let o=Math.min(i+P,k);for(let l=n;l<r;l++)for(let n=a;n<s;n++){let r=0;for(let a=i;a<o;a++){r+=T[e*$+l*A+a*R]*_[a*F+n*D+t*M]}z[B*O+(l*S+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var hR={kernelName:it,backendName:"cpu",kernelFunc:dR};var pR={kernelName:aa,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=a,{transposeA:h,transposeB:p,activation:c,leakyreluAlpha:f}=i,m=[];t=dR({inputs:{a:o,b:l},attrs:{transposeA:h,transposeB:p},backend:s}),u&&(n=BE({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=oR(s,t,c,d,f),m.push(t),t=r);for(let g of m)s.disposeIntermediateTensorInfo(g);return t}},cR=KE(Ue,(e=>Math.acos(e))),fR={kernelName:Ue,backendName:"cpu",kernelFunc:cR},mR=KE(Ge,(e=>Math.acosh(e))),gR={kernelName:Ge,backendName:"cpu",kernelFunc:mR};var yR={kernelName:je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;xE(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=uo(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var bR={kernelName:qe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;xE(a,"all");let o=va.parseAxisParam(s,a.shape),l=o,u=qf.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=Y$({inputs:{x:a},backend:n,attrs:{perm:u}}),l=qf.getInnerMostAxes(l.length,a.shape.length)),qf.assertAxesAreInnerMostDims("all",l,d.shape.length);let[h,p]=qf.computeOutAndReduceShapes(d.shape,l),c=va.sizeFromShape(p),f=va.makeZerosTypedArray(va.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=lR({inputs:{x:g},backend:n,attrs:{shape:qf.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var xR={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;xE(a,"any");let o=va.parseAxisParam(s,a.shape),l=o,u=qf.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=Y$({inputs:{x:a},backend:n,attrs:{perm:u}}),l=qf.getInnerMostAxes(l.length,a.shape.length)),qf.assertAxesAreInnerMostDims("any",l,d.shape.length);let[h,p]=qf.computeOutAndReduceShapes(d.shape,l),c=va.sizeFromShape(p),f=va.makeZerosTypedArray(va.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=lR({inputs:{x:g},backend:n,attrs:{shape:qf.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var vR={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;xE(a,"argMax");let i=va.parseAxisParam(s,a.shape),o=qf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=Y$({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],qf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,h]=qf.computeOutAndReduceShapes(l.shape,i),p=va.sizeFromShape(d),c=va.makeZerosTypedArray(p,"int32"),f=va.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a>t&&(t=a,n=r)}c[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}};var wR={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;xE(a,"argMin");let i=va.parseAxisParam(s,a.shape),o=qf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=Y$({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],qf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,h]=qf.computeOutAndReduceShapes(l.shape,i),p=va.sizeFromShape(d),c=va.makeZerosTypedArray(p,"int32"),f=va.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a<t&&(t=a,n=r)}c[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},kR=KE(Ze,(e=>Math.asin(e))),IR={kernelName:Ze,backendName:"cpu",kernelFunc:kR},SR=KE(Je,(e=>Math.asinh(e))),NR={kernelName:Je,backendName:"cpu",kernelFunc:SR},TR=KE(Qe,(e=>Math.atan(e))),_R={kernelName:Qe,backendName:"cpu",kernelFunc:TR},CR=NE(((e,t)=>Math.atan2(e,t))),ER=OE(tt,CR),$R={kernelName:tt,backendName:"cpu",kernelFunc:ER},AR=KE(et,(e=>Math.atanh(e))),RR={kernelName:et,backendName:"cpu",kernelFunc:AR};function FR(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=uo(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let v=0;v<a.batchSize;++v){let t=v*y,n=v*r[0];for(let m=0;m<a.inChannels;++m)for(let y=0;y<a.outHeight;++y){let v=y*i-p,w=Math.max(0,v),k=Math.min(a.inHeight,d+v),I=t+y*b;for(let t=0;t<a.outWidth;++t){let i=t*o-c,d=Math.max(0,i),p=Math.min(a.inWidth,h+i),y=f,b=0,v=0;for(let t=w;t<k;t+=l){let a=n+t*r[1];for(let t=d;t<p;t+=u){let n=e[a+t*r[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,v++)}if(isNaN(y))break}g[I+t*x+m]="avg"===s?b/v:y}}}return m}function DR(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=uo(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=uo(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){let n=t*o-c,y=n;for(;y<0;)y+=u;let b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){let h=o*l-f,c=h;for(;c<0;)c+=d;let x=Math.min(r.inWidth,p+h),v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){let i=t-n;for(let n=c;n<x;n+=d){let o=n-h,l=m.get(g,t,n,e);l>v&&(v=l,w=a?s?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*p+o)}}i.set(w,g,t,o,e)}}return i}function MR(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=uo(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let N=0;N<a.batchSize;++N){let t=N*w,n=N*r[0];for(let x=0;x<a.inChannels;++x)for(let w=0;w<a.outDepth;++w){let N=w*i-m,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,p+N),C=t+w*k;for(let t=0;t<a.outHeight;++t){let i=t*o-g,p=i;for(;p<0;)p+=d;let m=Math.min(a.inHeight,c+i),w=C+t*I;for(let t=0;t<a.outWidth;++t){let i=t*l-y,o=i;for(;o<0;)o+=h;let c=Math.min(a.inWidth,f+i),g=w+t*S,k=b,I=0,N=0;for(let t=T;t<_;t+=u){let a=n+t*r[1];for(let t=p;t<m;t+=d){let n=a+t*r[2];for(let t=o;t<c;t+=h){let a=e[n+t*r[3]+x];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===s?I/Math.max(N,1):k}}}}return x}var OR={kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;xE(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;va.assert(qf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=qf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&va.arraysEqual(d.inShape,d.outShape))u=EE({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=va.computeStrides(a.shape),r=FR(e,a.shape,a.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}};var LR={kernelName:at,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;xE(a,"avgPool3d");let d=qf.computePool3DInfo(a.shape,s,i,1,o,l,u),h=MR(n.data.get(a.dataId).values,a.shape,a.dtype,va.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};var zR={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;xE([a,s],"avgPool3DGrad");let d=qf.computePool3DInfo(s.shape,i,o,1,l,u),h=d.strideDepth,p=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,b=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterDepth,w=d.effectiveFilterHeight,k=d.effectiveFilterWidth,I=v-1-d.padInfo.front,S=k-1-d.padInfo.left,N=w-1-d.padInfo.top,T=uo(s.shape,"float32"),_=1/(f*m*g),C=n.bufferSync(a);for(let E=0;E<d.batchSize;++E)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=t-I,s=n-N,i=r-S,o=0;for(let t=0;t<v;t+=y){let n=(a+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){let r=(s+t)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){let a=(i+t)/c;a<0||a>=d.outWidth||Math.floor(a)!==a||(o+=C.get(E,n,r,a,e))}}}T.set(o*_,E,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var PR={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;xE([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=qf.computePool2DInfo(i.shape,o,l,1,u),h=d.strideHeight,p=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,b=d.effectiveFilterWidth,x=b-1-d.padInfo.left,v=y-1-d.padInfo.top,w=uo(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=uo(a.shape,"float32",I);for(let N=0;N<d.batchSize;++N)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){let r=t-v,a=n-x,s=0;for(let t=0;t<y;t+=m){let n=(r+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){let r=(a+t)/p;r<0||r>=d.outWidth||Math.floor(r)!==r||(s+=S.get(N,n,r,e))}}w.set(s*k,N,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var BR={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;va.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),va.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),va.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),xE([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=c.length,b=p.length,x=h.length,v=0,w=0,k=0,I=0;for(let S=0;S<d.length;++S)m[S]=f[v++]+(d[S]-h[w++])*c[k++]/Math.sqrt(p[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var WR={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;xE([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=qf.getReshaped(a.shape,s,o),u=qf.getPermuted(l.length,s.length),d=qf.getReshapedPermuted(a.shape,s,o),h=qf.getSliceBeginCoords(i,s.length),p=qf.getSliceSize(d,i,s.length),c=lR({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Y$({inputs:{x:c},backend:n,attrs:{perm:u}}),m=lR({inputs:{x:f},backend:n,attrs:{shape:d}}),g=vA({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var VR={kernelName:lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=VE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var UR={kernelName:ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=qf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},GR=KE(ft,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),HR={kernelName:ft,backendName:"cpu",kernelFunc:GR},jR={kernelName:gt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(va.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function qR(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var KR={kernelName:on,backendName:"cpu",kernelFunc:qR};function XR(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=va.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));qf.assertParamsConsistent(i,s);let o=qf.computeOutShape(t.map((e=>e.shape)),s);if(0===va.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>va.sizeFromShape(e.shape)>0));if(1===l.length)return EE({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map((e=>AE({inputs:{input:e},backend:n}))),t=l.map((e=>qR({inputs:{input:e},backend:n}))),r=XR({inputs:e,backend:n,attrs:{axis:s}}),a=XR({inputs:t,backend:n,attrs:{axis:s}}),i=TE({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map((e=>{let t=[-1,va.sizeFromShape(e.shape.slice(s))];return lR({inputs:{x:e},backend:n,attrs:{shape:t}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=qf.computeOutShape(u.map((e=>e.shape)),1);let h=1===u[0].shape[0],p=QE(d,o,t[0].dtype,h),c=qf.computeOutShape(l.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var YR={kernelName:yt,backendName:"cpu",kernelFunc:XR};function ZR(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;xE([a,s],"conv2d");let h=qf.convertConv2DDataFormat(l),p=qf.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new Ja(p.outShape,a.dtype),w=va.computeStrides(a.shape),k=va.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],_=v.strides[0],C=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=v.values;for(let D=0;D<p.batchSize;++D){let e=D*I,t=D*_;for(let n=0;n<p.outHeight;++n){let r=t+n*C,a=n*p.strideHeight-b;for(let t=0;t<c;++t){let n=a+t*m;if(n<0||n>=p.inHeight)continue;let s=t*k[0],i=e+n*S;for(let e=0;e<p.outWidth;++e){let t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=p.inWidth)continue;let a=i+r*N,o=s+e*k[1];for(let e=0;e<p.inChannels;++e){let n=A[a+e*T];for(let e=0;e<p.outChannels;++e)F[t+e*$]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}var JR={kernelName:bt,backendName:"cpu",kernelFunc:ZR};var QR={kernelName:xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;xE([a,s],"conv2dBackpropFilter");let h=qf.convertConv2DDataFormat(l),p=qf.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Ja(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ja(a.shape,a.dtype,w),S=new Ja(s.shape,s.dtype,k);for(let N=0;N<m;++N){let e=Math.max(0,Math.ceil((v-N)/c)),t=Math.min(p.outHeight,(p.inHeight+v-N)/c);for(let n=0;n<g;++n){let r=Math.max(0,Math.ceil((x-n)/f)),a=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let o=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){let e=N+u*c-v;for(let t=r;t<a;++t){let r=n+t*f-x;o+=y?I.get(l,e,r,s)*S.get(l,u,t,i):I.get(l,s,e,r)*S.get(l,i,u,t)}}b.set(o,N,n,s,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var eF={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;xE([a,s],"conv2dBackpropInput");let h=va.computeStrides(s.shape),p=va.computeStrides(a.shape),c=qf.convertConv2DDataFormat(u),f=qf.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),m=new Ja(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:$,strideHeight:A,strideWidth:R}=f;c=f.dataFormat;let F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=p[0],W=M?p[1]:p[2],V=M?p[2]:1,U=M?1:p[1];for(let G=0;G<k;++G)for(let e=0;e<N;++e)for(let t=0;t<T;++t){let n=t-F,r=Math.max(0,Math.ceil(n/A)),a=Math.min(E,(I+n)/A);for(let s=0;s<_;++s){let i=s-D,o=Math.max(0,Math.ceil(i/R)),l=Math.min($,(S+i)/R),u=0;for(let t=r;t<a;++t){let r=t*A-n;for(let n=o;n<l;++n){let a=B*G+W*t+V*n,s=x*(I-1-r)+v*(S-1-(n*R-i))+w*e;for(let e=0;e<C;++e){u+=y[a+U*e]*b[s+e]}}}g[O*G+L*t+z*s+P*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var tF={kernelName:wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;xE([a,s],"conv3d");let u=qf.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Ja(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=va.computeStrides(a.shape),N=va.computeStrides(s.shape);for(let T=0;T<u.batchSize;++T){let e=T*S[0],t=T*v.strides[0];for(let n=0;n<u.outDepth;++n){let r=t+n*v.strides[1],a=n*u.strideDepth-y;for(let t=0;t<d;++t){let n=a+t*c;if(n<0||n>=u.inDepth)continue;let s=t*N[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<p;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var nF={kernelName:kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;xE([a,s],"conv3dBackpropFilterV2");let u=va.computeStrides(a.shape),d=va.computeStrides(s.shape),h=qf.computeConv3DInfo(a.shape,l,i,1,o),p=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ja(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=d,E=n.data.get(a.dataId).values,[$,A,R,F]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let L=0;L<m;++L){let e=Math.max(0,Math.ceil((D-L)/p)),t=Math.min(h.outDepth,(h.inDepth+D-L)/p),n=L*v;for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((O-r)/c)),s=Math.min(h.outHeight,(h.inHeight+O-r)/c),i=r*w+n;for(let n=0;n<y;++n){let o=Math.max(0,Math.ceil((M-n)/f)),l=Math.min(h.outWidth,(h.inWidth+M-n)/f),u=n*k+i;for(let i=0;i<h.inChannels;++i){let d=i*I+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let d=0;d<h.batchSize;++d){let h=d*$,g=d*N;for(let d=e;d<t;++d){let e=(L+d*p-D)*A+h,t=d*T+g;for(let d=a;d<s;++d){let a=(r+d*c-O)*R+e,s=d*_+t;for(let e=o;e<l;++e){let t=e*C+s;m+=E[(n+e*f-M)*F+a+i]*S[t+u]}}}}x[d+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var rF={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;xE([a],"conv3dBackpropInputV2");let u=va.computeStrides(a.shape),d=va.computeStrides(s.shape),h=qf.computeConv3DInfo(l,s.shape,o,1,i),p=new Ja(h.inShape,"float32"),c=p.values,[f,m,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=d,{batchSize:C,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:R,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=$-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let j=0;j<C;++j)for(let e=0;e<R;++e)for(let t=0;t<F;++t){let n=t-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(L,(E+n)/B);for(let s=0;s<D;++s){let i=s-G,o=Math.max(0,Math.ceil(i/W)),l=Math.min(z,($+i)/W);for(let u=0;u<M;++u){let d=u-H,h=Math.max(0,Math.ceil(d/V)),p=Math.min(P,(A+d)/V),C=0;for(let t=r;t<a;++t){let r=t*B-n;for(let n=o;n<l;++n){let a=n*W-i;for(let s=h;s<p;++s){let i=x*j+v*t+w*n+k*s,o=S*(E-1-r)+N*($-1-a)+T*(A-1-(s*V-d))+_*e;for(let e=0;e<O;++e){C+=b[i+e]*I[o+e]}}}}c[f*j+m*t+g*s+y*u+e]=C}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},aF=KE(St,(e=>Math.cos(e))),sF={kernelName:St,backendName:"cpu",kernelFunc:aF},iF=KE(Nt,(e=>Math.cosh(e))),oF={kernelName:Nt,backendName:"cpu",kernelFunc:iF};var lF={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,h,p,c]=a.shape,f=s.shape[0],[m,g]=o,y=uo([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=va.computeStrides(a.shape),k=va.computeStrides(y.shape);for(let I=0;I<f;I++){let e=4*I,t=b[e],n=b[e+1],r=b[e+2],a=b[e+3],s=x[I];if(s>=d)continue;let i=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(a-n)*(p-1)/(g-1):0;for(let d=0;d<m;d++){let e=m>1?t*(h-1)+d*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<c;e++){let n=e+t*k[2]+d*k[1]+I*k[0];y.values[n]=u}else if("bilinear"===l){let t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){let l=g>1?n*(p-1)+e*o:.5*(n+a)*(p-1);if(l<0||l>p-1){for(let t=0;t<c;t++){let n=t+e*k[2]+d*k[1]+I*k[0];y.values[n]=u}continue}let h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<c;n++){let a=n+h*w[2]+t*w[1]+s*w[0],o=v[a];a=n+f*w[2]+t*w[1]+s*w[0];let l=v[a];a=n+h*w[2]+r*w[1]+s*w[0];let u=v[a];a=n+f*w[2]+r*w[1]+s*w[0];let p=o+(l-o)*m,c=u+(v[a]-u)*m;a=n+e*k[2]+d*k[1]+I*k[0],y.values[a]=p+(c-p)*i}}}else for(let t=0;t<g;++t){let r=g>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(r<0||r>p-1){for(let e=0;e<c;e++){let n=e+t*k[2]+d*k[1]+I*k[0];y.values[n]=u}continue}let i=Math.round(r),l=Math.round(e);for(let e=0;e<c;e++){let n=e+i*w[2]+l*w[1]+s*w[0],r=e+t*k[2]+d*k[1]+I*k[0];y.values[r]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var uF={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;xE(a,"cumprod");let l=qf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=Y$({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=qf.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=ps(u.dtype,"int32"),p=va.makeOnesTypedArray(va.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)p[t]=i?1:c[t];else{let n=m(y,e-1);p[t]=i?c[n]*p[n]:c[t]*p[n]}}let g=n.makeTensorInfo(u.shape,h,p);if(null!=l){let e=Y$({inputs:{x:g},backend:n,attrs:{perm:qf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var dF={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;xE(a,"cumsum");let l=qf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=Y$({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=qf.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=ps(u.dtype,"int32"),p=va.makeZerosTypedArray(va.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)p[t]=i?0:c[t];else{let n=m(y,e-1);p[t]=i?c[n]+p[n]:c[t]+p[n]}}let g=n.makeTensorInfo(u.shape,h,p);if(null!=l){let e=Y$({inputs:{x:g},backend:n,attrs:{perm:qf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var hF={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=VE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=UE(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var pF={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;va.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],d=a.shape[3],h=l*s,p=u*s,c=d/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*c),g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){let t=Math.floor(e/s),n=e%s;for(let e=0;e<p;++e){let r=Math.floor(e/s),a=(n*s+e%s)*c;for(let e=0;e<c;++e){let n=e+a+d*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,h,p,c],a.dtype,m)}};function cF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;xE([a,s],"depthwiseConv2DNative");let d=va.computeStrides(a.shape),h=va.computeStrides(s.shape),p=l;null==p&&(p=[1,1]),va.assert(qf.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let c=qf.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new Ja(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let T=0;T<c.batchSize;++T){let e=T*d[0],t=T*k.strides[0];for(let n=0;n<c.outHeight;++n){let r=t+n*k.strides[1],a=n*c.strideHeight-v;for(let t=0;t<f;++t){let n=a+t*g;if(n<0||n>=c.inHeight)continue;let s=t*h[0],i=e+n*d[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*h[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var fF={kernelName:At,backendName:"cpu",kernelFunc:cF};var mF={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;xE([a,s],"depthwiseConv2dNativeBackpropFilter");let h=qf.computeConv2DInfo(a.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new Ja(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new Ja(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Ja(s.shape,s.dtype,k);for(let S=0;S<f;++S){let e=Math.max(0,Math.ceil((b-S)/p)),t=Math.min(h.outHeight,(h.inHeight+b-S)/p);for(let n=0;n<m;++n){let r=Math.max(0,Math.ceil((y-n)/c)),a=Math.min(h.outWidth,(h.inWidth+y-n)/c);for(let s=0;s<h.outChannels;++s){let i=Math.trunc(s/x),o=s%x,l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){let e=S+o*p-b;for(let t=r;t<a;++t){let r=n+t*c-y;l+=w.get(u,e,r,i)*I.get(u,o,t,s)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var gF={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;xE([a,s],"depthwiseConv2DNativeBackpropInput");let h=va.computeStrides(a.shape),p=va.computeStrides(s.shape),c=qf.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new Ja(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=p,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:$,inHeight:A,inWidth:R,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=C-1-c.padInfo.top,P=E-1-c.padInfo.left,B=F/$;for(let W=0;W<_;++W)for(let e=0;e<$;++e)for(let t=0;t<A;++t){let n=t-z,r=Math.max(0,Math.ceil(n/O)),a=Math.min(D,(C+n)/O);for(let s=0;s<R;++s){let i=s-P,o=Math.max(0,Math.ceil(i/L)),l=Math.min(M,(E+i)/L),u=0;for(let t=r;t<a;++t){let r=t*O-n;for(let n=o;n<l;++n){let a=v*W+w*t+k*n,s=S*(C-1-r)+N*(E-1-(n*L-i))+T*e;for(let t=0;t<B;++t){u+=x[a+(e*B+t)]*I[s+t]}}}m[g*W+y*t+b*s+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var yF={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=va.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=uo([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},bF={kernelName:Mt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=n,d=u.data.get(a.dataId).values,h=a.shape.length,p=u.data.get(s.dataId).values,c=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:_}=qf.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),C=va.sizeFromShape(_),E=_.length,$=va.getArrayFromDType(a.dtype,C);for(let A=0;A<f;++A)for(let e=0;e<b;++e){let t=e*w-v.top;for(let n=0;n<x;++n){let r=n*k-v.left;for(let i=0;i<y;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){let n=t+e*N;if(n>=0&&n<m)for(let t=0;t<S;++t){let l=r+t*T;if(l>=0&&l<g){let r=va.locToIndex([A,n,l,i],h,va.computeStrides(a.shape)),u=va.locToIndex([e,t,i],c,va.computeStrides(s.shape)),f=d[r]+p[u];f>o&&(o=f)}}}$[va.locToIndex([A,e,n,i],E,va.computeStrides(_))]=o}}}return{dataId:u.write(va.toTypedArray($,a.dtype),_,a.dtype),shape:_,dtype:a.dtype}}},xF={kernelName:Lt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r,d=n,h=va.toNestedArray(a.shape,d.data.get(a.dataId).values),p=va.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=qf.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u);va.assert(i.rank===T.length,(()=>`Error in ${Lt}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));let _=va.toNestedArray(T,d.data.get(i.dataId).values),C=va.makeZerosNestedTypedArray(s.shape,s.dtype);for(let E=0;E<c;++E)for(let e=0;e<y;++e){let t=e*v-x.top;for(let n=0;n<b;++n){let r=n*w-x.left;for(let a=0;a<g;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<k;++e){let n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){let l=r+t*N;if(l>=0&&l<m){let r=h[E][n][l][a]+p[e][t][a];r>s&&(s=r,i=e,o=t)}}}C[i][o][a]+=_[E][e][n][a]}}}return{dataId:d.write(va.toTypedArray(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},vF={kernelName:Ot,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r,d=n,h=va.toNestedArray(a.shape,d.data.get(a.dataId).values),p=va.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=qf.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u);va.assert(i.rank===T.length,(()=>`Error in ${Ot}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));let _=va.toNestedArray(T,d.data.get(i.dataId).values),C=va.makeZerosNestedTypedArray(a.shape,a.dtype);for(let E=0;E<c;++E)for(let e=0;e<y;++e){let t=e*v-x.top;for(let n=0;n<b;++n){let r=n*w-x.left;for(let a=0;a<g;++a){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<k;++e){let n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){let l=r+t*N;if(l>=0&&l<m){let r=h[E][n][l][a]+p[e][t][a];r>s&&(s=r,i=n,o=l)}}}C[E][i][o][a]+=_[E][e][n][a]}}}return{dataId:d.write(va.toTypedArray(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var wF={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,d=(null==o?void 0:o.contextType)||"2d";if("2d"!==d)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let h=s.getContext(d,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${d} type.`);let[p,c]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*p*4);for(let x=0;x<p*c;++x){let e=[0,0,0,255*u];for(let n=0;n<f;n++){let t=m[x*f+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===a.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}let t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=c,s.height=p;let b=new ImageData(y,c,p);return h.putImageData(b,0,0),a}};function kF(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;xE(s,"sum"),t="bool"===s.dtype?DE({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):EE({inputs:{x:s},backend:r});let l=t.shape.length,u=va.parseAxisParam(i,t.shape),d=qf.getAxesPermutation(u,l),h=u,p=t;null!=d&&(p=Y$({inputs:{x:t},backend:r,attrs:{perm:d}}),h=qf.getInnerMostAxes(h.length,l)),qf.assertAxesAreInnerMostDims("sum",h,p.shape.length);let[c,f]=qf.computeOutAndReduceShapes(p.shape,h),m=CE(r,c,qf.upcastType(p.dtype,"int32")),g=va.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(p.dataId).values;for(let x=0;x<y.length;++x){let e=x*g,t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(o){let e=m;m=lR({inputs:{x:m},backend:r,attrs:{shape:qf.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=d&&r.disposeIntermediateTensorInfo(p),m}var IF={kernelName:_r,backendName:"cpu",kernelFunc:kF};var SF={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=qf.decodeEinsumEquation(a,s.length);qf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=qf.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let e of d[m]){let t,{permutationIndices:r,expandDims:a}=qf.getEinsumPermutation(c,l[e]);qf.isIdentityPermutation(r)?t=s[e]:(t=Y$({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);va.arraysEqual(t.shape,i)||(t=lR({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===p?p=t:(p=V$({inputs:{a:t,b:p},backend:n}),f.push(p))}m<h-1&&(u[m]>=0&&(p=kF({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}};var NF={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;xE([r,a],"eluGrad");let s=new Float32Array(va.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let e=i[l];s[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(a.shape,"float32",s)}},TF=qf.ERF_P,_F=qf.ERF_A1,CF=qf.ERF_A2,EF=qf.ERF_A3,$F=qf.ERF_A4,AF=qf.ERF_A5,RF=KE(Ut,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+TF*n);return t*(1-((((AF*r+$F)*r+EF)*r+CF)*r+_F)*r*Math.exp(-n*n))})),FF={kernelName:Ut,backendName:"cpu",kernelFunc:RF};function DF(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(va.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),lR({inputs:{x:a},backend:n,attrs:{shape:o}})}var MF={kernelName:jt,backendName:"cpu",kernelFunc:DF},OF=NE(((e,t)=>e/t)),LF=OE(Pt,OF),zF={kernelName:Pt,backendName:"cpu",kernelFunc:LF};function PF(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],d=va.sizeFromShape(u),h=va.getTypedArrayFromDType("float32",d),p=va.getTypedArrayFromDType("float32",d);for(let g=0;g<a;g++){let e=vA({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=vA({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=TE({inputs:{real:e,imag:r},backend:n}),{real:i,imag:u}=BF(a,t,n),d=qf.mergeRealAndImagArrays(i,u);for(let t=0;t<s;t++){let e=qf.getComplexWithIndex(d,t);h[g*s+t]=e.real,p[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=TE({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function BF(e,t,n){let r=va.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0===(e&e-1)}(r)){let a=WF(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",va.createScalarValue(r,"float32")),i=EE({inputs:{x:s},backend:n}),l=zF.kernelFunc({inputs:{a:e,b:s},backend:n}),u=zF.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:h}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=qf.exponent(a*r,t,n),l=qf.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),qf.assignToTypedArray(r,s,i,a)}return r}(qf.mergeRealAndImagArrays(s,i),r,t);return qf.splitRealAndImagArrays(e)}}function WF(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=qf.mergeRealAndImagArrays(e,t),i=n/2,o=qf.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],h=a.makeTensorInfo(d,"float32",l),p=a.makeTensorInfo(d,"float32",u),c=TE({inputs:{real:h,imag:p},backend:a}),f=qf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=TE({inputs:{real:b,imag:x},backend:a}),w=WF(l,u,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),_=TE({inputs:{real:N,imag:T},backend:a}),C=WF(m,g,i,r,a),E=C.real,$=C.imag,A=[E.length],R=a.makeTensorInfo(A,"float32",E),F=a.makeTensorInfo(A,"float32",$),D=TE({inputs:{real:R,imag:F},backend:a}),M=qf.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=TE({inputs:{real:L,imag:z},backend:a}),B=V$({inputs:{a:P,b:D},backend:a}),W=BE({inputs:{a:_,b:B},backend:a}),V=VA({inputs:{a:_,b:B},backend:a}),U=AE({inputs:{input:W},backend:a}),G=AE({inputs:{input:V},backend:a}),H=qR({inputs:{input:W},backend:a}),j=qR({inputs:{input:V},backend:a}),q=XR({inputs:[U,G],backend:a,attrs:{axis:0}}),K=XR({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var VF={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=va.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=lR({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=PF(i,!1,n),l=lR({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function UF(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||va.inferDtype(a),o=va.getArrayFromDType(i,va.sizeFromShape(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var GF={kernelName:Xt,backendName:"cpu",kernelFunc:UF};var HF={kernelName:Yt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,s=r,i=va.getTypedArrayFromDType(a.dtype,va.sizeFromShape(a.shape)),[o,l,u,d]=a.shape,h=s.data.get(a.dataId).values;for(let p=0;p<o;p++){let e=p*u*l*d;for(let t=0;t<l;t++){let n=t*(u*d);for(let t=0;t<u;t++){let r=t*d;for(let a=0;a<d;a++){let s=Math.round(u-t-1),o=e+n+r+a,l=h[o];if(s>=0&&s<u){l=h[e+n+s*d+a]}i[o]=l}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var jF={kernelName:sa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=ZR({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let e=m;if("NCHW"===d&&1===i.shape.length&&1!==i.shape[0]){let e=lR({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=BE({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=BE({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===d&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=lR({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=oR(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=oR(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}};var qF={kernelName:ia,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=cF({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let e=m;m=BE({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=oR(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var KF={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=va.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,d,h]=qf.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let p=m$(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,d,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,p.values)}};var XF={kernelName:en,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;xE([a,s],"gatherV2");let l=va.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,d=a.shape[l];for(let x=0;x<u.length;++x){let e=u[x];va.assert(e<=d-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`))}let h=o;null==o&&(h=0);let p=va.sizeFromShape(s.shape),c=qf.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=lR({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=lR({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}}),g=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=g$(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}};var YF={kernelName:sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=va.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=lR({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=PF(i,!0,n),l=lR({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},ZF=KE(ln,(e=>Number.isFinite(e)?1:0),"bool"),JF={kernelName:ln,backendName:"cpu",kernelFunc:ZF},QF=KE(un,(e=>Math.abs(e)===1/0?1:0),"bool"),eD={kernelName:un,backendName:"cpu",kernelFunc:QF},tD=KE(dn,(e=>Number.isNaN(e)?1:0),"bool"),nD={kernelName:dn,backendName:"cpu",kernelFunc:tD};var rD={kernelName:fn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=E$(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},aD=KE(gn,(e=>Math.log1p(e))),sD={kernelName:gn,backendName:"cpu",kernelFunc:aD},iD=NE(((e,t)=>e&&t)),oD=OE(yn,iD,null,"bool"),lD={kernelName:yn,backendName:"cpu",kernelFunc:oD},uD=KE(bn,(e=>e?0:1),"bool"),dD={kernelName:bn,backendName:"cpu",kernelFunc:uD},hD=NE(((e,t)=>e||t)),pD=OE(xn,hD,null,"bool"),cD={kernelName:xn,backendName:"cpu",kernelFunc:pD};var fD={kernelName:In,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;xE(a,"LRN");let u=a.shape[3],d=u-1,h=n.data.get(a.dataId).values,p=va.sizeFromShape(a.shape),c=new Float32Array(p);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,d),a=0;for(;n<=r;n++){let e=h[n];a+=e*e}return a}for(let m=0;m<p;m++){let e=f(m),t=h[m]*Math.pow(i+o*e,-l);c[m]=t}return n.makeTensorInfo(a.shape,a.dtype,c)}};var mD={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;xE(i,"LRNGrad");let h=va.sizeFromShape(i.shape),p=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let e=b%p,t=b-e+Math.max(0,e-o),n=b-e+Math.min(p,e+o+1),r=0;for(let a=t;a<n;a++)r+=Math.pow(f[a],2);r=u*r+l;for(let a=t;a<n;a++){let e=-2*u*d*f[a]*m[b]/r;b===a&&(e+=Math.pow(r,-d)),e*=c[b],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function gD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,d=va.parseAxisParam(s,l),h=d,p=qf.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(null!=p){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];c=X$(c,l,a.dtype,p,e),h=qf.getInnerMostAxes(h.length,u),l=e}xE(a,"max"),qf.assertAxesAreInnerMostDims("max",h,u);let[f,m]=qf.computeOutAndReduceShapes(l,h),g=F$(c,va.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=qf.expandShapeToKeepDim(f,d)),{dataId:y,shape:b,dtype:a.dtype}}var yD={kernelName:Tn,backendName:"cpu",kernelFunc:gD};var bD={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;xE(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;va.assert(qf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=qf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&va.arraysEqual(d.inShape,d.outShape))u=EE({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=va.computeStrides(a.shape),r=FR(e,a.shape,a.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}};var xD={kernelName:$n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;xE(a,"maxPool3d");let d=qf.computePool3DInfo(a.shape,s,i,1,o,l,u),h=MR(n.data.get(a.dataId).values,a.shape,a.dtype,va.computeStrides(a.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};var vD={kernelName:An,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;xE([a,s],"maxPool3DGrad");let d=qf.computePool3DInfo(s.shape,i,o,1,l,u),h=function(e,t){let n=uo(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-p,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,p=u;for(;p<0;)p+=o;let w=Math.min(t.inHeight,d+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,h+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=p;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*d*h+a*d+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),d),p=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterDepth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=b-1-d.padInfo.front,k=v-1-d.padInfo.left,I=x-1-d.padInfo.top,S=uo(s.shape,"float32"),N=n.bufferSync(a);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=t-w,s=n-I,i=r-k,o=0;for(let t=0;t<b;t+=m){let n=(a+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){let a=(s+r)/c;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let s=0;s<v;s+=y){let l=(i+s)/f;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;let u=b*x*v-1-h.get(T,n,a,l,e)===t*x*v+r*v+s?1:0;0!==u&&(o+=N.get(T,n,a,l,e)*u)}}}S.set(o,T,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var wD={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;xE([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=qf.computePool2DInfo(o.shape,l,u,1,d,h),c=n.data.get(o.dataId).values,f=uo(p.outShape,o.dtype,DR(c,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=uo(o.shape,"float32"),S=n.data.get(a.dataId).values,N=uo(a.shape,"float32",S);for(let T=0;T<p.batchSize;++T)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){let r=t-k,a=n-w,s=0;for(let t=0;t<x;t+=y){let n=(r+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=b){let i=(a+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;let o=x*v-1-f.get(T,n,i,e)===t*v+r?1:0;0!==o&&(s+=N.get(T,n,i,e)*o)}}I.set(s,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var kD={kernelName:Rn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;xE(a,"MaxPoolWithArgmax");let d=u.data.get(a.dataId).values,h=qf.computePool2DInfo(a.shape,s,i,[1,1],o),[p,c]=function(e,t,n,r,a){let s=FR(e,0,n,va.computeStrides(t),a,"max"),i=DR(e,t,n,a,!0,r);return[s.values,i.values]}(d,a.shape,a.dtype,l,h),f=u.write(p,h.outShape,a.dtype),m=u.write(c,h.outShape,a.dtype);return[{dataId:f,shape:h.outShape,dtype:a.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};var ID={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=va.parseAxisParam(s,a.shape),l=qf.computeOutAndReduceShapes(a.shape,o)[1],u=va.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);let p=DE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);let c=LF({inputs:{a:p,b:h},backend:n});d.push(c);let f=kF({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var SD={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;xE(a,"min");let o=va.parseAxisParam(s,a.shape),l=o,u=qf.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=Y$({inputs:{x:a},backend:n,attrs:{perm:u}}),l=qf.getInnerMostAxes(l.length,a.shape.length)),qf.assertAxesAreInnerMostDims("min",l,d.shape.length);let[h,p]=qf.computeOutAndReduceShapes(d.shape,l),c=va.sizeFromShape(p),f=va.makeZerosTypedArray(va.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=lR({inputs:{x:g},backend:n,attrs:{shape:qf.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var ND={kernelName:On,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;xE(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,c=va.computeStrides(a.shape),f=va.sizeFromShape(o),m=o.length,g=va.computeStrides(o),y=va.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let e=va.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-d:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+d);e=e.map(((e,t)=>e-l[t]));let t=va.locToIndex(e,p,c);y[b]=h[t]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},TD=NE(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),_D=OE(Ln,TD),CD={kernelName:Ln,backendName:"cpu",kernelFunc:_D},ED=m(_());function $D(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=va.parseAxisParam([o],a.shape),u=gD({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=qf.expandShapeToKeepDim(u.shape,l),h=lR({inputs:{x:u},backend:n,attrs:{shape:d}}),p=VA({inputs:{a:a,b:h},backend:n}),c=a$({inputs:{x:p},backend:n}),f=kF({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=lR({inputs:{x:f},backend:n,attrs:{shape:d}}),g=LF({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var AD={kernelName:$r,backendName:"cpu",kernelFunc:$D};var RD={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;xE(a,"multinomial");let l=o?a:$D({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],c=va.makeZerosTypedArray(va.sizeFromShape(p),"int32");for(let f=0;f<u;++f){let e=f*d,t=new Float32Array(d-1);t[0]=h[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+h[e+a];let n=ED.alea(i.toString()),r=f*s;for(let a=0;a<s;++a){let e=n();c[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){c[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",c)}},FD=Qm.nonMaxSuppressionV3Impl;var DD={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;xE(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h}=FD(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},MD=Qm.nonMaxSuppressionV4Impl;var OD={kernelName:Un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;xE(a,"NonMaxSuppressionPadded");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:c}=MD(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},LD=Qm.nonMaxSuppressionV5Impl;var zD={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;xE(a,"NonMaxSuppressionWithScore");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=LD(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var PD={kernelName:jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;xE(a,"oneHot");let u=va.sizeFromShape(a.shape),d=new Float32Array(u*i);d.fill(l);let h=n.data.get(a.dataId).values;for(let p=0;p<u;++p)h[p]>=0&&h[p]<i&&(d[p*i+h[p]]=o);return n.makeTensorInfo([...a.shape,i],s,d)}};function BD(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=AE({inputs:{input:r},backend:n}),t=BD({inputs:{x:e},backend:n}),a=qR({inputs:{input:r},backend:n}),s=BD({inputs:{x:a},backend:n}),i=TE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return UF({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var WD={kernelName:ea,backendName:"cpu",kernelFunc:BD};var VD={kernelName:Hn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=AE({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=qR({inputs:{input:a},backend:r}),i=BD({inputs:{x:s},backend:r}),o=TE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return UF({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function UD(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return DF({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{va.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),va.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=XR({inputs:t.map((e=>{let t=DF({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var GD={kernelName:qn,backendName:"cpu",kernelFunc:UD};var HD={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;xE(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,d=va.sizeFromShape(a.shape),h=a.shape.length,p=va.computeStrides(a.shape),c=va.sizeFromShape(o),f=o.length,m=va.computeStrides(o),g=va.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let y=0;y<d;y++){let e=va.indexToLoc(y,h,p).map(((e,t)=>e+l[t]));g[va.locToIndex(e,f,m)]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},jD=NE(((e,t)=>Math.pow(e,t))),qD=OE(Yn,jD),KD={kernelName:Yn,backendName:"cpu",kernelFunc:qD};var XD={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[p,c,f]=rA(l,u,d,s.shape,s.dtype,h,i.shape),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}};var YD={kernelName:er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=sA(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],r.dtype,d)]}};var ZD={kernelName:tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),c=o.map((e=>e.shape)),[f,m]=dA(u,a.shape,d,s.shape,s.dtype,h,i.shape,p,c,l);return n.makeTensorInfo(f,s.dtype,m)}};var JD={kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=hA(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},QD=KE(ar,(e=>1/e)),eM={kernelName:ar,backendName:"cpu",kernelFunc:QD};var tM={kernelName:ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;xE(a,"resizeBilinear");let l=va.computeStrides(a.shape),[u,d]=o,[h,p,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(va.sizeFromShape([h,u,d,f])),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],b=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<u;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),s=k*l[0]+n*l[1],o=k*l[0]+a*l[1];for(let e=0;e<d;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),a=t-n,u=Math.min(c-1,Math.ceil(t)),d=s+n*l[2],h=o+n*l[2],p=s+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[h+e],s=t+(m[p+e]-t)*a,i=s+(n+(m[y+e]-n)*a-s)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,d,f],"float32",g)}};var nM={kernelName:dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;xE([s,a],"resizeBilinearGrad");let o=va.computeStrides(a.shape),[l,u,d,h]=a.shape,[,p,c]=s.shape,f=new Float32Array(l*u*d*h),m=[i&&p>1?u-1:u,i&&c>1?d-1:d],g=[i&&p>1?p-1:p,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let w=0;w<l;w++){let e=w*o[0];for(let t=0;t<p;t++){let n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=e+r*o[1],i=e+a*o[1],l=n-r,p=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*u,k=p*a,I=l*u,S=l*a;for(let e=0;e<h;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,d,u,h],"float32",f)}};var rM={kernelName:or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;xE(a,"resizeNearestNeighbor");let l=va.computeStrides(a.shape),[u,d]=o,[h,p,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*d*f),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],b=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let k=0;k<h;k++){let e=k*l[0];for(let t=0;t<u;t++){let n=i?x*(t+.5):x*t,r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=e+r*l[1];for(let e=0;e<d;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,d,f],a.dtype,g)}};var aM={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;xE([s,a],"resizeNearestNeighborGrad");let o=va.computeStrides(a.shape),l=va.computeStrides(s.shape),[u,d,h,p]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*d*h*p),g=n.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&f>1?h-1:h],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let N=0;N<u;N++){let e=N*o[0];for(let t=0;t<d;t++){let n=e+t*o[1],r=Math.floor(t*w),a=Math.floor(r-I/2);for(let s=0;s<h;s++){let r=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<p;n++){let o=0;for(let r=0;r<I;r++){let u=r+a;if(u<0||u>=c)continue;let p=e+u*l[1],m=u*x;if(t===Math.min(d-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let r=p+t*l[2],a=t*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var sM={kernelName:pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;xE(a,"reverse");let i=a.shape.length,o=va.parseAxisParam(s,a.shape);if(0===i)return EE({inputs:{x:a},backend:n});let l=new Ja(a.shape,a.dtype),u=n.bufferSync(a);for(let d=0;d<l.size;d++){let e=l.indexToLoc(d),t=e.slice();o.forEach((e=>t[e]=a.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},iM={kernelName:ra,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=va.getTypedArrayFromDType(a.dtype,va.sizeFromShape(a.shape)),[d,h,p,c]=a.shape,[f,m]=qf.getImageCenter(o,h,p),g=Math.sin(s),y=Math.cos(s),b=l.data.get(a.dataId).values;for(let x=0;x<d;x++){let e=x*p*h*c;for(let t=0;t<h;t++){let n=t*(p*c);for(let r=0;r<p;r++){let a=r*c;for(let s=0;s<c;s++){let o=[d,t,r,s],l=o[2],x=o[1],v=(l-f)*y-(x-m)*g,w=(l-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=i;if("number"!=typeof i&&(k=3===s?255:i[s]),v>=0&&v<p&&w>=0&&w<h){k=b[e+w*(p*c)+v*c+s]}u[e+n+a+s]=k}}}}return{dataId:l.write(u,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},oM=KE(cr,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),lM={kernelName:cr,backendName:"cpu",kernelFunc:oM};var uM={kernelName:mr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=qf.calculateShapes(s,a,i),p=mA(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function dM(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function hM(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}var pM={kernelName:yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=va.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?dM(n,t[e+l]):hM(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}};var cM={kernelName:br,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;xE([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=ps(a.dtype,s.dtype),h=va.makeZerosTypedArray(va.sizeFromShape(a.shape),d),p=0,c=0===i||i>1||1===a.shape.length?1:va.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<c;e++)1===o[f]?h[p++]=l[f]:h[p++]=u[f];return n.makeTensorInfo(a.shape,d,h)}},fM=qf.SELU_SCALEALPHA,mM=qf.SELU_SCALE,gM=KE(xr,(e=>e>=0?mM*e:fM*(Math.exp(e)-1))),yM={kernelName:xr,backendName:"cpu",kernelFunc:gM},bM=KE(Ir,(e=>e<0?-1:e>0?1:0)),xM={kernelName:Ir,backendName:"cpu",kernelFunc:bM},vM=KE(wr,(e=>Math.sin(e))),wM={kernelName:wr,backendName:"cpu",kernelFunc:vM},kM=KE(kr,(e=>Math.sinh(e))),IM={kernelName:kr,backendName:"cpu",kernelFunc:kM},SM=Math.log(1.1920928955078125e-7)+2,NM=KE(Nr,(e=>{let t,n=e>-SM,r=e<SM,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),TM={kernelName:Nr,backendName:"cpu",kernelFunc:NM};var _M={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;xE([a],"spaceToBatchND");let o=va.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=HD.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=qf.getReshaped(u.shape,s,o,!1),h=qf.getPermuted(d.length,s.length,!1),p=qf.getReshapedPermuted(u.shape,s,o,!1),c=lR({inputs:{x:u},backend:n,attrs:{shape:d}}),f=Y$({inputs:{x:c},backend:n,attrs:{perm:h}}),m=lR({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var CM={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[h,p,c,f,m]=kA(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var EM={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,h]=IA(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var $M={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=SA(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}};var AM={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=SA(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}};var RM={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:d,sliceSize:h,strides:p,outputSize:c}=qf.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":t=mA(m,r.bufferSync(i),l,c,h,d,u,p,!!r.data.get(o.dataId).values[0],f);break;case"float32":case"int32":t=mA(m,r.bufferSync(i),l,c,h,d,u,p,r.data.get(o.dataId).values[0],f);break;case"string":t=mA(m,r.bufferSync(i),l,c,h,d,u,p,va.decodeString(r.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}};var FM={kernelName:Er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=va.parseAxisParam(i,a.shape)[0],l=qf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let r=vA({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},DM={kernelName:Lr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:r}=t,a=n;xE(r,"square");let s=a.data.get(r.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){let e=s[o];i[o]=e*e}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},MM=KE(ta,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OM={kernelName:ta,backendName:"cpu",kernelFunc:MM};var LM={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;xE(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=wf.sliceInfo(a.shape,s,i,o,l,u,d,h,p);if(g)c=lR({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){va.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=wf.computeOutShape(x,v,w),t=vA({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=lR({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=DA(f,n.bufferSync(a),w,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var zM={kernelName:Br,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.data.get(d.dataId).values,c=n.data.get(h.dataId).values,[f,m]=OA(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var PM={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,h]=zA(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var BM={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=PA(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},WM=KE(Gr,(e=>Math.tan(e))),VM={kernelName:Gr,backendName:"cpu",kernelFunc:WM},UM=KE(Hr,(e=>Math.tanh(e)));var GM={kernelName:gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=qf.calculateShapes(s,a,r.shape),h=n.bufferSync(a),p=n.bufferSync(s),c=n.bufferSync(r),f=mA(h,p,r.shape,d,l,o,i,u,c,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};var HM={kernelName:jr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;xE(a,"tile");let i=GA(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var jM={kernelName:qr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;xE(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=qA(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var qM={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=va.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=va.computeStrides(g),k=w[0],I=w[1],S=w[2],N=va.getTypedArrayFromDType(a.dtype,va.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,_=r.data.get(s.dataId).values;for(let C=0;C<d;++C){let e=1===s.shape[0]?_:_.subarray(8*C,8*C+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<c;++r){let a,s=e[6]*n+e[7]*t+1;if(0===s)continue;let u=(e[0]*n+e[1]*t+e[2])/s,d=(e[3]*n+e[4]*t+e[5])/s,c=KM(u,p,o),f=KM(d,h,o);switch(i){case"nearest":a=YM(T,h,p,b,x,v,C,f,c,r,l);break;case"bilinear":a=ZM(T,h,p,b,x,v,C,f,c,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[C*k+t*I+n*S+r]=a}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function KM(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return va.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return va.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return va.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function XM(e,t,n,r,a,s,i,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:d}function YM(e,t,n,r,a,s,i,o,l,u,d){return XM(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,d)}function ZM(e,t,n,r,a,s,i,o,l,u,d){let h=Math.floor(o),p=Math.floor(l),c=h+1,f=p+1;return(c-o)*((f-l)*XM(e,t,n,r,a,s,i,h,p,u,d)+(l-p)*XM(e,t,n,r,a,s,i,h,f,u,d))+(o-h)*((f-l)*XM(e,t,n,r,a,s,i,c,p,u,d)+(l-p)*XM(e,t,n,r,a,s,i,c,f,u,d))}var JM={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;xE(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=KA(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var QM={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let d=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let p=new Array(o);for(let c=0;c<p.length;c++){d[s]=c;let e=vA({inputs:{x:a},backend:n,attrs:{begin:d,size:h}});p[c]=lR({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}};var eO={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;xE(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,d=s;for(let p=0;p<u;++p){let e=DF({inputs:{input:d},backend:n,attrs:{dim:p+1}});d=e,l.push(e)}for(let p=0;p<i;++p){let e=va.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=t$({inputs:{a:t,b:d},backend:n}),s=DE({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=V$({inputs:{a:s,b:a},backend:n}),u=kF({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(r),l.push(s),l.push(i),l.push(u)}let h=UD({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},tO=[pR,SE,fR,gR,WE,yR,bR,xR,vR,wR,IR,NR,_R,$R,RR,OR,LR,zR,PR,hR,BR,WR,VR,jE,UR,ME,JE,HR,_E,jR,YR,JR,QR,eF,tF,nF,rF,sF,oF,lF,uF,dF,hF,pF,fF,mF,gF,yF,bF,xF,vF,wF,SF,ZA,NF,n$,FF,s$,MF,l$,VF,GF,HF,h$,f$,jF,qF,KF,XF,x$,k$,$E,YF,KR,JF,eD,nD,QA,N$,C$,rD,R$,sD,lD,dD,cD,fD,mD,yD,O$,bD,xD,vD,wD,kD,ID,SD,P$,ND,CD,RD,U$,H$,DD,OD,zD,K$,PD,VD,GD,HD,KD,nR,Q$,XD,YD,ZD,JD,RE,zF,eM,aR,iR,uR,tM,nM,rM,aM,sM,iM,lM,fA,uM,pM,cM,yM,bA,xM,wM,IM,wA,AD,TM,_M,CM,EM,$M,AM,RM,FM,_A,DM,$A,FA,OM,LM,zM,PM,BM,UA,IF,VM,{kernelName:Hr,backendName:"cpu",kernelFunc:UM},GM,HM,jM,qM,Z$,JM,QM,eO,WD];for(let S0 of tO)fa(S0);var nO={};f(nO,{assertNotComplex:()=>hL,bindCanvasToFramebuffer:()=>WO,bindColorTextureToFramebuffer:()=>VO,bindTextureToProgramUniformSampler:()=>BO,bindTextureUnit:()=>OO,bindVertexBufferToProgramAttribute:()=>MO,callAndCheck:()=>fO,canBeRepresented:()=>yO,createFragmentShader:()=>wO,createFramebuffer:()=>DO,createProgram:()=>TO,createStaticIndexBuffer:()=>$O,createStaticVertexBuffer:()=>EO,createTexture:()=>RO,createVertexShader:()=>vO,getBatchDim:()=>KO,getExtensionOrThrow:()=>xO,getFramebufferErrorMessage:()=>HO,getMaxTexturesInShader:()=>rL,getNumChannels:()=>AO,getProgramUniformLocation:()=>PO,getProgramUniformLocationOrThrow:()=>zO,getRowsCols:()=>XO,getShapeAs3D:()=>YO,getTextureShapeFromLogicalShape:()=>ZO,getWebGLDisjointQueryTimerVersion:()=>aL,getWebGLErrorMessage:()=>bO,getWebGLMaxTextureSize:()=>eL,hasExtension:()=>sL,isCapableOfRenderingToFloatTexture:()=>oL,isDownloadFloatTextureEnabled:()=>lL,isReshapeFree:()=>QO,isWebGLFenceEnabled:()=>dL,isWebGLVersionEnabled:()=>iL,linkProgram:()=>_O,logShaderSourceAndInfoLog:()=>NO,resetMaxTextureSize:()=>tL,resetMaxTexturesInShader:()=>nL,unbindColorTextureFromFramebuffer:()=>UO,unbindTextureUnit:()=>LO,validateFramebuffer:()=>GO,validateProgram:()=>CO,validateTextureSize:()=>FO});var rO,aO,sO,iO={},oO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function lO(e,t){iO[e]=t}function uO(e,t){if(!(e in iO)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!Le().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete iO[e]}),!1),Le().getBool("SOFTWARE_WEBGL_ENABLED")&&(oO.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",oO)||n.getContext("experimental-webgl",oO):n.getContext("webgl2",oO)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;iO[e]=n}let n=iO[e];return null==n||n.isContextLost()?(delete iO[e],uO(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),iO[e])}function dO(e,t){return[t,e]}function hO(e){let t=va.sizeFromShape(e),n=Math.ceil(t/4);return va.sizeToSquarishShape(n)}function pO(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function cO(e,t){let n,r,a,s,i,o,l,u,d,h,p=e;return 2===Le().getNumber("WEBGL_VERSION")?(n=p.R32F,r=p.R16F,a=p.RGBA16F,s=p.RGBA32F,i=p.RED,l=4,u=1,d=p.HALF_FLOAT,h=p.FLOAT,o=p.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=p.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}function fO(e,t){let n=t();return Le().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+bO(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(rO||(rO={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(aO||(aO={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(sO||(sO={}));var mO=5.96e-8,gO=65504;function yO(e){return!!(Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||mO<Math.abs(e)&&Math.abs(e)<gO)}function bO(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function xO(e,t){return jO(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function vO(e,t){let n=jO(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(fO(e,(()=>e.shaderSource(n,t))),fO(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function wO(e,t){let n=jO(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(fO(e,(()=>e.shaderSource(n,t))),fO(e,(()=>e.compileShader(n))),Le().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw NO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var kO,IO,SO=/ERROR: [0-9]+:([0-9]+):/g;function NO(e,t){let n=SO.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>va.rightPad((t+1).toString(),s)+e)),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${va.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function TO(e){return jO(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function _O(e,t){if(fO(e,(()=>e.linkProgram(t))),!Le().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function CO(e,t){if(fO(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function EO(e,t){let n=jO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),fO(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function $O(e,t){let n=jO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return fO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),fO(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function AO(){return 2===Le().getNumber("WEBGL_VERSION")?1:4}function RO(e){return jO(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function FO(e,t){let n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function DO(e){return jO(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function MO(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),fO(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),fO(e,(()=>e.enableVertexAttribArray(o))),!0)}function OO(e,t,n){qO(e,n),fO(e,(()=>e.activeTexture(e.TEXTURE0+n))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function LO(e,t){qO(e,t),fO(e,(()=>e.activeTexture(e.TEXTURE0+t))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function zO(e,t,n){return jO(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function PO(e,t,n){return e.getUniformLocation(t,n)}function BO(e,t,n,r){fO(e,(()=>OO(e,t,r))),fO(e,(()=>e.uniform1i(n,r)))}function WO(e){fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),fO(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),fO(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function VO(e,t,n){fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),fO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function UO(e,t){fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),fO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function GO(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+HO(e,t))}function HO(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function jO(e,t,n){let r=fO(e,(()=>t()));if(null==r)throw new Error(n);return r}function qO(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function KO(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return va.sizeFromShape(e.slice(0,e.length-t))}function XO(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function YO(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[KO(e),...XO(e)]),t}function ZO(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Le().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Le().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?va.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=va.squeezeShape(e).newShape);let a=va.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=KO(e),n=2,r=2;e.length&&([n,r]=XO(e)),a=t*(n/2)*(r/2),s=va.sizeToSquarishShape(a).map((e=>2*e))}else s=va.sizeToSquarishShape(a);return s}function JO(e){return e%2===0}function QO(e,t){if(e=e.slice(-2),t=t.slice(-2),va.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||JO(n)&&JO(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&JO(e[0])&&JO(t[0])}function eL(e){if(null==kO){let t=uO(e);kO=t.getParameter(t.MAX_TEXTURE_SIZE)}return kO}function tL(){kO=null}function nL(){IO=null}function rL(e){if(null==IO){let t=uO(e);IO=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,IO)}function aL(e){if(0===e)return 0;let t,n=uO(e);return t=sL(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:sL(n,"EXT_disjoint_timer_query")?1:0,t}function sL(e,t){return null!=e.getExtension(t)}function iL(e){try{if(null!=uO(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function oL(e){if(0===e)return!1;let t=uO(e);if(1===e){if(!sL(t,"OES_texture_float"))return!1}else if(!sL(t,"EXT_color_buffer_float"))return!1;return uL(t)}function lL(e){if(0===e)return!1;let t=uO(e);if(1!==e){if(sL(t,"EXT_color_buffer_float"))return uL(t);let e="EXT_color_buffer_half_float";if(sL(t,e)){let n=t.getExtension(e);return function(e,t){let n=cO(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!(!sL(t,"OES_texture_float")||!sL(t,"WEBGL_color_buffer_float"))&&uL(t)}function uL(e){let t=cO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function dL(e){return 2===e&&null!=uO(e).fenceSync}function hL(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&va.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var pL=Le();function cL(){let e,t,n,r,a,s,i,o,l,u;return 2===Le().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=Le().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function fL(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=va.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function mL(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=va.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function gL(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function yL(e){let t=va.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}pL.registerFlag("HAS_WEBGL",(()=>pL.getNumber("WEBGL_VERSION")>0)),pL.registerFlag("WEBGL_VERSION",(()=>iL(2)?2:iL(1)?1:0)),pL.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),pL.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===pL.get("WEBGL_VERSION"))),pL.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),pL.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),pL.registerFlag("WEBGL_PACK",(()=>pL.getBool("HAS_WEBGL"))),pL.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_CLIP",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_REDUCE",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_LAZILY_UNPACK",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_CONV_IM2COL",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>pL.getBool("WEBGL_PACK"))),pL.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>eL(pL.getNumber("WEBGL_VERSION")))),pL.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>rL(pL.getNumber("WEBGL_VERSION")))),pL.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=pL.getNumber("WEBGL_VERSION");return 0===e?0:aL(e)})),pL.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>pL.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Cs.isMobile())),pL.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>oL(pL.getNumber("WEBGL_VERSION")))),pL.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!pL.getBool("WEBGL_FORCE_F16_TEXTURES")&&pL.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),pL.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>lL(pL.getNumber("WEBGL_VERSION")))),pL.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>dL(pL.getNumber("WEBGL_VERSION")))),pL.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>pL.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),pL.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),pL.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Cs.isMobile()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),pL.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),pL.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),pL.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),pL.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),pL.registerFlag("WEBGL_EXP_CONV",(()=>!1)),pL.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>pL.getBool("IS_TEST"))),pL.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),pL.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),pL.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),pL.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var bL="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:xL}=qf;function vL(e,t,n){let r=[];if(e.forEach((e=>{let t=va.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=AL(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?kL(e,r):wL(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=xL(e.shapeInfo.logicalShape,t.logicalShape),u=$L(o),d=o-i,h=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+d]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+d]}`)).join(", ");let c="return outputValue;",f=1===va.sizeFromShape(e.shapeInfo.logicalShape),m=1===va.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${p});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&va.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=$L(l),h=xL(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${c[e+p]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=cL(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${IL}\n    ${SL}\n    ${NL}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return _L();case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(va.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return _L();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return va.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${mL(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=fL(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${mL(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=fL(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=fL(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=fL(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=TL),[h,d,s,i,a,o,n.userCode].join("\n")}function wL(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=CL(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${EL(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=CL(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&va.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=va.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${wL(RL(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${FL(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${EL(e)}\n      }\n    `;let u=s[0],d=s[1],h=CL(r);return 1===d?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=va.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${wL(RL(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${FL(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${EL(e)}\n      }\n    `;let d=e.shapeInfo.texShape,h=d[0],p=d[1],c=e.shapeInfo.flatOffset;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=CL(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=va.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${wL(RL(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${FL(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${EL(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=CL(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=va.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${wL(RL(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${FL(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${EL(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1];if(c===o&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=CL(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=va.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${wL(RL(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${FL(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${EL(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],f=p[1];if(f===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=CL(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function kL(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=cL();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=cL();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=cL();if(null!=s&&va.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${kL(RL(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${FL(s,r)});\n        }\n      `}let o=cL();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2),h=d*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${d}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=cL();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],h=Math.ceil(s[i-1]/2),p=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,p*=s[i-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var IL="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",SL="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NL="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",TL="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function _L(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function CL(e){return`offset${e}`}function EL(e){let t=e.name,n=va.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function $L(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function AL(e,t,n){let{newShape:r,keptDims:a}=va.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!va.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function RL(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function FL(e,t){return t.map((t=>e[t])).join(", ")}function DL(e,t,n){let r,a,s,i=[],o=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Le().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h of t.variableNames){let r={name:h,uniform:e.getUniformLocation(n,h,d),offset:e.getUniformLocation(n,`offset${h}`,d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${h}Shape`,d),r.texShape=e.getUniformLocation(n,`${h}TexShape`,d)),i.push(r)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(let h of t.customUniforms)o.push(e.getUniformLocation(n,h.name,d));return{variablesLocations:i,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function ML(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!va.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!va.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function OL(e){return Le().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var LL=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=rO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=cL();this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?mL(["r","c","d"],e):fL(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},zL=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=rO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=cL();this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?mL(["r","c","d"],e):fL(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},PL=class{constructor(e){this.variableNames=["A"],this.outTexUsage=aO.DOWNLOAD;let t=cL();this.outputShape=e,this.userCode=`\n      ${bL}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},BL=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aO.DOWNLOAD;let t=cL();this.outputShape=e,this.userCode=`\n      ${bL}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},WL={R:0,G:1,B:2,A:3},VL=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=cL();this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let e=n[i];s+=`\n          if(offset == ${i}) {\n            result = values[${WL[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":yL(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}},UL=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=cL();this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){let a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":yL(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},GL={};function HL(e){let t=cL();return vO(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function jL(e){return EO(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function qL(e){return $O(e,new Uint16Array([0,1,2,2,1,3]))}function KL(e,t,n,r,a,s){FO(t,n);let i=RO(e),o=e.TEXTURE_2D;return fO(e,(()=>e.bindTexture(o,i))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Le().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):fO(e,(()=>e.texStorage2D(o,1,r,t,n))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function XL(e){return e.internalFormatFloat}function YL(e,t,n,r){let[a,s]=dO(t,n);return KL(e,a,s,XL(r),r.textureFormatFloat,e.FLOAT)}function ZL(e){return e.internalFormatHalfFloat}function JL(e,t,n,r){let[a,s]=dO(t,n);return KL(e,a,s,ZL(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function QL(e){return e.downloadTextureFormat}function ez(e,t,n,r){let[a,s]=dO(t,n);return KL(e,a,s,QL(r),e.RGBA,e.UNSIGNED_BYTE)}function tz(e){return e.internalFormatPackedFloat}function nz(e,t,n,r){let[a,s]=pO(t,n);return KL(e,a,s,tz(r),e.RGBA,e.FLOAT)}function rz(e){return e.internalFormatPackedHalfFloat}function az(e,t,n,r){let[a,s]=pO(t,n);return KL(e,a,s,rz(r),e.RGBA,r.textureTypeHalfFloat)}function sz(e,t,n){return fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),MO(e,t,"clipSpacePos",n,3,20,0)&&MO(e,t,"uv",n,2,20,12)}function iz(e,t,n,r,a,s){let i,o,l;fO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Le().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):fO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function oz(e,t,n){fO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Le().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):fO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Le().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):fO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function lz(e,t,n,r){let a=e.createBuffer();fO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return fO(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),fO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),fO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function uz(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function dz(e,t,n,r){let[a,s]=dO(t,n),i=new Uint8Array(function(e,t){return e*t}(t*n,4));return fO(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function hz(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=pO(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function pz(e,t,n){let r=new Float32Array(t*n*4);return fO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}f(GL,{bindVertexProgramAttributeStreams:()=>sz,createBufferFromOutputTexture:()=>lz,createFloat16MatrixTexture:()=>JL,createFloat16PackedMatrixTexture:()=>az,createFloat32MatrixTexture:()=>YL,createIndexBuffer:()=>qL,createPackedMatrixTexture:()=>nz,createUnsignedBytesMatrixTexture:()=>ez,createVertexBuffer:()=>jL,createVertexShader:()=>HL,downloadByteEncodedFloatMatrixFromOutputTexture:()=>dz,downloadFloat32MatrixFromBuffer:()=>uz,downloadMatrixFromPackedOutputTexture:()=>pz,downloadPackedMatrixFromBuffer:()=>hz,getInternalFormatForFloat16MatrixTexture:()=>ZL,getInternalFormatForFloat16PackedMatrixTexture:()=>rz,getInternalFormatForFloat32MatrixTexture:()=>XL,getInternalFormatForPackedMatrixTexture:()=>tz,getInternalFormatForUnsignedBytesMatrixTexture:()=>QL,uploadDenseMatrixToTexture:()=>iz,uploadPixelDataToTexture:()=>oz});var cz=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Le().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,lO(t,e)):this.gl=uO(t),e=this.gl,2===Le().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>fO(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>fO(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>fO(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>fO(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>fO(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>fO(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>fO(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>fO(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Le().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=xO(this.gl,e),sL(this.gl,t))this.textureHalfFloatExtension=xO(this.gl,t);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),sL(this.gl,r))this.colorBufferHalfFloatExtension=xO(this.gl,r);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",sL(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!sL(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=jL(this.gl),this.indexBuffer=qL(this.gl),this.framebuffer=DO(this.gl),this.textureConfig=cO(this.gl,this.textureHalfFloatExtension)}get debug(){return Le().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fO(e,(()=>e.finish())),fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),fO(e,(()=>e.deleteFramebuffer(this.framebuffer))),fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),fO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),fO(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),YL(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),JL(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ez(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),oz(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),iz(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),az(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),nz(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(UO(this.gl,this.framebuffer),this.outputTexture=null),fO(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>dz(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return hz(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return uz(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=lz(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Le().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>pz(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=HL(t));let n=TO(t);fO(t,(()=>t.attachShader(n,this.vertexShader))),fO(t,(()=>t.attachShader(n,e))),_O(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&CO(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;fO(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),sz(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(fO(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&CO(this.gl,this.program),fO(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?zO(this.gl,e,t):PO(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fO(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),BO(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=pO(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&CO(this.gl,this.program),GO(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}fO(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fO(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=xO(this.gl,2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await va.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Le().platform&&(n=Le().platform.setTimeoutCustom.bind(Le().platform)),va.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),VO(this.gl,e,this.framebuffer),this.debug&&GO(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(VO(this.gl,this.outputTexture,this.framebuffer),this.debug&&GO(this.gl)):UO(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;VO(r,e,this.framebuffer),this.debug&&GO(r),this.outputTexture=e,fO(r,(()=>r.viewport(0,0,t,n))),fO(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),fO(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:fz,bincountImpl:mz,bincountReduceImpl:gz,bitwiseAndImpl:yz,castImpl:bz,ceilImpl:xz,concatImpl:vz,equalImpl:wz,expImpl:kz,expm1Impl:Iz,floorImpl:Sz,gatherNdImpl:Nz,gatherV2Impl:Tz,greaterImpl:_z,greaterEqualImpl:Cz,lessImpl:Ez,lessEqualImpl:$z,linSpaceImpl:Az,logImpl:Rz,maxImpl:Fz,maximumImpl:Dz,minimumImpl:Mz,multiplyImpl:Oz,negImpl:Lz,notEqualImpl:zz,prodImpl:Pz,raggedGatherImpl:Bz,raggedRangeImpl:Wz,raggedTensorToTensorImpl:Vz,rangeImpl:Uz,rsqrtImpl:Gz,scatterImpl:Hz,sigmoidImpl:jz,simpleAbsImpl:qz,sliceImpl:Kz,sparseFillEmptyRowsImpl:Xz,sparseReshapeImpl:Yz,sparseSegmentReductionImpl:Zz,sqrtImpl:Jz,staticRegexReplaceImpl:Qz,stridedSliceImpl:eP,stringNGramsImpl:tP,stringSplitImpl:nP,stringToHashBucketFastImpl:rP,subImpl:aP,tileImpl:sP,topKImpl:iP,transposeImpl:oP,uniqueImpl:lP}=kE;function uP(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function dP(e,t){return 1===t?[e]:uP(e,t)}var hP=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=OL(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=dP("rc",this.rank),t=$L(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},pP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?gL(["r","c","d"],"inputShape"):fL(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":yL(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};var cP=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=mP(t,n),a=gP(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=fP(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}return r===sO.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===sO.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===sO.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===sO.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===sO.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=mP(n,r),s=gP(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=fP(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Le().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function fP(e,t,n,r,a){let s,i=function(e,t){switch(e){case sO.PACKED_2X2_FLOAT32:return tz(t);case sO.PACKED_2X2_FLOAT16:return rz(t);case sO.UNPACKED_FLOAT32:return XL(t);case sO.UNPACKED_FLOAT16:return ZL(t);case sO.PACKED_4X1_UNSIGNED_BYTE:return QL(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=pO(e[0],e[1]);s=t*n}else{let[t,n]=dO(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function mP(e,t){if(e===aO.UPLOAD)return sO.PACKED_2X2_FLOAT32;if(e===aO.RENDER||null==e)return function(e){return Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sO.PACKED_2X2_FLOAT32:sO.UNPACKED_FLOAT32:e?sO.PACKED_2X2_FLOAT16:sO.UNPACKED_FLOAT16}(t);if(e===aO.DOWNLOAD||e===aO.PIXELS)return sO.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function gP(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var yP=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},bP="if (isnan(x)) return x;",xP="return abs(x);",vP=bP+"\n  return (x < 0.0) ? 0.0 : x;\n",wP=bP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",kP="return x;",IP=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},SP=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length);let t=e.length,n=dP("rc",t),r=$L(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},NP=Qm.whereImpl,TP={};var _P=Le().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var CP=class e extends z{nextDataId(){return e.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Le().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof cz)t=e;else{let n=uO(Le().getNumber("WEBGL_VERSION"),e);t=new cz(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=uO(Le().getNumber("WEBGL_VERSION"));t=new cz(e),this.binaryCache=function(e){return e in TP||(TP[e]={}),TP[e]}(Le().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new cP(this.gpgpu),this.numMBBeforeWarning=null==Le().global.screen?1024:Le().global.screen.height*Le().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new L(this,Ys())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=YO(t),u=new VL(l,!1,s),d=this.runWebGLProgram(u,[i],n,[[r,a]]);return d.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,n){if((Le().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Le().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:aO.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Le().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:aO.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new IP(i,kP):new yP(i,kP);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=va.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=qf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=va.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new IP(r,kP):new yP(r,kP);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Le().getBool("DEBUG")&&!Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Le().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&Le().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...hO(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=qf.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=va.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;fO(e,(()=>e.deleteBuffer(d)))}let h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ys().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new IP(a,kP):new yP(a,kP);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),d=Ys().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>va.decodeString(e)));return uo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return uo(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!yO(n))throw Le().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=va.sizeFromShape(t);if(Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...hO(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Le().getBool("WEBGL_PACK")&&!0===r,i=s?YO(t):t,o=s?new BL(i):new PL(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=va.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=va.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=va.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:va.now(),endMs:null}}endTimer(e){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=va.now(),e)}async getQueryTime(e){if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_P;return Le().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&va.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){qf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return NP(e.shape,t)}packedUnaryOp(e,t,n){let r=new IP(e.shape,t),a=this.compileAndRun(r,[e],n);return Ys().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=qz(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,xP,e.dtype);let t=new yP(e.shape,xP),n=this.compileAndRun(t,[e]);return Ys().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&va.isString(n[0])){let a=n.map((e=>va.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Ys().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new SP(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new hP(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[KO(e.shape),...XO(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[KO(t),...XO(t)],s=new pP(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=va.sizeFromShape(a),n=t[0]*t[1]*4;va.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=YO(a);i=r?new zL(o):new LL(o);let l=[null!=t?t:hO(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0,i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===rO.DENSE){let t=null!=s?s:hO(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===va.sizeFromShape(i.shape))return o.values=va.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&va.sizeFromShape(t.shape)<=Le().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!QO(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let d,h={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=AL(e.packedInputs,t.shape,s),u="",d="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=va.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let p=t.shape.length,c=2===o.length&&va.arraysEqual(t.shape,s),f=1===va.sizeFromShape(t.shape),m=qf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&va.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${d}_${h}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Le().getNumber("WEBGL_VERSION")}`,s}(e,u,h),c=this.getAndSaveBinary(p,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=vL(a,i,t),l=wO(e.gl,o),u=e.createProgram(l);return Le().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},DL(e,t,u)))}(this.gpgpu,e,u,h))),f=null!=this.activeTimers;f&&(d=this.startTimer()),Le().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(ML(t.inShapeInfos,n),ML([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Le().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let r=n[l],{uniform:a,offset:s,shape:i,texShape:o}=t.variablesLocations[l];if(i){let{uniformShape:n}=AL(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,r.texData.texShape[0],r.texData.texShape[1]),null!=a){if(r.isUniform){if(va.sizeFromShape(r.shape)<2)e.gl.uniform1f(a,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}continue}null!=r.texData.slice&&null!=s&&e.gl.uniform1i(s,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,a,l)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=va.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){let n=t.program.customUniforms[l],r=t.customUniformLocations[l],s=a[l];if("float"===n.type)e.gl.uniform1fv(r,s);else if("vec2"===n.type)e.gl.uniform2fv(r,s);else if("vec3"===n.type)e.gl.uniform3fv(r,s);else if("vec4"===n.type)e.gl.uniform4fv(r,s);else if("int"===n.type)e.gl.uniform1iv(r,s);else if("ivec2"===n.type)e.gl.uniform2iv(r,s);else if("ivec3"===n.type)e.gl.uniform3iv(r,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,s)}}e.executeProgram()}(this.gpgpu,c,u,h,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Le().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=va.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Le().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Le().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Qs((()=>{if(!Le().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Le().getBool("DEBUG");Le().set("DEBUG",!1);let t=this.abs(au(1e-8)).dataSync()[0];if(Le().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=va.now());let d=t.texShape;if(null==d&&(d=ZO(n,o),t.texShape=d),null!=a){let e,s=YO(n),i=d[1],h=d[0],p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!p)&&([i,h]=pO(d[0],d[1])),e=o?new UL(s,p):new VL(s,p);let c=p?[h,i]:d,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=p?aO.PIXELS:aO.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);let g=[[h,i]],y=this.runWebGLProgram(e,[f],r,g,!0),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Le().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=va.now()-l)}else{let e=this.acquireTexture(d,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*va.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Hf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(NO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=DL(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=Ys().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return Ys().makeTensorFromDataId(l,t,n,o)}};CP.nextDataId=0;var EP="4.21.0";function $P(){Le().set("WEBGL_FORCE_F16_TEXTURES",!0)}Cs.isBrowser()&&ui("webgl",(()=>new CP),2);var AP={forceHalfFloat:$P},RP="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",FP=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=qf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=OL(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},DP="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",MP=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qf.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=OL(a);let s="";if(r)if(0===a||1===va.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${$L(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=dP("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function OP(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var LP={kernelName:an,backendName:"webgl",kernelFunc:OP};function zP(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=OP({inputs:{x:r},backend:n}),l=OP({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var PP={kernelName:mt,backendName:"webgl",kernelFunc:zP},BP="return (a < 0.) ? b * a : a;",WP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var VP={kernelName:hn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",va.createScalarValue(s,"float32")),o=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MP(WP,a.shape,i.shape):new FP(BP,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},UP="return (a < 0.) ? b * a : a;",GP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var HP={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MP(GP,r.shape,a.shape):new FP(UP,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},jP="if (isnan(x)) return x;";function qP(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let s,{inputs:i,backend:o}=e,{x:l}=i,u=o,d=a||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=r){let e=u.texData.get(l.dataId),t=r(e.values,d);return u.makeTensorInfo(l.shape,d,t)}return s=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new IP(l.shape,n):new yP(l.shape,t),u.runWebGLProgram(s,[l],d)}}function KP(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e,{a:u,b:d}=o,h=l;if(a&&"complex64"===u.dtype){let e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{let[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new FP(t,u.shape,d.shape);return h.runWebGLProgram(i,[a,s],ps(n.dtype,r.dtype))})),s=zP({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,c=i||ps(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=s){let e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?qf.fromUint8ToStringArray(e):e,r="string"===u.dtype?qf.fromUint8ToStringArray(t):t,[a,i]=s(u.shape,d.shape,n,r,c),o=h.makeTensorInfo(i,c);return h.texData.get(o.dataId).values=a,o}return p=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new MP(n,u.shape,d.shape,r):new FP(t,u.shape,d.shape),h.runWebGLProgram(p,[u,d],c)}}function XP(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":vP;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":wP;if("prelu"===e)return t?GP:UP;if("leakyrelu"===e)return t?WP:BP;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var YP=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=OL(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${d}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},ZP="return areal * breal - aimag * bimag;",JP="return areal * bimag + aimag * breal;",QP=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},eB="return a * b;";function tB(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=qf.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new QP(ZP,a.shape,s.shape),i=new QP(JP,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),d=zP({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),d}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=Oz(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MP(eB,a.shape,s.shape):new FP(eB,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var nB={kernelName:Pn,backendName:"webgl",kernelFunc:tB};function rB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=va.sizeFromShape(a.shape),l=va.inferFromImplicitShape(s,o),u=va.sizeFromShape(l);va.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let d=i.texData.get(a.dataId);return!d.isPacked||QO(a.shape,l)||null!==d.texture&&QO(d.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[KO(e.shape),...XO(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[KO(t),...XO(t)],i=new pP(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var aB={kernelName:ir,backendName:"webgl",kernelFunc:rB},sB=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${va.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},iB=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function oB(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=qf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:d,outSize:h}=a[i];o="mean"===n?0===i?new sB({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h},u):new sB({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h}):new iB({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var lB=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=$L(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};var uB=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=$L(this.rank),a=uP("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function dB(e,t,n){let r=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uB(e.shape,t):new lB(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function hB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=va.parseAxisParam(a,e.shape),o=i,l=qf.getAxesPermutation(o,s),u=null!=l,d=e;u&&(d=dB(e,l,r),o=qf.getInnerMostAxes(o.length,s)),qf.assertAxesAreInnerMostDims("sum",o,s);let[h,p]=qf.computeOutAndReduceShapes(d.shape,o),c=h;n&&(c=qf.expandShapeToKeepDim(h,i));let f=va.sizeFromShape(p),m=rB({inputs:{x:d},attrs:{shape:[va.sizeFromShape(e.shape)/f,f]},backend:r}),g=oB(m,cs(e.dtype),"sum",r),y=rB({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(d),y}(a,s,i,n)}var pB={kernelName:_r,backendName:"webgl",kernelFunc:hB};function cB(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let d=0;d<u.length;d++)u[d]=s.shape[i[d]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=oP(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=dB(s,i,o);return t}var fB={kernelName:Xr,backendName:"webgl",kernelFunc:cB};function mB(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],c=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[d-1]:t.shape[d-2],m=a?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=va.sizeFromShape(g),x=va.sizeFromShape(y),v=Dl.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);va.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));let w,k=r?[b,p,f]:[b,f,p],I=a?[x,m,c]:[x,c,m],S=rB({inputs:{x:t},backend:s,attrs:{shape:k}}),N=rB({inputs:{x:n},backend:s,attrs:{shape:I}}),T=[S,N],_=Math.max(b,x),C=r?S.shape[1]:S.shape[2],E=null!=i,$=null!=o,A="leakyrelu"===u,R=null!=u?XP(u,!0):null;if((1===f||1===m)&&C>1e3&&!1===(E||$||A||null!=R)){let e=S,t=N;r&&(e=cB({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),T.push(e)),a&&(t=cB({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),T.push(t));let n=1===m,i=e;1!==m&&(i=rB({inputs:{x:e},backend:s,attrs:{shape:[_,C,1]}}),T.push(i));let o=1===m?2:1,l=t;n&&(l=rB({inputs:{x:t},backend:s,attrs:{shape:[_,1,C]}}),T.push(l));let u=tB({inputs:{a:i,b:l},backend:s});w=hB({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{let e=ps(t.dtype,n.dtype),u=new YP(k,I,[_,f,m],r,a,E,R,$,A),d=[S,N];if(null!=i&&d.push(i),$&&d.push(o),A){let e=s.makeTensorInfo([],"float32",va.createScalarValue(l,"float32"));d.push(e),T.push(e)}w=s.runWebGLProgram(u,d,e)}let F=rB({inputs:{x:w},backend:s,attrs:{shape:v}});T.push(w);for(let D of T)s.disposeIntermediateTensorInfo(D);return F}var gB={kernelName:aa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return mB({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},yB="return abs(x);";var bB={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=qz(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new IP(a.shape,yB):new yP(a.shape,yB),r.runWebGLProgram(t,[a],a.dtype)}},xB=qP({opSnippet:bP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),vB={kernelName:Ue,backendName:"webgl",kernelFunc:xB},wB=qP({opSnippet:bP+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),kB={kernelName:Ge,backendName:"webgl",kernelFunc:wB},IB="return a + b;",SB=KP({opSnippet:IB,packedOpSnippet:IB,supportsComplex:!0,cpuKernelImpl:fz}),NB={kernelName:He,backendName:"webgl",kernelFunc:SB},TB=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},_B=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};var CB={kernelName:je,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return OP({inputs:{x:a[0]},backend:r});if(a.length>Le().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>ps(e,t))),i=a.map((e=>e.shape)),o=Le().getBool("WEBGL_PACK")?new _B(a[0].shape,i):new TB(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var EB={kernelName:qe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=va.parseAxisParam(s,a.shape),u=l,d=qf.getAxesPermutation(u,o),h=a;null!=d&&(h=cB({inputs:{x:a},backend:n,attrs:{perm:d}}),u=qf.getInnerMostAxes(u.length,o)),qf.assertAxesAreInnerMostDims("all",u,o);let p,[c,f]=qf.computeOutAndReduceShapes(h.shape,u),m=rB({inputs:{x:h},backend:n,attrs:{shape:[-1,va.sizeFromShape(f)]}}),g=oB(m,m.dtype,"all",n);if(i){p=rB({inputs:{x:g},backend:n,attrs:{shape:qf.expandShapeToKeepDim(c,l)}})}else p=rB({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}};var $B={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=va.parseAxisParam(s,a.shape),u=l,d=qf.getAxesPermutation(u,o),h=a;null!=d&&(h=cB({inputs:{x:a},backend:n,attrs:{perm:d}}),u=qf.getInnerMostAxes(u.length,o)),qf.assertAxesAreInnerMostDims("any",u,o);let p,[c,f]=qf.computeOutAndReduceShapes(h.shape,u),m=rB({inputs:{x:h},backend:n,attrs:{shape:[-1,va.sizeFromShape(f)]}}),g=oB(m,m.dtype,"any",n);if(i){p=rB({inputs:{x:g},backend:n,attrs:{shape:qf.expandShapeToKeepDim(c,l)}})}else p=rB({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},AB=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},RB=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,va.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,d=$L(u),h=dP("coords",u);if(1===s){o=u+1;let e=$L(o);i=`\n        ${e} sourceLocR = ${e}(${h.join()}, 0);\n        ++${h[u-1]};\n        ${e} sourceLocG = ${e}(${h.join()}, 0);\n        ++${h[u-2]};\n        ${e} sourceLocA = ${e}(${h.join()}, 0);\n        --${h[u-1]};\n        ${e} sourceLocB = ${e}(${h.join()}, 0);\n        --${h[u-2]};`}else o=u,i=`\n        ${d} sourceLocR = coords;\n        ++${h[u-1]};\n        ${d} sourceLocG = coords;\n        ++${h[u-2]};\n        ${d} sourceLocA = coords;\n        --${h[u-1]};\n        ${d} sourceLocB = coords;\n        --${h[u-2]};`;let p=["x","y","z","w","u","v"].slice(0,o),c="."+p[o-1],f=p.map((e=>"int "+e)),m=dP("sourceLocR",o-1).concat("inIdx.r"),g=dP("sourceLocG",o-1).concat("inIdx.g"),y=dP("sourceLocB",o-1).concat("inIdx.b"),b=dP("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${h[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${h[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function FB(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=qf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new AB(o,n,null==r),u=[t];null!=r&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let h=FB(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function DB(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=null!=r?r.shape:t.shape,s=a[a.length-1],i=qf.computeOptimalWindowSize(s),o=new RB(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=DB(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function MB(e,t,n,r){let a=[n];if(qf.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Le().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=qf.computeOutAndReduceShapes(i.shape,a),u=va.sizeFromShape(l),d=rB({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);let h=FB(e,d,r);n.push(h);let p=rB({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return DB(e,t,r)}var OB={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=va.parseAxisParam(s,a.shape),o=qf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=cB({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qf.getInnerMostAxes(i.length,l.shape.length)),qf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=MB(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};var LB={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=va.parseAxisParam(s,a.shape),o=qf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=cB({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qf.getInnerMostAxes(i.length,l.shape.length)),qf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=MB(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},zB=qP({opSnippet:bP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),PB={kernelName:Ze,backendName:"webgl",kernelFunc:zB},BB=qP({opSnippet:bP+"return log(x + sqrt(x * x + 1.0));"}),WB={kernelName:Je,backendName:"webgl",kernelFunc:BB},VB=qP({opSnippet:bP+"\n  return atan(x);\n"}),UB={kernelName:Qe,backendName:"webgl",kernelFunc:VB},GB=KP({opSnippet:RP+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+DP+"\n  return result;\n"}),HB={kernelName:tt,backendName:"webgl",kernelFunc:GB},jB=qP({opSnippet:bP+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),qB={kernelName:et,backendName:"webgl",kernelFunc:jB},KB=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},XB=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}};var YB={kernelName:nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;hL(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;va.assert(qf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=qf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&va.arraysEqual(u.inShape,u.outShape))return OP({inputs:{x:a},backend:n});let d=new KB(u,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};var ZB={kernelName:at,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=qf.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new XB(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},JB=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},QB=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var eW={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=qf.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new QB(h);return n.runWebGLProgram(p,[a],i.dtype)}};var tW={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;hL([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=qf.computePool2DInfo(i.shape,o,l,1,u),h=new JB(d);return n.runWebGLProgram(h,[a],i.dtype)}};var nW={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return mB({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},rW=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],qf.assertAndGetBroadcastShape(e,t),qf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(qf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(qf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},aW=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qf.assertAndGetBroadcastShape(e,t),qf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(qf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(qf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},sW={kernelName:Qt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,mean:s,variance:i,offset:o,scale:l}=t;va.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),va.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),va.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=[a,s,i],h=null;null!=o&&(h=o.shape,d.push(o));let p=null;null!=l&&(p=l.shape,d.push(l));let c=Le().getBool("WEBGL_PACK_NORMALIZATION")?new aW(a.shape,s.shape,i.shape,h,p,u):new rW(a.shape,s.shape,i.shape,h,p,u);return n.runWebGLProgram(c,d,d[0].dtype)}},iW=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=$L(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return oW.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${oW[t]} = start[${t}] + coords.${oW[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},oW=["x","y","z","w","u","v"];var lW=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=$L(this.rank),n=dP("coords",this.rank),r=dP("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function uW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=wf.parseSliceParams(a,s,i);if(wf.assertParamsValid(a,o,l),0===va.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=Kz(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),d=wf.isSliceContinous(a.shape,o,l);if(u||!d){let e=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lW(l):new iW(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=wf.computeFlatOffset(t,va.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var dW={kernelName:vr,backendName:"webgl",kernelFunc:uW},hW={kernelName:ot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;va.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=qf.getReshaped(a.shape,s,o),u=qf.getPermuted(l.length,s.length),d=qf.getReshapedPermuted(a.shape,s,o),h=qf.getSliceBeginCoords(i,s.length),p=qf.getSliceSize(d,i,s.length),c=[],f=rB({inputs:{x:a},backend:n,attrs:{shape:l}}),m=cB({inputs:{x:f},backend:n,attrs:{perm:u}}),g=rB({inputs:{x:m},backend:n,attrs:{shape:d}}),y=uW({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var pW={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=mz(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var cW={kernelName:ut,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Le().getNumber("WEBGL_VERSION");if(r.shouldExecuteOnCPU([a,s])||1===o){let e=r.texData.get(a.dataId).values,t=r.texData.get(s.dataId).values,[n,i]=yz(a.shape,s.shape,e,t,a.dtype),o=r.makeTensorInfo(i,a.dtype);return r.texData.get(o.dataId).values=n,o}return t=i?new MP("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,s.shape,!1):new FP("\n  return float(int(a.r) & int(b.r));\n",a.shape,s.shape),r.runWebGLProgram(t,[a,s],a.dtype)}};var fW={kernelName:ht,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=qf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},mW=KP({opSnippet:"return float(a != b);",cpuKernelImpl:zz,dtype:"bool"}),gW={kernelName:Wn,backendName:"webgl",kernelFunc:mW};function yW(e){let{inputs:t,backend:n}=e,{input:r}=t;return OP({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var bW={kernelName:rr,backendName:"webgl",kernelFunc:yW};var xW={kernelName:pt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return OP({inputs:{x:s},backend:r});let t=nd(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=zP({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=yW({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!va.hasEncodingLoss(s.dtype,i)){let e=OP({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([s])){let e=r.texData.get(s.dataId).values,[t,n,a]=bz(e,s.shape,s.dtype,i);return r.makeTensorInfo(t,n,a)}if("int32"===i)return function(e,t){let n=new yP(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",va.getTypedArrayFromDType("bool",1)),t=mW({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},vW="return ceil(x);",wW=qP({opSnippet:vW,packedOpSnippet:vW,cpuKernelImpl:xz}),kW={kernelName:ct,backendName:"webgl",kernelFunc:wW},IW=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},SW=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};var NW={kernelName:ft,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Le().getBool("WEBGL_PACK_CLIP")?new SW(s.shape):new IW(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}},TW=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function _W(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var CW={kernelName:gt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new TW(r.shape),i=[_W(r,a.complexTensorInfos.real),_W(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},EW=class{constructor(e){this.outputShape=[],this.outputShape=qf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},$W=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=qf.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=$L(r),s=dP("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),d=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){let e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${AW(i,l,e)}),\n            vec2(${AW(u,l,e)}));\n        }`}let p=o.length,c=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${AW(i,l,c)}),\n          vec2(${AW(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function AW(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function RW(e){let{inputs:t,backend:n}=e,{input:r}=t;return OP({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var FW={kernelName:on,backendName:"webgl",kernelFunc:RW};function DW(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>yW({inputs:{input:e},backend:n}))),a=e.map((e=>RW({inputs:{input:e},backend:n}))),s=DW(r,t,n),i=DW(a,t,n),o=zP({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=[-1,va.sizeFromShape(e.shape.slice(t))];return rB({inputs:{x:e},backend:n,attrs:{shape:r}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=qf.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=vz(s,i,r,o),u=qf.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}let s=e.filter((e=>va.sizeFromShape(e.shape)>0)),i=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new yP(e[0].shape,kP):new IP(e[0].shape,kP);return n.runWebGLProgram(t,e,r)}let o=Le().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let a=0;a<s.length;a+=o){let r=s.slice(a,a+o);e.push(DW(r,t,n))}let r=DW(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){let e=new $W(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,r)}let{tensors2D:l,outShape:u}=function(e,t,n){let r=qf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>rB({inputs:{x:e},attrs:{shape:[-1,va.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(s,t,n),d=new EW(l.map((e=>e.shape))),h=n.runWebGLProgram(d,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));let p=rB({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function MW(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=va.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));qf.assertParamsConsistent(i,s);let o=qf.computeOutShape(t.map((e=>e.shape)),s);if(0===va.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>va.sizeFromShape(e.shape)>0));return 1===l.length?OP({inputs:{x:l[0]},backend:n}):DW(l,s,n)}var OW={kernelName:yt,backendName:"webgl",kernelFunc:MW},LW=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}},zW=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},PW=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=OL(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(d+1)/2;m++){let t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(s%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){let e=s%2===0?va.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(s%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",c="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},BW=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=OL(this.outputShape.length);let{dataFormat:n}=t,r=cL(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function WW(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function VW(e){let t,{x:n,filter:r,convInfo:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=n.shape,h=s.texData.get(n.dataId),p=a.inChannels,c=d[0]*d[1]*d[2],f=a.outChannels,m="channelsLast"===a.dataFormat,g=!1,y=[];if(null!=o){let e=WW(o.shape,m);null!=e&&(o=rB({inputs:{x:o},backend:s,attrs:{shape:e}}),y.push(o))}if(null!=i){let e=WW(i.shape,m);null!=e&&(i=rB({inputs:{x:i},backend:s,attrs:{shape:e}}),y.push(i))}if((1!==c&&1!==f||!(p>1e3))&&h.isPacked&&m&&null!=h.texture&&d[2]%2!==0&&va.arraysEqual(h.shape.slice(-3),d.slice(-3))){let e=d[0]*d[1]*(d[2]+1),p={dataId:n.dataId,shape:[1,e,a.inChannels],dtype:n.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,va.assert(QO(h.shape,p.shape),(()=>`packed reshape ${h.shape} to ${p.shape} isn't free`));let f=rB({inputs:{x:r},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(f);let m=mB({a:p,b:f,backend:s,transposeA:false,transposeB:g,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l}),b=s.texData.get(m.dataId);va.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,b.shape=a.outShape,t=OP({inputs:{x:m},backend:s}),t.shape=a.outShape,y.push(m)}else{let e=a.outHeight*a.outWidth,d=rB({inputs:{x:n},backend:s,attrs:{shape:m?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),h=rB({inputs:{x:r},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}}),p=mB({a:m?d:h,b:m?h:d,transposeA:!m,transposeB:g,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});t=rB({inputs:{x:p},backend:s,attrs:{shape:a.outShape}}),y.push(d),y.push(h),y.push(p)}for(let b of y)s.disposeIntermediateTensorInfo(b);return t}function UW(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:c,dataFormat:f}=r,m="channelsLast"===f,g=u*d*h,y=c*p,b=[r.batchSize,g,y],x=[];if(null!=i){let e=WW(i.shape,m);null!=e&&(i=rB({inputs:{x:i},backend:a,attrs:{shape:e}}),x.push(i))}if(null!=s){let e=WW(s.shape,m);null!=e&&(s=rB({inputs:{x:s},backend:a,attrs:{shape:e}}),x.push(s))}let v=rB({inputs:{x:n},backend:a,attrs:{shape:[1,g,va.sizeFromShape(n.shape)/g]}});x.push(v);let w=new BW(b,r),k=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],I=a.runWebGLProgram(w,[t],"float32",k),S=rB({inputs:{x:I},backend:a,attrs:{shape:b}});x.push(I),x.push(S);let N=null!=s,T=null!=i,_="leakyrelu"===l,C=l?XP(l,!0):null,E=new YP(m?S.shape:v.shape,m?v.shape:S.shape,m?[r.batchSize,y,r.outChannels]:[r.batchSize,r.outChannels,y],!0,!1,N,C,T,_),$=m?[S,v]:[v,S];if(s&&$.push(s),T&&$.push(i),_){let e=a.makeTensorInfo([],"float32",va.createScalarValue(o,"float32"));$.push(e),x.push(e)}let A=a.runWebGLProgram(E,$,"float32"),R=rB({inputs:{x:A},backend:a,attrs:{shape:r.outShape}});x.push(A);for(let F of x)a.disposeIntermediateTensorInfo(F);return R}var GW={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}=a,p=qf.convertConv2DDataFormat(u),c=qf.computeConv2DInfo(s.shape,i.shape,o,d,l,h,!1,p);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===p&&Le().getBool("WEBGL_EXP_CONV")){let e=new PW(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(Le().getBool("WEBGL_CONV_IM2COL"))t=UW({x:s,filter:i,convInfo:c,backend:r});else{let e=new LW(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=VW({x:s,filter:i,convInfo:c,backend:r});let f=rB({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},HW=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},jW=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},qW=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},KW=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var XW={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,h=qf.convertConv2DDataFormat(l),p=qf.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),c=new HW(p);return n.runWebGLProgram(c,[a,s],"float32")}},YW=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=OL(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}};var ZW={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,h=qf.convertConv2DDataFormat(u),p=qf.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h);if(Le().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){let e=[[p.strideHeight,p.strideWidth]],t=new YW(p);return n.runWebGLProgram(t,[a,s],"float32",e)}{let e=new jW(p);return n.runWebGLProgram(e,[a,s],"float32")}}};var JW={kernelName:wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=qf.computeConv3DInfo(a.shape,s.shape,i,l,o),d=new zW(u);return n.runWebGLProgram(d,[a,s],"float32")}};var QW={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=qf.computeConv3DInfo(a.shape,l,i,1,o),d=new qW(u);return n.runWebGLProgram(d,[a,s],"float32")}};var eV,tV={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=qf.computeConv3DInfo(l,s.shape,o,1,i),d=new KW(u);return n.runWebGLProgram(d,[a,s],"float32")}},nV=qP({opSnippet:jP+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${DP}\n  return result;\n`}),rV={kernelName:St,backendName:"webgl",kernelFunc:nV},aV=qP({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),sV={kernelName:Nt,backendName:"webgl",kernelFunc:aV},iV=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,h]=n;this.outputShape=[u,d,h,l];let p="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=d>1?[""+(i-1)/(d-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},oV={kernelName:Ct,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new iV(a.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(eV||(eV={}));var lV=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===eV.Prod?"1.0":"0.0",i=n?s:`getX(${uV(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${$L(a)} coords = getOutputCoords();\n        int end = ${dV(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${dV(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${uV(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function uV(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function dV(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function hV(e,t,n,r,a,s){let i=t.shape.length,o=qf.getAxesPermutation([r],i),l=t;null!=o&&(l=cB({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=qf.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let d=l.shape[u],h=OP({inputs:{x:l},backend:n});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){let t=new lV(e,l.shape,!1,s),r=[[p]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(a){let t=new lV(e,l.shape,a,s),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=cB({inputs:{x:h},backend:n,attrs:{perm:qf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}var pV={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return hV(eV.Prod,a,n,s,i,o)}};var cV={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return hV(eV.Sum,a,n,s,i,o)}};var fV={kernelName:Et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=mz(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=gz(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},mV=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};var gV={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h=new mV("NHWC"===i?[o,l,u,d]:[o,d,l,u],s,i);return n.runWebGLProgram(h,[a],a.dtype)}},yV=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=OL(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},bV=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=OL(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d,p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<d;g++)p+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<d;g++)p+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){let e=2*g;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<d&&(i%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){let t=i%2===0?va.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(i%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var xV={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]),va.assert(qf.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let h,p=qf.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0);h=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new bV(p):new yV(p);let c=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}},vV=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},wV=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var kV={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,h=qf.computeConv2DInfo(a.shape,d,i,o,l,u,!0),p=new vV(h);return n.runWebGLProgram(p,[a,s],"float32")}};var IV={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,h=qf.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new wV(h);return n.runWebGLProgram(p,[a,s],"float32")}},SV=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};var NV={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=va.sizeFromShape(r.shape),i=rB({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new SV(s),l=n.runWebGLProgram(o,[i],i.dtype),u=rB({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},TV=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};var _V={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,d=qf.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),h=new TV(d);t=r.runWebGLProgram(h,[s,i],"float32");let p=rB({inputs:{x:t},backend:r,attrs:{shape:d.outShape}});return r.disposeIntermediateTensorInfo(t),p}};var CV={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=qf.decodeEinsumEquation(a,s.length);qf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=qf.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let e of d[m]){let t,{permutationIndices:r,expandDims:a}=qf.getEinsumPermutation(c,l[e]);qf.isIdentityPermutation(r)?t=s[e]:(t=cB({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);va.arraysEqual(t.shape,i)||(t=rB({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===p?p=t:(p=tB({inputs:{a:t,b:p},backend:n}),f.push(p))}m<h-1&&(u[m]>=0&&(p=hB({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},EV=qP({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),$V={kernelName:Wt,backendName:"webgl",kernelFunc:EV},AV={kernelName:Vt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MP("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new FP("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},RV=KP({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:wz}),FV={kernelName:Gt,backendName:"webgl",kernelFunc:RV},DV=qP({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${qf.ERF_P};\n  float a1 = ${qf.ERF_A1};\n  float a2 = ${qf.ERF_A2};\n  float a3 = ${qf.ERF_A3};\n  float a4 = ${qf.ERF_A4};\n  float a5 = ${qf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),MV={kernelName:Ut,backendName:"webgl",kernelFunc:DV},OV=qP({opSnippet:jP+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:kz,dtype:"float32"}),LV={kernelName:Ht,backendName:"webgl",kernelFunc:OV};function zV(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(va.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),rB({inputs:{x:s},backend:r,attrs:{shape:o}})}var PV={kernelName:jt,backendName:"webgl",kernelFunc:zV},BV="return exp(x) - 1.0;",WV=qP({opSnippet:BV,packedOpSnippet:BV,cpuKernelImpl:Iz}),VV={kernelName:qt,backendName:"webgl",kernelFunc:WV},UV=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function GV(e,t,n){let r=n.texData.get(e.dataId),a=va.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=rB({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new UV("real",o,t),u=new UV("imag",o,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),c=zP({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);let f=rB({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var HV={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return GV(r,!1,n)}},jV=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function qV(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||va.inferDtype(a),"string"===s){let e=va.getArrayFromDType(s,va.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new jV(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var KV,XV={kernelName:Xt,backendName:"webgl",kernelFunc:qV},YV=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},ZV={kernelName:Yt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:r}=t,a=n,s=new YV(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},JV="return floor(x);",QV=qP({opSnippet:JV,packedOpSnippet:JV,cpuKernelImpl:Sz}),eU={kernelName:Zt,backendName:"webgl",kernelFunc:QV},tU=KP({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),nU={kernelName:Jt,backendName:"webgl",kernelFunc:tU},rU=class{constructor(e){this.variableNames=["A"];let t=cL(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},aU=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=cL(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},sU={kernelName:na,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[u,l],h=[u,l,s];if(o||i){let e=Le().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==KV||e!==iU)&&(iU=e,KV=document.createElement("canvas").getContext("2d",{willReadFrequently:iU})),KV.canvas.width=l,KV.canvas.height=u,KV.drawImage(a,0,0,l,u),a=KV.canvas}let p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=aO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);let c=Le().getBool("WEBGL_PACK")?new aU(h):new rU(h),f=n.runWebGLProgram(c,[p],"int32");return n.disposeData(p.dataId),f}},iU=Le().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");var oU={kernelName:sa,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:h,dilations:p,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=qf.convertConv2DDataFormat(h),y=qf.computeConv2DInfo(s.shape,i.shape,u,p,d,c,!1,g),b=[],x=null!=o,v=null!=l,w="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=rB({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,h)),v&&e.push(t(l,h)),w){let t=r.makeTensorInfo([],"float32",va.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Le().getBool("WEBGL_EXP_CONV")){let e=f?XP(f,!0):null,n=new PW(y,x,e,v,w),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=r.runWebGLProgram(n,s,"float32",a)}else if(Le().getBool("WEBGL_CONV_IM2COL"))t=UW({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?XP(f,!1):null,n=new LW(y,x,e,v,w),a=k();t=r.runWebGLProgram(n,a,"float32")}else t=VW({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let I=rB({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),I}};var lU={kernelName:ia,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,f=[],m=d;null==m&&(m=[1,1]),va.assert(qf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=qf.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),b=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=p?XP(p,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===p;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",va.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new bV(y,w,x,k,I):new yV(y,w,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},uU=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=$L(n.length),s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};var dU={kernelName:tn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=va.sizeFromShape(r.shape),[l,u,d,h]=qf.prepareAndValidate(r,a),p=rB({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=rB({inputs:{x:r},backend:n,attrs:{shape:[va.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=Nz(e,t,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new uU(i,h,[u,d],r.shape),m=n.runWebGLProgram(f,[c,p],c.dtype),g=rB({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},hU=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=$L(this.rank),r=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function pU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=va.parseAxisParam(i,a.shape)[0];if(Le().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];va.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=qf.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=va.sizeFromShape(s.shape),h=[],p=rB({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=rB({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(p),r=Tz(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new hU(p.shape,f),g=n.runWebGLProgram(m,[p,c],p.dtype);h.push(g);let y=rB({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var cU={kernelName:en,backendName:"webgl",kernelFunc:pU},fU=KP({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:_z,dtype:"bool"}),mU={kernelName:nn,backendName:"webgl",kernelFunc:fU},gU=KP({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Cz}),yU={kernelName:rn,backendName:"webgl",kernelFunc:gU};var bU={kernelName:sn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return GV(r,!0,n)}},xU=qP({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),vU={kernelName:ln,backendName:"webgl",kernelFunc:xU},wU=qP({opSnippet:"return float(isinf(x));",dtype:"bool"}),kU={kernelName:un,backendName:"webgl",kernelFunc:wU},IU=qP({opSnippet:"return float(isnan(x));",dtype:"bool"}),SU={kernelName:dn,backendName:"webgl",kernelFunc:IU},NU=KP({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Ez,dtype:"bool"}),TU={kernelName:pn,backendName:"webgl",kernelFunc:NU},_U=KP({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$z,dtype:"bool"}),CU={kernelName:cn,backendName:"webgl",kernelFunc:_U};var EU={kernelName:fn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Az(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},$U=qP({opSnippet:jP+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Rz}),AU={kernelName:mn,backendName:"webgl",kernelFunc:$U},RU=qP({opSnippet:jP+"\n  return log(1.0 + x);\n"}),FU={kernelName:gn,backendName:"webgl",kernelFunc:RU},DU=KP({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),MU={kernelName:yn,backendName:"webgl",kernelFunc:DU},OU=qP({opSnippet:"return float(!(x >= 1.0));"}),LU={kernelName:bn,backendName:"webgl",kernelFunc:OU},zU=KP({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),PU={kernelName:xn,backendName:"webgl",kernelFunc:zU},BU=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},WU=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},VU={kernelName:In,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Le().getBool("WEBGL_PACK_NORMALIZATION")?new WU(a.shape,s,i,o,l):new BU(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},UU=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},GU={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,h=new UU(a.shape,o,l,u,d);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function HU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=va.parseAxisParam(s,a.shape),u=l,d=qf.getAxesPermutation(u,o),h=null!=d,p=n.shouldExecuteOnCPU([a]),c=a;if(h){if(p){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[d[n]];let r=oP(e,a.shape,a.dtype,d,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=dB(a,d,n);u=qf.getInnerMostAxes(u.length,o)}qf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=qf.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=qf.expandShapeToKeepDim(m,l)),p){let e=n.texData.get(c.dataId).values,t=Fz(e,va.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=va.sizeFromShape(t),s=rB({inputs:{x:e},attrs:{shape:[va.sizeFromShape(e.shape)/a,a]},backend:r}),i=oB(s,e.dtype,"max",r),o=rB({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return h&&n.disposeIntermediateTensorInfo(c),f}var jU={kernelName:Tn,backendName:"webgl",kernelFunc:HU},qU=KP({opSnippet:RP+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+DP+"\n  return result;\n",cpuKernelImpl:Dz}),KU={kernelName:_n,backendName:"webgl",kernelFunc:qU};var XU={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;hL(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;va.assert(qf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=qf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&va.arraysEqual(u.inShape,u.outShape))return OP({inputs:{x:a},backend:n});let d=new KB(u,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};var YU={kernelName:$n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=qf.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new XB(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},ZU=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},JU=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var QU={kernelName:An,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=qf.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new XB(h,"max",!0),c=n.runWebGLProgram(p,[i],i.dtype),f=new JU(h),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var eG={kernelName:En,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;hL([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=qf.computePool2DInfo(o.shape,l,u,1,d,h),c=new KB(p,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new ZU(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var tG={kernelName:Rn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;va.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let d=[1,1];va.assert(qf.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let h=qf.computePool2DInfo(a.shape,s,i,d,o),[p,c]=function(e,t,n,r){let a=new KB(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new KB(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,l,h,u);return[p,c]}};var nG={kernelName:Fn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{keepDims:s,axis:i}=n,o=r,l=a.shape.length,u=va.parseAxisParam(i,a.shape),d=u,h=qf.getAxesPermutation(d,l),p=null!=h,c=o.shouldExecuteOnCPU([a]),f=[],m=a;if(p){if(c){let e=o.texData.get(m.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=a.shape[h[r]];let n=oP(e,a.shape,a.dtype,h,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=dB(a,h,o);f.push(m),d=qf.getInnerMostAxes(d.length,l)}qf.assertAxesAreInnerMostDims("sum",d,l);let[g,y]=qf.computeOutAndReduceShapes(m.shape,d),b=g;s&&(b=qf.expandShapeToKeepDim(g,u));let x=function(e,t,n,r){let a=va.sizeFromShape(t),s=rB({inputs:{x:e},attrs:{shape:[va.sizeFromShape(e.shape)/a,a]},backend:r}),i=oB(s,"float32","mean",r),o=rB({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,y,b,o);for(let v of f)o.disposeIntermediateTensorInfo(v);return x}};var rG={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=va.parseAxisParam(s,a.shape),u=l,d=qf.getAxesPermutation(u,o),h=a;null!=d&&(h=cB({inputs:{x:a},backend:n,attrs:{perm:d}}),u=qf.getInnerMostAxes(u.length,a.shape.length)),qf.assertAxesAreInnerMostDims("min",u,o);let p,[c,f]=qf.computeOutAndReduceShapes(h.shape,u),m=rB({inputs:{x:h},backend:n,attrs:{shape:[-1,va.sizeFromShape(f)]}}),g=oB(m,m.dtype,"min",n);if(i){p=rB({inputs:{x:g},backend:n,attrs:{shape:qf.expandShapeToKeepDim(c,l)}})}else p=rB({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},aG=KP({opSnippet:RP+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+DP+"\n  return result;\n",cpuKernelImpl:Mz}),sG={kernelName:Mn,backendName:"webgl",kernelFunc:aG},iG=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$L(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},oG=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$L(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=dP("rc",r),l=dP("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,p="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}},lG={kernelName:On,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r,o=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oG(a.shape,s,i):new iG(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype)}},uG=KP({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+DP+"\n  return result;\n"}),dG={kernelName:Ln,backendName:"webgl",kernelFunc:uG},hG=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},pG=KP({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),cG={kernelName:Pt,backendName:"webgl",kernelFunc:pG},fG="return a - b;",mG=KP({opSnippet:fG,packedOpSnippet:fG,supportsComplex:!0,cpuKernelImpl:aP}),gG={kernelName:Ur,backendName:"webgl",kernelFunc:mG};function yG(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=va.parseAxisParam([s],a.shape),o=HU({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=qf.expandShapeToKeepDim(o.shape,i),u=rB({inputs:{x:o},backend:n,attrs:{shape:l}}),d=mG({inputs:{a:a,b:u},backend:n}),h=OV({inputs:{x:d},backend:n}),p=hB({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=rB({inputs:{x:p},backend:n,attrs:{shape:l}}),f=pG({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),f}var bG={kernelName:$r,backendName:"webgl",kernelFunc:yG};var xG={kernelName:zn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:yG({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],d=l.shape[1],h=new hG(u,d,s),p=[[i]],c=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),c}},vG=bP+"\n  return -x;\n";var wG={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=Lz(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new IP(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new yP(a.shape,vG),r.runWebGLProgram(t,[a],a.dtype)}},kG=Qm.nonMaxSuppressionV3Impl;var IG={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){qf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=kG(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},SG=Qm.nonMaxSuppressionV4Impl;var NG={kernelName:Un,backendName:"webgl",kernelFunc:function(e){qf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:c}=SG(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},TG=Qm.nonMaxSuppressionV5Impl;var _G={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){qf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=TG(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},CG=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},EG={kernelName:jn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=va.sizeFromShape(a.shape),d=new CG(u,i,o,l),h=rB({inputs:{x:a},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],s);n.disposeIntermediateTensorInfo(h);let c=rB({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(p),c}};function $G(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=yW({inputs:{input:r},backend:n}),t=$G({inputs:{x:e},backend:n}),a=RW({inputs:{input:r},backend:n}),s=$G({inputs:{x:a},backend:n}),i=zP({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return qV({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var AG={kernelName:ea,backendName:"webgl",kernelFunc:$G};var RG={kernelName:Hn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=yW({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=RW({inputs:{input:a},backend:r}),i=$G({inputs:{x:s},backend:r}),o=zP({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return qV({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var FG={kernelName:qn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return zV({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{va.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),va.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=MW({inputs:t.map((e=>{let t=zV({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},DG=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$L(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},MG=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$L(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=dP("rc",r),l=dP("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=1===r?2:4;f<m;f++)c+=`\n        ${h[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},OG=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===va.sizeFromShape(a.shape)){return qV({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}let o=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MG(a.shape,s,i):new DG(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},LG={kernelName:Kn,backendName:"webgl",kernelFunc:OG},zG=KP({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+DP+"\n  return result;\n"}),PG={kernelName:Yn,backendName:"webgl",kernelFunc:zG};var BG={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],d=va.parseAxisParam(i,s.shape),h=d,p=qf.getAxesPermutation(h,l),c=s;if(null!=p&&(c=cB({inputs:{x:s},backend:r,attrs:{perm:p}}),h=qf.getInnerMostAxes(h.length,l),u.push(c)),qf.assertAxesAreInnerMostDims("prod",h,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=Pz(c.shape,c.dtype,e,h);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=qf.computeOutAndReduceShapes(c.shape,h),a=va.sizeFromShape(n),i=rB({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=oB(i,cs(s.dtype),"prod",r);t=rB({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=qf.expandShapeToKeepDim(t.shape,d);t=rB({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}};var WG={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.readSync(e.dataId))),u=a.map((e=>e.shape)),d=n.readSync(s.dataId),h=n.readSync(i.dataId),[p,c,f]=Bz(l,u,d,s.shape,s.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}};var VG={kernelName:er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Wz(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],r.dtype,d)]}};var UG={kernelName:tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),c=o.map((e=>e.shape)),[f,m]=Vz(u,a.shape,d,s.shape,s.dtype,h,i.shape,p,c,l);return n.makeTensorInfo(f,s.dtype,m)}},GG=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Uz(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},HG={kernelName:nr,backendName:"webgl",kernelFunc:GG},jG=qP({opSnippet:"return 1.0 / x;"}),qG={kernelName:ar,backendName:"webgl",kernelFunc:jG},KG=qP({opSnippet:bP+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),XG={kernelName:sr,backendName:"webgl",kernelFunc:KG},YG=qP({opSnippet:bP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ZG={kernelName:hr,backendName:"webgl",kernelFunc:YG},JG=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},QG=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]},\n          ${d[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};var eH={kernelName:ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new QG(a.shape,l,u,s,i):new JG(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],"float32")}},tH=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var nH={kernelName:dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new tH(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},rH=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},aH=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]},\n          ${d[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};var sH={kernelName:or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new aH(a.shape,l,u,s,i):new rH(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},iH=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var oH={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new iH(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},lH=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=$L(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}},uH=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=dP("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=$L(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};var dH={kernelName:pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=va.parseAxisParam(s,a.shape);if(0===i)return OP({inputs:{x:a},backend:n});let l=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uH(a.shape,o):new lH(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},hH=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},pH={kernelName:ra,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=new hH(a.shape,i),[d,h]=qf.getImageCenter(o,a.shape[1],a.shape[2]),p=[[d,h,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[a],a.dtype,p)}},cH=qP({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),fH={kernelName:cr,backendName:"webgl",kernelFunc:cH},mH=qP({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Gz}),gH={kernelName:fr,backendName:"webgl",kernelFunc:mH},yH=class{constructor(e,t,n,r,a,s){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=$L(a.length),l=$L(s.length),u="";1===n?u="i":2===n&&(u="i, j");let d=`getIndices(${u})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let p=`getUpdates(${h})`,c="";i&&(c="coords[0], coords[1]");let f=`getDefaultValue(${c})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}},bH=class{constructor(e,t,n,r,a,s){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let o=$L(a.length),l=$L(s.length),u="";1===n?u="i":2===n&&(u="i, j");let d=`getIndices(${u})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let p=`getUpdates(${h})`,c="";i&&(c="coords[0], coords[1]");let f=`getDefaultValue(${c})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}};var xH={kernelName:mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=qf.calculateShapes(s,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c,f=rB({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=rB({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));c=Le().getBool("WEBGL_PACK")?new bH(l,o,f.shape.length,m.shape.length,d,p):new yH(l,o,f.shape.length,m.shape.length,d,p);let y=n.runWebGLProgram(c,[m,f,g],m.dtype),b=rB({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}},vH=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Le().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};var wH={kernelName:yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new vH(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}},kH=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=$L(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};var IH={kernelName:br,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new kH(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ps(a.dtype,s.dtype))}},SH=qP({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${qf.SELU_SCALEALPHA};\n  float scale = ${qf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),NH={kernelName:xr,backendName:"webgl",kernelFunc:SH},TH=qP({opSnippet:jP+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jz}),_H={kernelName:Sr,backendName:"webgl",kernelFunc:TH},CH=qP({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),EH={kernelName:Ir,backendName:"webgl",kernelFunc:CH},$H=qP({opSnippet:jP+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${DP}\n  return result;\n`}),AH={kernelName:wr,backendName:"webgl",kernelFunc:$H},RH=qP({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),FH={kernelName:kr,backendName:"webgl",kernelFunc:RH},DH=qP({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),MH={kernelName:Nr,backendName:"webgl",kernelFunc:DH},OH={kernelName:Cr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;va.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],d=OG({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=qf.getReshaped(d.shape,s,o,!1),p=qf.getPermuted(h.length,s.length,!1),c=qf.getReshapedPermuted(d.shape,s,o,!1),f=rB({inputs:{x:d},backend:n,attrs:{shape:h}}),m=cB({inputs:{x:f},backend:n,attrs:{perm:p}}),g=rB({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var LH={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[h,p,c,f,m]=Xz(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var zH={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,h]=Yz(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var PH={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Zz(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}};var BH={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Zz(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}};var WH={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=qf.calculateShapes(s,a,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=va.decodeString(n.readSync(i.dataId)[0]),f=Hz(e,t,o,p,d,u,l,h,r,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new yH(u,l,a.shape.length,s.shape.length,h,[p,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=rB({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};var VH={kernelName:Er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=va.parseAxisParam(i,a.shape)[0],l=qf.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=uW({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},UH="return sqrt(x);",GH=qP({opSnippet:UH,packedOpSnippet:UH,cpuKernelImpl:Jz}),HH={kernelName:Tr,backendName:"webgl",kernelFunc:GH},jH=qP({opSnippet:"return x * x;"}),qH={kernelName:Lr,backendName:"webgl",kernelFunc:jH},KH="return (a - b) * (a - b);",XH=KP({opSnippet:KH,packedOpSnippet:KH}),YH={kernelName:Or,backendName:"webgl",kernelFunc:XH};var ZH={kernelName:zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=qf.fromUint8ToStringArray(s),o=Qz(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}};var JH={kernelName:ta,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,s=bP+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new yP(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}},QH=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=$L(n.length),s=$L(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};var ej={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=wf.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=rB({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){va.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=wf.computeOutShape(x,v,w),n=uW({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=rB({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=uo(s.shape,s.dtype,e),a=eP(f,n,w,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new QH(x,w,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=rB({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}};var tj={kernelName:Br,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[f,m]=tP(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var nj={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,h]=nP(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var rj={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=rP(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},aj=qP({opSnippet:"return tan(x);"}),sj={kernelName:Gr,backendName:"webgl",kernelFunc:aj},ij=qP({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),oj={kernelName:Hr,backendName:"webgl",kernelFunc:ij};var lj={kernelName:gr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=qf.calculateShapes(i,s,a.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(a.shape,s.dtype);let c=rB({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=rB({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=rB({inputs:{x:a},backend:n,attrs:{shape:p}}),g=new yH(l,o,c.shape.length,f.shape.length,d,p,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),b=rB({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}},uj=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=$L(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function dj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>va.decodeString(e))):e,r=uo(a.shape,a.dtype,t),i=sP(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new uj(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var hj={kernelName:jr,backendName:"webgl",kernelFunc:dj},pj=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},cj=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function fj(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function mj(e){let t=1;for(;t<e;)t*=2;return t}var gj={kernelName:qr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Le().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Le().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([a])||d<o||s>l){let e=n.readSync(a.dataId),[t,r]=iP(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[a,qV({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,c=p?n.unpackTensor(a):a,f=va.sizeFromShape(u)/d,m=rB({inputs:{x:c},attrs:{shape:[f,d]},backend:n});p&&fj(n,c);let g=mj(s),y=mj(d),b=null,x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{let a=x(),s=new pj(r),i=[[d],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),fj(n,o)};for(let N=1;N<g;N*=2){let e=2*N;for(let t=N;t>=1;t/=2)v(e,t,[f,y])}for(let N=y;N>g;N/=2){let e=x(),t=new cj([f,N/2]),r=[[d],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(t,e,"int32",r),fj(n,a);let s=g/2,i=2*s;for(let n=s;n>=1;n/=2)v(i,n,b.shape)}let w=b;b=uW({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),fj(n,w);let k=pU({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});fj(n,m);let I=u.slice(0,-1);I.push(s),w=b,b=rB({inputs:{x:b},attrs:{shape:I},backend:n}),fj(n,w);let S=k;return k=rB({inputs:{x:k},attrs:{shape:I},backend:n}),fj(n,S),[k,b]}},yj=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};var bj={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=new yj(h,p,i,o,l,[d,f,m,c]);return n.runWebGLProgram(g,[a,s],"float32")}};var xj={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;hL(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=lP(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var vj={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==s&&(u[d++]=i.shape[m]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;let e=uW({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),t=rB({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},wj=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}};var kj,Ij,Sj,Nj={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,d=qf.getAxesPermutation([u],o),h=a;null!=d&&(h=cB({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(h),u=qf.getInnerMostAxes(1,o)[0]);let p=qf.segment_util.computeOutShape(h.shape,u,i),c=va.sizeFromShape([h.shape[u]]),f=rB({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=cs(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=qf.segment_util.segOpComputeOptimalWindowSize(o,s),d=new wj({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(d,[e,r],a);if(l.push(h),h.shape[1]===s)return h;let p=GG({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=dj({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(c),g(h,t,c,a,s)},y=rB({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}}),b=y;if(null!=d){l.push(y);let e=qf.getUndoAxesPermutation(d);b=cB({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Tj=[gB,bB,vB,kB,NB,CB,EB,$B,OB,LB,PB,WB,UB,HB,qB,YB,ZB,eW,tW,nW,sW,hW,pW,cW,fW,xW,kW,NW,PP,CW,OW,GW,XW,ZW,JW,QW,tV,rV,sV,oV,pV,cV,fV,gV,xV,kV,IV,NV,_V,CV,$V,AV,FV,MV,LV,PV,VV,HV,XV,ZV,eU,nU,sU,oU,lU,dU,cU,mU,yU,LP,bU,FW,vU,kU,SU,VP,TU,CU,EU,AU,FU,MU,LU,PU,VU,GU,jU,KU,XU,YU,QU,eG,tG,nG,rG,sG,lG,dG,xG,nB,wG,IG,NG,_G,gW,EG,RG,FG,LG,PG,HP,BG,WG,VG,UG,HG,bW,cG,qG,XG,ZG,aB,eH,nH,sH,oH,dH,pH,fH,gH,xH,wH,IH,NH,_H,EH,AH,FH,dW,bG,MH,OH,LH,zH,PH,BH,WH,VH,HH,qH,YH,ZH,JH,ej,tj,nj,rj,gG,pB,sj,oj,lj,hj,gj,bj,fB,xj,vj,Nj,AG];for(let S0 of Tj)fa(S0);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(kj||(kj={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(Ij||(Ij={}));var _j={kernelName:aa,backendName:"wasm",setupFunc:function(e){Sj=e.wasm.cwrap(aa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=Ij[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Dl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return Sj(p,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,h||0,w),v}};function Cj(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===va.sizeFromShape(i.shape)||n(s,kj[a.dtype],o),i}}}var Ej=Cj(Ve),$j=Cj(Ue),Aj=Cj(Ge);function Rj(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,d=qf.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(d,u);if(0===va.sizeFromShape(d))return h;let p=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,p,s.shape.length,l,c,i.shape.length,kj[s.dtype],f),h}}}var Fj,Dj=Rj(He);var Mj={kernelName:je,backendName:"wasm",setupFunc:function(e){Fj=e.wasm.cwrap(je,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===va.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return Fj(s,a.length,kj[r.dtype],i),r}};function Oj(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return Vs(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var Lj,zj={kernelName:an,backendName:"wasm",kernelFunc:Oj};function Pj(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let e=-1;for(let t=0;t<r.length;++t)r[t]>=a&&(-1===e||r[e]>r[t])&&(e=t);r[e]=a}return[n,r]}(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=Oj({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return Lj(d,c,l.shape.length,kj[l.dtype],h,p,s.length),u}var Bj,Wj={kernelName:Xr,backendName:"wasm",kernelFunc:Pj,setupFunc:function(e){Lj=e.wasm.cwrap(Xr,null,["number","array","number","number","number","array","number"])}};function Vj(e,t,n){let r=e.shape,a=e.shape.length,s=va.parseAxisParam(t,r),i=s,o=qf.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=qf.getInnerMostAxes(i.length,a),l=Pj({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var Uj,Gj={kernelName:qe,backendName:"wasm",setupFunc:function(e){Bj=e.wasm.cwrap(qe,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Vj(i,a,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;qf.assertAxesAreInnerMostDims("all",d,c);let[f,m]=qf.computeOutAndReduceShapes(l.shape,d),g=va.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==va.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;Bj(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=qf.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var Hj={kernelName:Ke,backendName:"wasm",setupFunc:function(e){Uj=e.wasm.cwrap(Ke,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Vj(i,a,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;qf.assertAxesAreInnerMostDims("any",d,c);let[f,m]=qf.computeOutAndReduceShapes(l.shape,d),g=va.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==va.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;Uj(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=qf.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};function jj(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:n,inputs:r,attrs:a}=e,{axis:s}=a,{x:i}=r,o=n.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,inputWasTransposed:p}=Vj(i,s,n);if(p){let e=n.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let c=u.shape.slice(0,-1),f=n.makeOutput(c,"int32"),m=n.dataIdMap.get(f.dataId).id,g=va.sizeFromShape(f.shape),y=u.shape[h[0]];return t(l,kj[u.dtype],g,y,m),p&&n.disposeData(d.dataId),f}}}var qj,Kj=jj(Xe),Xj=jj(Ye),Yj=Cj(Ze),Zj=Cj(Je),Jj=Cj(Qe),Qj=Rj(tt),eq=Cj(et);var tq,nq={kernelName:nt,backendName:"wasm",setupFunc:function(e){qj=e.wasm.cwrap(nt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=qf.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,b=d.strideWidth,x=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let v=r.makeOutput(d.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return qj(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,b,x,w),v}};var rq,aq={kernelName:at,backendName:"wasm",setupFunc:function(e){tq=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=qf.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(d.outShape,a.dtype);return tq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}};var sq,iq={kernelName:st,backendName:"wasm",setupFunc:function(e){rq=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=qf.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return rq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),h}};var oq={kernelName:rt,backendName:"wasm",setupFunc:function(e){sq=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=qf.computePool2DInfo(s.shape,i,o,1,l),d=n.makeOutput(s.shape,s.dtype);return sq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),d}};function lq(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=va.sizeFromShape(r.shape),i=va.inferFromImplicitShape(a,s);return va.assert(s===va.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var uq,dq={kernelName:ir,backendName:"wasm",kernelFunc:lq};var hq={kernelName:it,backendName:"wasm",setupFunc:function(e){uq=e.wasm.cwrap(it,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=va.sizeFromShape(f),y=va.sizeFromShape(m),b=Dl.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);va.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,h]:[y,h,c],v=lq({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),w=lq({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),_=n.makeOutput([T,S,N],v.dtype),C=n.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return uq(k,E,v.shape.length,I,$,w.shape.length,i,o,C),n.disposeData(v.dataId),n.disposeData(w.dataId),_.shape=b,_}};function pq(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=wf.parseSliceParams(t,n,r),o=wf.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),d=va.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let e=wf.computeFlatOffset(s,d);return"string"===t.dtype?h.stringBytes=l.slice(e,e+va.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+va.sizeFromShape(i))),u}if("string"===t.dtype){let e=xA(l,s,i,t.shape,t.dtype);return h.stringBytes=e,u}let p=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let r=u*t+o;n.set(e.subarray(r,r+a[1]),s),s+=a[1]}}(l,d[0],p,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let p=o;p<d;p++)for(let a=l;a<h;a++){let o=p*t+a*n+u;r.set(e.subarray(o,o+s[2]),i),i+=s[2]}}(l,d[0],d[1],p,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],f=s[3];for(let m=l;m<h;m++)for(let s=u;s<p;s++)for(let l=d;l<c;l++){let u=m*t+s*n+l*r+f;a.set(e.subarray(u,u+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],p,s,i);else{let e=xA(l,s,i,t.shape,t.dtype);p.set(e)}return u}var cq={kernelName:vr,backendName:"wasm",kernelFunc:pq};var fq,mq={kernelName:ot,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=qf.getReshaped(a.shape,s,o),u=qf.getPermuted(l.length,s.length),d=qf.getReshapedPermuted(a.shape,s,o),h=qf.getSliceBeginCoords(i,s.length),p=qf.getSliceSize(d,i,s.length),c=lq({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Pj({inputs:{x:c},backend:n,attrs:{perm:u}}),m=lq({inputs:{x:f},backend:n,attrs:{shape:d}}),g=pq({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};var gq={kernelName:lt,backendName:"wasm",setupFunc:function(e){fq=e.wasm.cwrap(lt,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=0!==s.shape.reduce(((e,t)=>e*t),1),l=1===a.shape.length?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return fq(d(a),i,o,d(s),kj[s.dtype],d(u)),u}},yq=Rj(ut);var bq={kernelName:ht,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=qf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function xq(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var vq,wq={kernelName:pt,backendName:"wasm",kernelFunc:xq},kq=Cj(ct);var Iq={kernelName:ft,backendName:"wasm",setupFunc:function(e){vq=e.wasm.cwrap(ft,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return vq(o,s,i,u),l}};function Sq(e){let{inputs:t,backend:n}=e,r=va.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map((e=>e.shape));qf.assertParamsConsistent(a,r);let s=qf.computeOutShape(t.map((e=>e.shape)),r),i=t.filter((e=>va.sizeFromShape(e.shape)>0));if(1===i.length)return Oj({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===va.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map((e=>{let t=[-1,va.sizeFromShape(e.shape.slice(r))];return lq({inputs:{x:e},backend:n,attrs:{shape:t}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=qf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=QE(a,s,t[0].dtype,l),d=qf.computeOutShape(i.map((e=>e.shape)),r);return o.shape=d,n.dataIdMap.get(o.dataId).stringBytes=qf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),o}let l=va.sizeFromShape(i[0].shape.slice(0,r)),u=0,d=i.map((e=>{let t=va.sizeFromShape(e.shape.slice(r));return u+=t,t})),h=i.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let e=c*u;for(let t=0;t<h.length;t++){let n=d[t],r=c*n,a=h[t].subarray(r,r+n);p.set(a,e),e+=n}}return o}var Nq,Tq={kernelName:yt,backendName:"wasm",kernelFunc:Sq};var _q,Cq={kernelName:bt,backendName:"wasm",setupFunc:function(e){Nq=e.wasm.cwrap(bt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=qf.convertConv2DDataFormat(p),f=qf.computeConv2DInfo(a.shape,s.shape,l,u,d,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return Nq(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,_,w,k,I,S,N,T,E),C}};var Eq,$q={kernelName:vt,backendName:"wasm",setupFunc:function(e){_q=e.wasm.cwrap(vt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=qf.convertConv2DDataFormat(l),p=qf.computeConv2DInfo(d,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=p,S=f-1-p.padInfo.top,N=m-1-p.padInfo.left,T="channelsLast"===p.dataFormat,_=va.computeStrides(p.inShape),C=va.computeStrides(a.shape),[E,$,A]=va.computeStrides(s.shape),R=_[0],F=T?_[1]:_[2],D=T?_[2]:1,M=T?1:_[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(p.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return _q(V,U,c,f,m,y,b,g,v,w,x,k,I,S,N,E,$,A,R,F,D,M,O,L,z,P,W),B}};var Aq,Rq={kernelName:wt,backendName:"wasm",setupFunc:function(e){Eq=e.wasm.cwrap(wt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=qf.computeConv3DInfo(a.shape,s.shape,i,l,o),d=n.makeOutput(u.outShape,a.dtype);return Eq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}};var Fq,Dq={kernelName:kt,backendName:"wasm",setupFunc:function(e){Aq=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=qf.computeConv3DInfo(a.shape,l,i,1,o),d=n.makeOutput(u.filterShape,s.dtype);return Aq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}};var Mq,Oq,Lq={kernelName:It,backendName:"wasm",setupFunc:function(e){Fq=e.wasm.cwrap(It,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if("float32"!==a.dtype)throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=qf.computeConv3DInfo(l,s.shape,o,1,i),d=n.makeOutput(u.inShape,a.dtype);return Fq(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},zq=Cj(St),Pq=Cj(Nt);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Mq||(Mq={}));var Bq,Wq={kernelName:Ct,backendName:"wasm",setupFunc:function(e){Oq=e.wasm.cwrap(Ct,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:d}=r,h=u.shape[0],[p,c]=o,f=[h,p,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=xq({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(d.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return Oq(g,y,b,h,w,p,c,Mq[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var Vq,Uq={kernelName:Tt,backendName:"wasm",setupFunc:function(e){Bq=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;va.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=qf.getAxesPermutation([s],l),d=a;null!==u&&(d=Pj({inputs:{x:a},attrs:{perm:u},backend:n}));let h=qf.getInnerMostAxes(1,l)[0];qf.assertAxesAreInnerMostDims("cumprod",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;Bq(f,i?1:0,o?1:0,c,m,kj[a.dtype]);let g=p;if(null!==u){g=Pj({inputs:{x:p},attrs:{perm:qf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return g}};var Gq,Hq={kernelName:_t,backendName:"wasm",setupFunc:function(e){Vq=e.wasm.cwrap(_t,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;va.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=qf.getAxesPermutation([s],l),d=a;null!==u&&(d=Pj({inputs:{x:a},attrs:{perm:u},backend:n}));let h=qf.getInnerMostAxes(1,l)[0];qf.assertAxesAreInnerMostDims("cumsum",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;Vq(f,i?1:0,o?1:0,c,m,kj[a.dtype]);let g=p;if(null!==u){g=Pj({inputs:{x:p},attrs:{perm:qf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)}return g}};var jq,qq={kernelName:Et,backendName:"wasm",setupFunc:function(e){Gq=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=0!==s.shape.reduce(((e,t)=>e*t),1),u=1===a.shape.length?[i]:[a.shape[0],i],d=t.makeOutput(u,s.dtype);function h(e){return t.dataIdMap.get(e.dataId).id}return Gq(h(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,h(s),kj[s.dtype],o,h(d)),d}};var Kq,Xq={kernelName:$t,backendName:"wasm",setupFunc:function(e){jq=e.wasm.cwrap($t,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(h,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(va.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(va.computeStrides(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return jq(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),p}};var Yq,Zq={kernelName:At,backendName:"wasm",setupFunc:function(e){Kq=e.wasm.cwrap(At,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=null==u?[1,1]:u,c=qf.computeConv2DInfo(a.shape,s.shape,l,p,d,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(_.dataId).id;return Kq(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,C),_}};var Jq,Qq={kernelName:Dt,backendName:"wasm",setupFunc:function(e){Yq=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=va.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return Yq(n.dataIdMap.get(r.dataId).id,kj[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}};var eK,tK={kernelName:Mt,backendName:"wasm",setupFunc:function(e){Jq=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=qf.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),d=n.makeOutput(u.outShape,a.dtype);return Jq(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(d.dataId).id,kj[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}};var nK,rK={kernelName:Lt,backendName:"wasm",setupFunc:function(e){eK=e.wasm.cwrap(Lt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let d=qf.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(s.shape,s.dtype);return eK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,kj[a.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}};var aK,sK={kernelName:Ot,backendName:"wasm",setupFunc:function(e){nK=e.wasm.cwrap(Ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let d=qf.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),h=n.makeOutput(a.shape,a.dtype);return nK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,kj[a.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),h}},iK=Cj(Wt);var oK={kernelName:Vt,backendName:"wasm",setupFunc:function(e){aK=e.wasm.cwrap(Vt,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=e=>n.dataIdMap.get(e.dataId).id;return aK(i(a),i(r),i(s)),s}},lK=Rj(Gt,0,"bool"),uK=Cj(Ut),dK=Cj(Ht,"float32");function hK(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(va.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),lq({inputs:{x:a},backend:r,attrs:{shape:o}})}var pK={kernelName:jt,backendName:"wasm",kernelFunc:hK},cK=Cj(qt,"float32");function fK(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||va.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var mK,gK={kernelName:Xt,backendName:"wasm",kernelFunc:fK};var yK,bK={kernelName:Yt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return mK(s,o,l,u,d,i),a},setupFunc:function(e){mK=e.wasm.cwrap(Yt,null,["number","number","number","number","number","number"])}},xK=Cj(Zt),vK=Rj(Jt);var wK,kK={kernelName:Qt,backendName:"wasm",setupFunc:function(e){yK=e.wasm.cwrap(Qt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===va.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return yK(d,h,p,c,f,a,g),m}};var IK,SK={kernelName:sa,backendName:"wasm",setupFunc:function(e){wK=e.wasm.cwrap(sa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=qf.computeConv2DInfo(a.shape,s.shape,l,d,u,p),g=Ij[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return wK(y,F,D,M,b,w,k,v,I,S,N,T,R,_,C,E,$,A,x,g,z,f||0,L),O}};var NK,TK={kernelName:ia,backendName:"wasm",setupFunc:function(e){IK=e.wasm.cwrap(ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=qf.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!0),g=Ij[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return IK(y,F,D,M,b,w,k,v,I,S,N,T,R,_,C,E,$,A,x,g,z,f||0,L),O}};var _K,CK={kernelName:tn,backendName:"wasm",setupFunc:function(e){NK=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=xf.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return NK(p,kj[r.dtype],c,i,h,o,f,m),u}};var EK,$K={kernelName:en,backendName:"wasm",setupFunc:function(e){_K=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=va.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),d=a.shape[l];for(let I=0;I<u.length;++I){let e=u[I];va.assert(e<=d-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`))}let h=qf.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=lq({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=va.sizeFromShape(s.shape),f=lq({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===va.sizeFromShape(a.shape))return g;let y=p.shape.length-1,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(va.computeStrides(p.shape)).buffer),k=new Uint8Array(new Int32Array(va.computeStrides(m)).buffer);return _K(b,kj[a.dtype],w,y,x,h.batchSize,k,v),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},AK=Rj(nn,0,"bool"),RK=Rj(rn,0,"bool"),FK=Cj(ln,"bool"),DK=Cj(un,"bool"),MK=Cj(dn,"bool");var OK,LK={kernelName:hn,backendName:"wasm",setupFunc:function(e){EK=e.wasm.cwrap(hn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==va.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;EK(a,kj[t.dtype],n,e)}return s}},zK=Rj(pn,0,"bool"),PK=Rj(cn,0,"bool");var BK,WK={kernelName:fn,backendName:"wasm",setupFunc:function(e){OK=e.wasm.cwrap(fn,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return OK(n.dataIdMap.get(o.dataId).id,r,a,i),o}},VK=Cj(mn),UK=Cj(gn),GK=Rj(yn,0,"bool"),HK=Cj(bn),jK=Rj(xn,0,"bool"),qK=Rj(vn,0,"bool");var KK,XK={kernelName:In,backendName:"wasm",setupFunc:function(e){BK=e.wasm.cwrap(In,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if("float32"!==a.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return BK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}};var YK,ZK={kernelName:Sn,backendName:"wasm",setupFunc:function(e){KK=e.wasm.cwrap(Sn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;if("float32"!==a.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let h=n.makeOutput(a.shape,a.dtype);return KK(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(h.dataId).id,i.shape[3],o,l,u,d),h}};var JK,QK={kernelName:Tn,backendName:"wasm",setupFunc:function(e){YK=e.wasm.cwrap(Tn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Vj(i,a,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;qf.assertAxesAreInnerMostDims("max",d,c);let[f,m]=qf.computeOutAndReduceShapes(l.shape,d),g=va.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==va.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;YK(o,kj[i.dtype],g,e)}if(p&&t.disposeData(u.dataId),s){let e=qf.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},eX=Rj(_n);var tX,nX={kernelName:Cn,backendName:"wasm",setupFunc:function(e){JK=e.wasm.cwrap(Cn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;va.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=qf.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,b=d.dilationWidth,x=d.strideHeight,v=d.strideWidth,w=d.inChannels,k=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(d.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return JK(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,b,x,v,w,k,S),I}};var rX,aX={kernelName:$n,backendName:"wasm",setupFunc:function(e){tX=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=qf.computePool3DInfo(a.shape,s,i,1,o,l,u),h=n.makeOutput(d.outShape,a.dtype);return tX(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}};var sX,iX={kernelName:An,backendName:"wasm",setupFunc:function(e){rX=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=qf.computePool3DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return rX(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),h}};var oX,lX={kernelName:En,backendName:"wasm",setupFunc:function(e){sX=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,d=qf.computePool2DInfo(s.shape,i,o,1,l,u),h=n.makeOutput(s.shape,s.dtype);return sX(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),h}};var uX,dX={kernelName:Rn,backendName:"wasm",setupFunc:function(e){oX=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;va.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let u=[1,1];va.assert(qf.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let d=qf.computePool2DInfo(a.shape,s,i,[1,1],o),h=n.makeOutput(d.outShape,a.dtype),p=n.makeOutput(d.outShape,"int32");return oX(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(h.dataId).id,n.dataIdMap.get(p.dataId).id,kj[a.dtype],l,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),[h,p]}};var hX,pX={kernelName:Fn,backendName:"wasm",setupFunc:function(e){uX=e.wasm.cwrap(Fn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Vj(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=qf.getInnerMostAxes(f.length,u.shape.length))}qf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=qf.computeOutAndReduceShapes(u.shape,f),y=va.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=xq({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==va.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;uX(l,y,e)}if(c&&t.disposeData(d.dataId),s){let e=qf.expandShapeToKeepDim(x.shape,p);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var cX,fX,mX={kernelName:Dn,backendName:"wasm",setupFunc:function(e){hX=e.wasm.cwrap(Dn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Vj(i,a,t);if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;qf.assertAxesAreInnerMostDims("min",h,f);let[m,g]=qf.computeOutAndReduceShapes(u.shape,h),y=va.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==va.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;hX(l,kj[i.dtype],y,e)}if(c&&t.disposeData(d.dataId),s){let e=qf.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},gX=Rj(Mn);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(cX||(cX={}));var yX,bX={kernelName:On,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return fX(i,u,t.shape.length,kj[t.dtype],p,c,cX[a],l),o},setupFunc:function(e){fX=e.wasm.cwrap(On,null,["number","array","number","number","array","array","number","number"])}};function xX(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=va.sizeFromShape(n.shape)/o;return 0===va.sizeFromShape(s.shape)||yX(a,i,o,l),s}var vX,wX={kernelName:$r,backendName:"wasm",setupFunc:function(e){yX=e.wasm.cwrap($r,null,["number","number","number","number"])},kernelFunc:xX};var kX,IX={kernelName:zn,backendName:"wasm",setupFunc:function(e){vX=e.wasm.cwrap(zn,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if("float32"!==a.dtype)throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:xX({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,d]=l.shape,h=n.makeOutput([u,s],"int32");return vX(n.dataIdMap.get(l.dataId).id,u,d,s,i,n.dataIdMap.get(h.dataId).id),o||n.disposeData(l.dataId),h}},SX=Rj(Ln),NX=Rj(Pn),TX=Cj(Bn);function _X(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var CX,EX={kernelName:Vn,backendName:"wasm",setupFunc:function(e){kX=e.wasm.cwrap(Vn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=kX(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=_X(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",p)}};var $X,AX={kernelName:Un,backendName:"wasm",setupFunc:function(e){CX=e.wasm.cwrap(Un,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=CX(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=_X(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var RX,FX={kernelName:Gn,backendName:"wasm",setupFunc:function(e){$X=e.wasm.cwrap(Gn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=$X(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=_X(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},DX=Rj(Wn,0,"bool");var MX={kernelName:jn,backendName:"wasm",setupFunc:function(e){RX=e.wasm.cwrap(jn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),d=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(a.dataId).id;return RX(h,i,o,l,d),u}};var OX={kernelName:Hn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var LX,zX={kernelName:qn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return hK({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{va.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),va.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=Sq({inputs:t.map((e=>{let t=hK({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var PX,BX={kernelName:Kn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===va.sizeFromShape(t.shape))return fK({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return LX(i,u,t.shape.length,kj[t.dtype],p,c,a,l),o},setupFunc:function(e){LX=e.wasm.cwrap(Kn,null,["number","array","number","number","array","array","number","number"])}},WX=Rj(Yn);var VX,UX={kernelName:Zn,backendName:"wasm",setupFunc:function(e){PX=e.wasm.cwrap(Zn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=xq({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return PX(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),d}};var GX,HX={kernelName:Jn,backendName:"wasm",setupFunc:function(e){VX=e.wasm.cwrap(Jn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Vj(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=qf.getInnerMostAxes(f.length,u.shape.length))}qf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=qf.computeOutAndReduceShapes(u.shape,f),y=va.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==va.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;VX(l,y,kj[b.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=qf.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},jX={kernelName:nr,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=hA(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},qX=Rj(Pt),KX=Cj(ar),XX=Cj(sr),YX=Cj(hr);var ZX,JX={kernelName:ur,backendName:"wasm",setupFunc:function(e){GX=e.wasm.cwrap(ur,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,d]=l,[h,p,c,f]=s.shape,m=[h,u,d,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=xq({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===va.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return GX(y,h,p,c,f,u,d,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var QX,eY={kernelName:dr,backendName:"wasm",setupFunc:function(e){ZX=e.wasm.cwrap(dr,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{images:s,dy:i}=n,{alignCorners:o}=a,l=r.makeOutput(s.shape,"float32"),u=r.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=xq({backend:r,inputs:{x:s},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(t.dataId)),ZX(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&r.disposeData(t.dataId),l}};var tY,nY={kernelName:or,backendName:"wasm",setupFunc:function(e){QX=e.wasm.cwrap(or,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,h,p,c]=a.shape,f=[d,l,u,c],m=t.makeOutput(f,"float32");if(0===va.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=xq({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return QX(b,d,h,p,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}};var rY,aY={kernelName:lr,backendName:"wasm",setupFunc:function(e){tY=e.wasm.cwrap(lr,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{images:s,dy:i}=n,{alignCorners:o}=a,l=r.makeOutput(s.shape,"float32"),u=r.dataIdMap.get(s.dataId);return"float32"!==u.dtype&&(t=xq({backend:r,inputs:{x:s},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(t.dataId)),tY(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(s.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=t&&r.disposeData(t.dataId),l}};var sY,iY={kernelName:pr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=va.parseAxisParam(s,a.shape);if(0===a.shape.length)return Oj({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);rY(l,d,i.length,h,a.shape.length,u);let p=lq({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){rY=e.wasm.cwrap(pr,null,["number","array","number","array","number","number"])}};var oY,lY={kernelName:ra,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,f]=a.shape,[m,g]=qf.getImageCenter(o,p,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return sY(u,h,p,c,f,s,m,g,b,y.length,d),l},setupFunc:function(e){sY=e.wasm.cwrap(ra,null,["number","number","number","number","number","number","number","number","array","number","number"])}},uY=Cj(cr),dY=Cj(fr);var hY,pY={kernelName:mr,backendName:"wasm",setupFunc:function(e){oY=e.wasm.cwrap(mr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===va.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=zh.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return oY(c,f,kj[s.dtype],l,u,d,m,p,g),o}};var cY,fY={kernelName:yr,backendName:"wasm",setupFunc:function(e){hY=e.wasm.cwrap(yr,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return hY(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],kj[a.dtype],"left"===i,l(o)),o}};var mY,gY={kernelName:br,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,h=r.shape.length,p=a.shape.length,c=0===h||h>1||1===p?1:va.sizeFromShape(a.shape.slice(1));return cY(i,o,l,c,d),u},setupFunc:function(e){cY=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},yY=Cj(xr);var bY={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){mY=e.wasm.cwrap(Sr,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===va.sizeFromShape(a.shape)||mY(r,s),a}},xY=Cj(Ir),vY=Cj(wr),wY=Cj(kr),kY=Cj(Nr);var IY,SY={kernelName:Cr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=va.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=BX.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=qf.getReshaped(u.shape,s,o,!1),h=qf.getPermuted(d.length,s.length,!1),p=qf.getReshapedPermuted(u.shape,s,o,!1),c=lq({inputs:{x:u},backend:n,attrs:{shape:d}}),f=Pj({inputs:{x:c},backend:n,attrs:{perm:h}}),m=lq({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var NY,TY={kernelName:Ar,backendName:"wasm",setupFunc:function(e){IY=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],d=n.readSync(i.dataId)[0],h=[l+d,u],p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(h.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([d],"bool"),v=n.dataIdMap.get(x.dataId).id,w=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=IY(p,c,kj[s.dtype],l,d,u,f,g,b,v,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=qf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=qf.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=qf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),new Error(t);let _=m,C=y;return N!==h[0]&&(_=pq({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),C=pq({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[_,C,x,w]}};var _Y,CY={kernelName:Rr,backendName:"wasm",setupFunc:function(e){NY=e.wasm.cwrap(Rr,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=va.sizeFromShape(s.shape),h=t.makeOutput([u,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;NY(i,o,l,u,p,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=qf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=qf.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=qf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=qf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=qf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(y);return[h,c]}};function EY(e){_Y=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function $Y(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(qf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=a.shape.slice();d[0]=u;let h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;_Y(h,kj[a.dtype],a.shape[0],p,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=qf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=qf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=qf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=qf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}var AY={kernelName:Fr,backendName:"wasm",setupFunc:EY,kernelFunc:function(e){return $Y(e,!0)}};var RY,FY={kernelName:Dr,backendName:"wasm",setupFunc:EY,kernelFunc:function(e){return $Y(e,!1)}};var DY={kernelName:Mr,backendName:"wasm",setupFunc:function(e){RY=e.wasm.cwrap(Mr,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(0===va.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:d,sliceSize:h,strides:p,outputSize:c}=qf.calculateShapes(s,a,o),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(l.dataId).id;return RY(f,m,s.shape.length,g,kj[i.dtype],u,d,h,y,c,b),l}};var MY,OY={kernelName:Er,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=va.parseAxisParam(i,a.shape)[0],l=qf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let n=pq({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},LY=Cj(Tr),zY=Cj(Lr),PY=Rj(Or);var BY,WY={kernelName:ta,backendName:"wasm",setupFunc:function(e){MY=e.wasm.cwrap(ta,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return MY(i,a,kj[s.dtype],l),o}};var VY={kernelName:Pr,backendName:"wasm",setupFunc:function(e){BY=e.wasm.cwrap(Pr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=wf.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=lq({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){va.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=wf.computeOutShape(x,v,w),r=pq({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=lq({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(va.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array(va.computeStrides(f)).buffer),h=n.dataIdMap.get(e.dataId).id;BY(r,a,s.shape.length,i,o,l,u,d,f.length,h),t=lq({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}};var UY={kernelName:Br,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:h}=r,p=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=OA(p,c,i,o,l,u,d,h),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};var GY={kernelName:Wr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,d,h]=zA(o,l[0],i),p=d.length,c=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([p],"string");t.dataIdMap.get(f.dataId).stringBytes=d;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(h),[c,f,m]}};var HY,jY={kernelName:Vr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=PA(t.readSync(a.dataId),s),o=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},qY=Rj(Ur);var KY,XY={kernelName:_r,backendName:"wasm",setupFunc:function(e){HY=e.wasm.cwrap(_r,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Vj(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=qf.getInnerMostAxes(f.length,u.shape.length))}qf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=qf.computeOutAndReduceShapes(u.shape,f),y=va.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==va.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;HY(l,y,kj[b.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=qf.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},YY=Cj(Gr),ZY=Cj(Hr);var JY,QY={kernelName:gr,backendName:"wasm",setupFunc:function(e){KY=e.wasm.cwrap(gr,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(0===va.sizeFromShape(a.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=zh.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return KY(c,f,kj[i.dtype],l,u,d,g,p,y,m),o}};var eZ,tZ={kernelName:jr,backendName:"wasm",setupFunc:function(e){JY=e.wasm.cwrap(jr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let p=0;p<o.length;p++)o[p]=a.shape[p]*i[p];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return JY(s,l,a.shape.length,u,o.length,kj[d.dtype],h),d}};var nZ,rZ={kernelName:qr,backendName:"wasm",setupFunc:function(e){eZ=e.wasm.cwrap(qr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=s;let d=n.makeOutput(u,a.dtype),h=n.dataIdMap.get(d.dataId).id,p=n.makeOutput(u,"int32"),c=n.dataIdMap.get(p.dataId).id;return eZ(o,l,a.shape.length,kj[a.dtype],s,i,h,c),[d,p]}};var aZ={kernelName:Kr,backendName:"wasm",setupFunc:function(e){nZ=e.wasm.cwrap(Kr,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[h,p,c,f]=s.shape,[m,g]=null!=d?d:[p,c],y=[h,m,g,f],b=new Uint8Array(new Int32Array(va.computeStrides(s.shape)).buffer),x=new Uint8Array(new Int32Array(va.computeStrides(y)).buffer),v=n.makeOutput(y,s.dtype),w=n.dataIdMap.get(v.dataId).id,k=n.dataIdMap.get(s.dataId).id,I=n.dataIdMap.get(i.dataId).id,S="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return nZ(k,I,i.shape[0]>1,h,m,g,f,c,p,b,s.shape.length-1,x,y.length-1,S,t,u,w),v}};var sZ={kernelName:Yr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=KA(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}};var iZ={kernelName:Zr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let c=0;c<d.length;c++)h[s]=c,d[c]=pq({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:l}}))}};var oZ={kernelName:ea,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},lZ=[_j,Ej,$j,Aj,Dj,Mj,Gj,Hj,Kj,Xj,Yj,Zj,Jj,Qj,eq,nq,oq,aq,iq,hq,mq,gq,yq,bq,wq,kq,Iq,Tq,Cq,$q,Rq,Dq,Lq,zq,Pq,Wq,Uq,Hq,qq,Xq,Zq,Qq,tK,rK,sK,iK,oK,lK,uK,dK,pK,cK,gK,bK,xK,vK,kK,SK,TK,CK,$K,AK,RK,zj,FK,DK,MK,LK,zK,PK,WK,UK,VK,GK,HK,jK,qK,XK,ZK,QK,eX,nX,aX,iX,lX,dX,pX,mX,gX,bX,IX,SX,NX,TX,EX,AX,FX,DX,MX,OX,zX,BX,WX,UX,HX,jX,qX,KX,XX,YX,dq,JX,eY,nY,aY,iY,lY,uY,dY,pY,fY,gY,yY,bY,xY,vY,wY,cq,wX,kY,SY,TY,CY,AY,FY,DY,OY,LY,zY,PY,WY,VY,UY,GY,jY,qY,XY,YY,ZY,QY,tZ,rZ,aZ,Wj,sZ,iZ,oZ];for(let S0 of lZ)fa(S0);var uZ=Le();uZ.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(ss){return!1}})),uZ.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(uZ.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(ss){return!1}}));var dZ=m(D()),hZ=m(M()),pZ=m(O()),cZ=dZ.default||dZ,fZ=pZ.default||pZ,mZ=class extends z{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(TZ),_Z=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new L(this,Ys())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=va.now();return e(),{kernelMs:va.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=va.sizeFromShape(n),o=i*va.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||va.sizeFromShape(s);let o=va.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(null==n)a=this.write(null!=r?r:null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=va.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e,a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=va.sizeFromShape(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}};function gZ(e,t,n){if(null!=xZ)return xZ;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=wZ&&null!=wZ[r]?wZ[r]:n+r}async function yZ(){let[e,t]=await Promise.all([Le().getAsync("WASM_HAS_SIMD_SUPPORT"),Le().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=hZ.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?gZ(e,t,null!=vZ?vZ:r):r+n}};IZ&&(a.instantiateWasm=function(e){return(t,n)=>(va.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(gZ(e,t,null!=vZ?vZ:"")));let s,i=!1;a.onAbort=()=>{i||kZ||(kZ=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==xZ?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+cZ.toString()],{type:"text/javascript"}),s=cZ(a)):s=fZ(a),s.then((e=>{i=!0,kZ=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}var bZ=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],xZ=null,vZ=null,wZ={},kZ=!1,IZ=!1;function SZ(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Ks("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),kZ)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");xZ=e,IZ=t}function NZ(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(kZ)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)vZ=e;else{wZ=e;let t=bZ.filter((e=>null==wZ[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}IZ=t}var TZ=-1,_Z=-1;function CZ(e){TZ=e}function EZ(){if(-1===_Z)throw new Error("WASM backend not initialized.");return _Z}var $Z="4.21.0";ui("wasm",(async()=>{let{wasm:e}=await yZ();return new mZ(e)}),2);var AZ="4.21.0",RZ={tfjs:AZ,"tfjs-core":AZ,"tfjs-converter":"4.21.0","tfjs-backend-cpu":"4.21.0","tfjs-backend-webgl":"4.21.0","tfjs-backend-wasm":"4.21.0"};function FZ(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e.beginPath(),t.slice(1).forEach(((n,r)=>{let{x:a,y:s}=n,i=t[r];e.moveTo(i.x,i.y),e.lineTo(a,s)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}i({},{AnchorPosition:()=>vJ,DrawBox:()=>SJ,DrawBoxOptions:()=>IJ,DrawFaceLandmarks:()=>pQ,DrawFaceLandmarksOptions:()=>hQ,DrawTextField:()=>kJ,DrawTextFieldOptions:()=>wJ,drawContour:()=>FZ,drawDetections:()=>NJ,drawFaceExpressions:()=>lQ,drawFaceLandmarks:()=>cQ});i({},{computeReshapedDimensions:()=>GZ,getCenterPoint:()=>HZ,isDimensions:()=>UZ,isEven:()=>WZ,isFloat:()=>BZ,isTensor:()=>MZ,isTensor1D:()=>OZ,isTensor2D:()=>LZ,isTensor3D:()=>zZ,isTensor4D:()=>PZ,isValidNumber:()=>qZ,isValidProbablitiy:()=>KZ,range:()=>jZ,round:()=>VZ});var DZ=class e{constructor(e,t){if(!qZ(e)||!qZ(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new e(1/this.width,1/this.height)}};function MZ(e,t){return e instanceof ts&&e.shape.length===t}function OZ(e){return MZ(e,1)}function LZ(e){return MZ(e,2)}function zZ(e){return MZ(e,3)}function PZ(e){return MZ(e,4)}function BZ(e){return e%1!==0}function WZ(e){return e%2===0}function VZ(e){let t=10**(arguments.length>1&&void 0!==arguments[1]?arguments[1]:2);return Math.floor(e*t)/t}function UZ(e){return e&&e.width&&e.height}function GZ(e,t){let{width:n,height:r}=e,a=t/Math.max(r,n);return new DZ(Math.round(n*a),Math.round(r*a))}function HZ(e){return e.reduce(((e,t)=>e.add(t)),new XZ(0,0)).div(new XZ(e.length,e.length))}function jZ(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function qZ(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function KZ(e){return qZ(e)&&e>=0&&e<=1}var XZ=class e{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(t){return new e(this.x+t.x,this.y+t.y)}sub(t){return new e(this.x-t.x,this.y-t.y)}mul(t){return new e(this.x*t.x,this.y*t.y)}div(t){return new e(this.x/t.x,this.y/t.y)}abs(){return new e(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new e(Math.floor(this.x),Math.floor(this.y))}},YZ=class e{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(qZ)}static assertIsValidBox(t,n){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!e.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t){let n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=t||{},a=[r.left,r.top,r.right,r.bottom].every(qZ),s=[r.x,r.y,r.width,r.height].every(qZ);if(!s&&!a)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[i,o,l,u]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];e.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new XZ(this.left,this.top)}get topRight(){return new XZ(this.right,this.top)}get bottomLeft(){return new XZ(this.left,this.bottom)}get bottomRight(){return new XZ(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new e({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new e({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new e({x:t,y:n,width:r,height:a})}rescale(t){let n=UZ(t)?t.width:t,r=UZ(t)?t.height:t;return new e({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new e({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),u=s-o,d=i-l,h=Math.min(u,t-o),p=Math.min(d,n-l);return new e({x:o,y:l,width:h,height:p}).floor()}shift(t,n){let{width:r,height:a}=this,s=this.x+t,i=this.y+n;return new e({x:s,y:i,width:r,height:a})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(t){return new e({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},ZZ=class extends YZ{constructor(e,t,n,r){super({left:e,top:t,right:n,bottom:r},arguments.length>4&&void 0!==arguments[4]&&arguments[4])}},JZ=class e{constructor(e,t,n,r,a){this._imageDims=new DZ(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new YZ(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new YZ(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new e(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},QZ=class e extends JZ{constructor(e,t,n){super(e,e,"",t,n)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new e(r,a,s)}};function eJ(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function tJ(e,t){return Qs((()=>{let[n,r,a]=t,s=pl([...e.shape.slice(0,3),1],n,"float32"),i=pl([...e.shape.slice(0,3),1],r,"float32"),o=pl([...e.shape.slice(0,3),1],a,"float32"),l=Xo([s,i,o],3);return Wu(e,l)}))}function nJ(e){return 1/(1+Math.exp(-e))}var rJ,aJ=class extends YZ{constructor(e,t,n,r){super({x:e,y:t,width:n,height:r},arguments.length>4&&void 0!==arguments[4]&&arguments[4])}},sJ=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new XZ(0,0),{width:r,height:a}=t;this._imgDims=new DZ(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new XZ(r,a)).add(n)))}get shift(){return new XZ(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new XZ(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new XZ(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e){let n=e instanceof QZ?e.box.floor():new YZ(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=HZ(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new aJ(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=function(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new ZZ(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},iJ=class extends sJ{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(HZ)}};function oJ(e){return e.detection instanceof QZ}function lJ(e,t){return{...e,detection:t}}function uJ(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function dJ(){return"object"==typeof n.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function hJ(e){let t="";if(!e&&dJ())try{e=s("fs")}catch(n){t=n.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function pJ(){let e=n.g.Canvas||n.g.HTMLCanvasElement,t=n.g.Image||n.g.HTMLImageElement,r=n.g.Video||n.g.HTMLVideoElement,a=n.g.fetch,s=hJ();return{Canvas:e||class{},CanvasRenderingContext2D:n.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:n.g.ImageData||class{},Video:n.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(r)return new r;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:a,...s}}function cJ(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function fJ(e){rJ=e}function mJ(){return cJ()?fJ(uJ()):dJ()?fJ(pJ()):null}var gJ={getEnv:function(){if(!rJ)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return rJ},setEnv:fJ,initialize:mJ,createBrowserEnv:uJ,createFileSystem:hJ,createNodejsEnv:pJ,monkeyPatch:function(e){if(rJ||mJ(),!rJ)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=rJ.Canvas,Image:n=rJ.Image}=e;rJ.Canvas=t,rJ.Image=n,rJ.createCanvasElement=e.createCanvasElement||(()=>new t),rJ.createImageElement=e.createImageElement||(()=>new n),rJ.ImageData=e.ImageData||rJ.ImageData,rJ.Video=e.Video||rJ.Video,rJ.fetch=e.fetch||rJ.fetch,rJ.readFile=e.readFile||rJ.readFile},isBrowser:cJ,isNodejs:dJ};function yJ(e){return gJ.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function bJ(e){let{Canvas:t,CanvasRenderingContext2D:n}=gJ.getEnv();if(e instanceof n)return e;let r=yJ(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}mJ();var xJ,vJ=((xJ=vJ||{}).TOP_LEFT="TOP_LEFT",xJ.TOP_RIGHT="TOP_RIGHT",xJ.BOTTOM_LEFT="BOTTOM_LEFT",xJ.BOTTOM_RIGHT="BOTTOM_RIGHT",xJ),wJ=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},kJ=class e{constructor(t,n){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.text="string"==typeof t?[t]:t instanceof e?t.text:t,this.anchor=n,this.options=new wJ(r)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=yJ(e),n=bJ(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let d=this.getUpperLeft(n,t);n.fillRect(d.x,d.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+d.x,a=o+d.y+(t+1)*s;n.fillText(e,r,a)}))}},IJ=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new wJ({...s,...a})}},SJ=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.box=new YZ(e),this.options=new IJ(t)}draw(e){let t=bJ(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new kJ([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function NJ(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof QZ?t.score:oJ(t)?t.detection.score:void 0,r=t instanceof QZ?t.box:oJ(t)?t.detection.box:new YZ(t),a=n?`${VZ(n)}`:void 0;new SJ(r,{label:a}).draw(e)}))}function TJ(e){let{Image:t,Video:n}=gJ.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function _J(e){let{Image:t,Video:n}=gJ.getEnv();return e instanceof t?new DZ(e.naturalWidth,e.naturalHeight):e instanceof n?new DZ(e.videoWidth,e.videoHeight):new DZ(e.width,e.height)}function CJ(e){let{width:t,height:n}=e,{createCanvasElement:r}=gJ.getEnv(),a=r();return a.width=t,a.height=n,a}function EJ(e,t){let{ImageData:n}=gJ.getEnv();if(!(e instanceof n)&&!TJ(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||_J(e),s=CJ({width:r,height:a});return e instanceof n?bJ(s).putImageData(e,0,0):bJ(s).drawImage(e,0,0,r,a),s}function $J(e){let{Image:t,Canvas:n,Video:r}=gJ.getEnv();return e instanceof t||e instanceof n||e instanceof r}var AJ=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(zZ(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(PZ(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof gJ.getEnv().Canvas?e:EJ(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return jZ(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return GZ({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return this._inputSize=e,Qs((()=>{let n=jZ(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof ts){let n=PZ(r)?r:pu(r);return n=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Qs((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,pl(n,0,"float32")},l=o(s),u=a-l.shape[i],d=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>ho(e,"float32")));return Xo(d,i)}))}(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=bc.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof gJ.getEnv().Canvas)return uf.fromPixels(function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],{Image:r,Canvas:a}=gJ.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return CJ({width:1,height:1});let s=_J(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=CJ({width:t,height:t}),d=e instanceof a?e:EJ(e),h=Math.abs(o-l)/2,p=n&&o<l?h:0,c=n&&l<o?h:0;return d.width>0&&d.height>0&&bJ(u).drawImage(d,p,c,o,l),u}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return Ch(n.map((e=>ho(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function RJ(e){if(e instanceof AJ)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(yJ);return r.forEach(((e,r)=>{if(!$J(e)&&!zZ(e)&&!PZ(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(PZ(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>$J(e)&&function(e){return new Promise(((t,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}e instanceof gJ.getEnv().Canvas||TJ(e)?t(null):(e.addEventListener("load",a),e.addEventListener("error",r))}))}(e)))),new AJ(r,Array.isArray(e))}async function FJ(e,t){let{Canvas:n}=gJ.getEnv(),r=e;if(!(e instanceof n)){let t=await RJ(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await async function(e,t){let n=t||gJ.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(PZ(e)?1:0),i=Qs((()=>e.as3D(r,a,s).toInt()));return await uf.toPixels(i,n),i.dispose(),n}(a)}let a=bJ(r);return t.map((e=>e instanceof QZ?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((e=>{let{x:t,y:n,width:r,height:s}=e,i=CJ({width:r,height:s});return r>0&&s>0&&bJ(i).putImageData(a.getImageData(t,n,r,s),0,0),i}))}async function DJ(e,t){if(!zZ(e)&&!PZ(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(PZ(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return Qs((()=>{let[n,r,a]=e.shape.slice(PZ(e)?1:0);return t.map((e=>e instanceof QZ?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((t=>{let{x:s,y:i,width:o,height:l}=t;return bh(e.as3D(n,r,a),[i,s,0],[l,o,a])}))}))}async function MJ(e,t){let{fetch:n}=gJ.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}function OJ(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function LJ(e,t){let{manifestUri:n,modelBaseUri:r}=OJ(e,t),a=await async function(e){return(await MJ(e)).json()}(n);return Pc.loadWeights(a,r)}function zJ(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],{width:r,height:a}=n?_J(t):t;return e.width=r,e.height=a,{width:r,height:a}}var PJ=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((e=>{let{paramPath:t}=e;return{path:t,tensor:this.getParamFromPath(t)}}))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof rs))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof rs)))}variable(){this.getFrozenParams().forEach((e=>{let{path:t,tensor:n}=e;this.reassignParamFromPath(t,n.variable())}))}freeze(){this.getTrainableParams().forEach((e=>{let{path:t,tensor:n}=e,r=Vs(n.dataSync());n.dispose(),this.reassignParamFromPath(t,r)}))}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((e=>{let{tensor:t}=e;return Array.from(t.dataSync())})).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await LJ(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=gJ.getEnv(),{manifestUri:n,modelBaseUri:r}=OJ(e,this.getDefaultModelName()),a=Pc.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>"string"==typeof e?Buffer.from(e):e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof ts))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function BJ(e,t,n){return Qs((()=>{let r=hh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=fo(r,t.bias),r}))}function WJ(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qs((()=>{let r=th(n?fo(bl(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):BJ(e,t.conv0,[2,2])),a=BJ(r,t.conv1,[1,1]),s=BJ(th(fo(r,a)),t.conv2,[1,1]);return th(fo(r,fo(a,s)))}))}function VJ(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return Qs((()=>{let a=th(n?fo(bl(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):BJ(e,t.conv0,r?[2,2]:[1,1])),s=BJ(a,t.conv1,[1,1]),i=BJ(th(fo(a,s)),t.conv2,[1,1]),o=BJ(th(fo(a,fo(s,i))),t.conv3,[1,1]);return th(fo(a,fo(s,fo(i,o))))}))}function UJ(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"same",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return Qs((()=>{let a=fo(bl(e,t.filters,[1,1],n),t.bias);return r?th(a):a}))}function GJ(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function HJ(e,t){return(n,r,a,s)=>{let i=Mh(e(n*r*a*a),[a,a,n,r]),o=Rh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function jJ(e,t){return(n,r,a)=>{let s=Fh(e(n*r),[n,r]),i=Rh(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var qJ=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function KJ(e,t){return(n,r,a)=>{let s=Mh(e(9*n),[3,3,n,1]),i=Mh(e(n*r),[1,1,n,r]),o=Rh(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new qJ(s,i,o)}}function XJ(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new qJ(n,r,a)}}function YJ(e,t){return(n,r,a)=>{let s=e[n];if(!MZ(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function ZJ(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function JJ(e,t){let n=HJ(e,t),r=KJ(e,t);function a(e,t,a){return{conv0:arguments.length>3&&void 0!==arguments[3]&&arguments[3]?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function QJ(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function eQ(e,t){let n=YJ(e,t),r=QJ(n),a=XJ(n);return{extractDenseBlock3Params:function(e){return{conv0:arguments.length>1&&void 0!==arguments[1]&&arguments[1]?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e){return{conv0:arguments.length>1&&void 0!==arguments[1]&&arguments[1]?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var tQ=class extends PJ{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return Qs((()=>{let n=VJ(tJ(ho(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=VJ(n,t.dense1),n=VJ(n,t.dense2),n=VJ(n,t.dense3),n=qo(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await RJ(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=eQ(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return GJ(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ZJ(e),{extractDenseBlock4Params:a}=JJ(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function nQ(e,t){return Qs((()=>fo(Yo(e,t.weights),t.bias)))}function rQ(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var aQ=class extends PJ{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Qs((()=>{let n=e instanceof AJ?this.faceFeatureExtractor.forwardInput(e):e;return nQ(n.as2D(n.shape[0],-1),t.fc)}))}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=ZJ(e),i=jJ(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=rQ(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=YJ(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return GJ(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},sQ=["neutral","happy","sad","angry","fearful","disgusted","surprised"],iQ=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);sQ.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return sQ.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function oQ(e,t){return{...e,expressions:t}}function lQ(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,r=arguments.length>3?arguments[3]:void 0;(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof iQ?t:function(e){return e.expressions instanceof iQ}(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=oJ(t)?t.detection.box.bottomLeft:r||new XZ(0,0);new kJ(s.map((e=>`${e.expression} (${VZ(e.probability)})`)),i).draw(e)}))}function uQ(e){return oJ(e)&&e.landmarks instanceof sJ&&e.unshiftedLandmarks instanceof sJ&&e.alignedRect instanceof QZ}function dQ(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new QZ(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=e=>180*e/Math.PI,n=(e,t)=>Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2),r={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e.positions||68!==e.positions.length)return r;let a=e.positions;return r.roll=((e,n)=>{let r=Math.hypot(n.x-e.x,n.y-e.y),a=n.y-e.y,s=Math.asin(a/r),i=t(s);return Math.floor(90-i)*(n.x-e.x<0?-1:1)})(a[27],a[66]),r.pitch=((e,r,a)=>{let s=n(e,a),i=new XZ((e.x+a.x)/2,(e.y+a.y)/2),o=n(r,i),l=Math.atan(o/s);return Math.floor(t(l))*(i.y-r.y<0?-1:1)})(a[14],a[30],a[2]),r.yaw=(s=a[14],i=a[33],o=a[2],Math.floor(s.x-i.x)-Math.floor(i.x-o.x)),r;var s,i,o}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var hQ=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},pQ=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.faceLandmarks=e,this.options=new hQ(t)}draw(e){let t=bJ(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof iJ&&(t.strokeStyle=s,t.lineWidth=a,FZ(t,this.faceLandmarks.getJawOutline()),FZ(t,this.faceLandmarks.getLeftEyeBrow()),FZ(t,this.faceLandmarks.getRightEyeBrow()),FZ(t,this.faceLandmarks.getNose()),FZ(t,this.faceLandmarks.getLeftEye(),!0),FZ(t,this.faceLandmarks.getRightEye(),!0),FZ(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function cQ(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof sJ?t:uQ(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new pQ(n).draw(e)}))}function fQ(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=ZJ(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=HJ(e,t),r=KJ(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},d={};jZ(t,0,1).forEach((e=>{d[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:d,exit_flow:h}}}function mQ(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=YJ(e,t),r=QJ(n),a=XJ(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};jZ(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return GJ(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function gQ(e,t,n){return fo(bl(e,t.filters,n,"same"),t.bias)}function yQ(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2]?th(e):e;return n=BJ(n,t.separable_conv0,[1,1]),n=BJ(th(n),t.separable_conv1,[1,1]),n=Zu(n,[3,3],[2,2],"same"),n=fo(n,gQ(e,t.expansion_conv,[2,2])),n}var bQ=class extends PJ{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return Qs((()=>{let n=tJ(ho(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),r=th(gQ(n,t.entry_flow.conv_in,[2,2]));return r=yQ(r,t.entry_flow.reduction_block_0,!1),r=yQ(r,t.entry_flow.reduction_block_1),jZ(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=BJ(th(e),t.separable_conv0,[1,1]);return n=BJ(th(n),t.separable_conv1,[1,1]),n=BJ(th(n),t.separable_conv2,[1,1]),n=fo(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=yQ(r,t.exit_flow.reduction_block),r=th(BJ(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await RJ(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return mQ(e,this._numMainBlocks)}extractParams(e){return fQ(e,this._numMainBlocks)}};var xQ,vQ=((xQ=vQ||{}).FEMALE="female",xQ.MALE="male",xQ),wQ=class extends aQ{postProcess(e,t,n){let r=n.map((e=>{let{width:n,height:r}=e,a=t/Math.max(r,n);return{width:n*a,height:r*a}})),a=r.length;return Qs((()=>{let n=(e,t)=>Ch([pl([68],e,"float32"),pl([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(pl([a,136],t,"float32")).sub(Ch(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(Ch(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return Qs((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((e=>{let[t,n]=e;return{height:t,width:n}})))}))}async forward(e){return this.forwardInput(await RJ(e))}async detectLandmarks(e){let t=await RJ(e),n=Qs((()=>qh(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>WZ(t))),s=r.filter(((e,t)=>!WZ(t)));return new iJ(Array(68).fill(0).map(((e,t)=>new XZ(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},kQ=class extends wQ{constructor(){super("FaceLandmark68Net",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new tQ)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var IQ=class extends PJ{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Qs((()=>{let n=WJ(tJ(ho(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=WJ(n,t.dense1),n=WJ(n,t.dense2),n=qo(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await RJ(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=eQ(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return GJ(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ZJ(e),{extractDenseBlock3Params:a}=JJ(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function SQ(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"same",{filters:s,bias:i}=t.conv,o=bl(e,s,n,a);return o=fo(o,i),o=function(e,t){return fo(yo(e,t.weights),t.biases)}(o,t.scale),r?th(o):o}function NQ(e,t){return SQ(e,t,[1,1],!1)}function TQ(e,t){return SQ(e,t,[2,2],!0,"valid")}function _Q(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(BZ(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return Qs((()=>Qh(Mh(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=Rh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=Rh(e(n)),s=Rh(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a){return{conv1:r((arguments.length>4&&void 0!==arguments[4]&&arguments[4]?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function CQ(e,t){let n=YJ(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function EQ(e,t){let n=function(e,t){return SQ(e,t,[1,1],!0)}(e,t.conv1);return n=NQ(n,t.conv2),n=fo(n,e),n=th(n),n}function $Q(e,t){let n=TQ(e,t.conv1);n=NQ(n,t.conv2);let r=qo(e,2,2,"valid"),a=nd(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=nd(e);n=Xo([n,t],1);let r=[...n.shape];r[2]=1;let a=nd(r);n=Xo([n,a],2)}return r=s?Xo([r,a],3):r,n=fo(r,n),n=th(n),n}var AQ=class extends PJ{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return Qs((()=>{let n=TQ(tJ(ho(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Zu(n,3,2,"valid"),n=EQ(n,t.conv32_1),n=EQ(n,t.conv32_2),n=EQ(n,t.conv32_3),n=$Q(n,t.conv64_down),n=EQ(n,t.conv64_1),n=EQ(n,t.conv64_2),n=EQ(n,t.conv64_3),n=$Q(n,t.conv128_down),n=EQ(n,t.conv128_1),n=EQ(n,t.conv128_2),n=$Q(n,t.conv256_down),n=EQ(n,t.conv256_1),n=EQ(n,t.conv256_2),n=$Q(n,t.conv256_down_out);let r=n.mean([1,2]);return Yo(r,t.fc)}))}async forward(e){return this.forwardInput(await RJ(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await RJ(e),r=Qs((()=>qh(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=CQ(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),d=r("conv64_2"),h=r("conv64_3"),p=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!LZ(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:d,conv64_3:h,conv128_down:p,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return GJ(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=ZJ(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=_Q(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),d=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),p=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=Qs((()=>Qh(Fh(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:d,conv64_1:h,conv64_2:p,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function RQ(e,t){return{...e,descriptor:t}}function FQ(e,t){return{...e,age:t}}function DQ(e,t,n){return{...e,gender:t,genderProbability:n}}function MQ(e,t){function n(n,r,a,s,i){let o=Mh(e(n*r*a*a),[a,a,n,r]),l=Rh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=Mh(e(9*n),[3,3,n,1]),s=Rh(e(n)),i=Rh(e(n)),o=Rh(e(n)),l=Rh(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function OQ(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=YJ(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!zZ(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return GJ(e,t),{params:s,paramMappings:t}}function LQ(e,t,n){return Qs((()=>{let r=bl(e,t.filters,n,"same");return r=fo(r,t.batch_norm_offset),cl(r,0,6)}))}function zQ(e,t){return Qs((()=>{let n,r=LQ(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return Qs((()=>{let r=Al(e,t.filters,n,"same");return r=rl(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),cl(r,0,6)}))}(r,e.depthwise_conv,s),r=LQ(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function PQ(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),d=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),p=(i-a)*(o-s),c=(d-l)*(h-u);if(p<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,d),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(p+c-b)}function BQ(e,t){let{sizes:n,centers:r}=function(e){let t=qh(Qh(e,[1,0])),n=[Wu(t[2],t[0]),Wu(t[3],t[1])];return{sizes:n,centers:[fo(t[0],go(n[0],2)),fo(t[1],go(n[1],2))]}}(e),a=qh(Qh(t,[1,0])),s=go(yo(hu(go(a[2],5)),n[0]),2),i=fo(yo(go(a[0],10),n[0]),r[0]),o=go(yo(hu(go(a[3],5)),n[1]),2),l=fo(yo(go(a[1],10),n[1]),r[1]);return Qh(Ch([Wu(i,s),Wu(l,o),fo(i,s),fo(l,o)]),[1,0])}function WQ(e,t){return Qs((()=>{let n=e.shape[0];return{boxPredictionEncoding:jo(UJ(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:jo(UJ(e,t.class_predictor),[n,-1,3])}}))}var VQ=class{constructor(){let{minConfidence:e,maxResults:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},UQ=class extends PJ{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return Qs((()=>{let n=ho(e.toBatchTensor(512,!1),"float32"),r=zQ(Wu(go(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return Qs((()=>{let r=LQ(e,n.conv_0,[1,1]),a=LQ(r,n.conv_1,[2,2]),s=LQ(a,n.conv_2,[1,1]),i=LQ(s,n.conv_3,[2,2]),o=LQ(i,n.conv_4,[1,1]),l=LQ(o,n.conv_5,[2,2]),u=LQ(l,n.conv_6,[1,1]),d=LQ(u,n.conv_7,[2,2]),h=WQ(t,n.box_predictor_0),p=WQ(e,n.box_predictor_1),c=WQ(a,n.box_predictor_2),f=WQ(i,n.box_predictor_3),m=WQ(l,n.box_predictor_4),g=WQ(d,n.box_predictor_5);return{boxPredictions:Xo([h.boxPredictionEncoding,p.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:Xo([h.classPrediction,p.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return Qs((()=>{let r=e.shape[0],a=BQ(jo(fu(n.extra_dim,[r,1,1]),[-1,4]),jo(e,[-1,4]));a=jo(a,[r,a.shape[0]/r,4]);let s=Zo(Jo(t,[0,0,1],[-1,-1,-1])),i=Jo(s,[0,0,0],[-1,-1,1]);return i=jo(i,[r,i.shape[1]]),{boxes:qh(a),scores:qh(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await RJ(e))}async locateFaces(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{maxResults:n,minConfidence:r}=new VQ(t),a=await RJ(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let u=Array.from(l.dataSync()),d=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let r=u.length-1;r>=0;--r){let n=PQ(e,t.boxIndex,u[r]);if(0!==n&&(t.score*=l(n),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),h=a.getReshapedInputDimensions(0),p=a.inputSize,c=p/h.width,f=p/h.height,m=o.arraySync(),g=d.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new QZ(u[e],new aJ(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return OQ(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ZJ(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=MQ(n,t),i=a(),o=s(),l={extra_dim:Dh(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};var GQ=[new XZ(.738768,.874946),new XZ(2.42204,2.65704),new XZ(4.30971,7.04493),new XZ(10.246,4.59428),new XZ(12.6868,11.8741)],HQ=[new XZ(1.603231,2.094468),new XZ(6.041143,7.080126),new XZ(2.882459,3.518061),new XZ(4.266906,5.178857),new XZ(9.041765,10.66308)],jQ=[117.001,114.697,97.404],qQ=e=>"number"==typeof e;function KQ(e){return Qs((()=>{let t=yo(e,au(.10000000149011612));return fo(th(Wu(e,t)),t)}))}function XQ(e,t){return Qs((()=>{let n=md(e,[[0,0],[1,1],[1,1],[0,0]]);return n=bl(n,t.conv.filters,[1,1],"valid"),n=Wu(n,t.bn.sub),n=yo(n,t.bn.truediv),n=fo(n,t.conv.bias),KQ(n)}))}function YQ(e,t){return Qs((()=>{let n=md(e,[[0,0],[1,1],[1,1],[0,0]]);return n=hh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=fo(n,t.bias),KQ(n)}))}function ZQ(e,t){let n=HJ(e,t);let r=KJ(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=Rh(e(n)),s=Rh(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function JQ(e,t){let n=YJ(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:XJ(n)}}var QQ=class{constructor(){let{inputSize:e,scoreThreshold:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},e0=class e extends PJ{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!qQ(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>qQ(e.x)&&qQ(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(qQ)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=XQ(e,t.conv0);return n=Zu(n,[2,2],[2,2],"same"),n=XQ(n,t.conv1),n=Zu(n,[2,2],[2,2],"same"),n=XQ(n,t.conv2),n=Zu(n,[2,2],[2,2],"same"),n=XQ(n,t.conv3),n=Zu(n,[2,2],[2,2],"same"),n=XQ(n,t.conv4),n=Zu(n,[2,2],[2,2],"same"),n=XQ(n,t.conv5),n=Zu(n,[2,2],[1,1],"same"),n=XQ(n,t.conv6),n=XQ(n,t.conv7),UJ(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?KQ(UJ(e,t.conv0,"valid",!1)):YQ(e,t.conv0);return n=Zu(n,[2,2],[2,2],"same"),n=YQ(n,t.conv1),n=Zu(n,[2,2],[2,2],"same"),n=YQ(n,t.conv2),n=Zu(n,[2,2],[2,2],"same"),n=YQ(n,t.conv3),n=Zu(n,[2,2],[2,2],"same"),n=YQ(n,t.conv4),n=Zu(n,[2,2],[2,2],"same"),n=YQ(n,t.conv5),n=Zu(n,[2,2],[1,1],"same"),n=t.conv6?YQ(n,t.conv6):n,n=t.conv7?YQ(n,t.conv7):n,UJ(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return Qs((()=>{let r=ho(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?tJ(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await RJ(e),t)}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{inputSize:n,scoreThreshold:r}=new QQ(t),a=await RJ(e),s=await this.forwardInput(a,n),i=Qs((()=>qh(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),d=l.map((e=>e.score)),h=l.map((e=>e.classScore)),p=l.map((e=>this.config.classes[e.label]));return function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(eJ(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(u.map((e=>e.rescale(n))),d,this.config.iouThreshold,!0).map((e=>new JZ(d[e],h[e],p[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=JQ(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return GJ(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(t){let n=this.config.filterSizes||e.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(7!==r&&8!==r&&9!==r)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=ZJ(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:d}=ZQ(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,h,p,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):d(e,s,"conv0"),conv1:d(s,i,"conv1"),conv2:d(i,o,"conv2"),conv3:d(o,u,"conv3"),conv4:d(u,h,"conv4"),conv5:d(h,p,"conv5"),conv6:c?d(p,c,"conv6"):void 0,conv7:f?d(c,f,"conv7"):void 0,conv8:l(f||c||p,5*n,1,"conv8")}}else{let[e,t,s,i,o,d,h,p,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,d,"conv4"),conv5:u(d,h,"conv5"),conv6:u(h,p,"conv6"),conv7:u(p,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(t,this.config,this.boxEncodingSize,n)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[d,h,p]=Qs((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?vh(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):au(0)]})),c=[],f=await h.array(),m=await d.array();for(let g=0;g<l;g++)for(let e=0;e<l;e++)for(let t=0;t<u;t++){let r=nJ(f[g][e][t][0]);if(!n||r>n){let n=(e+nJ(m[g][e][t][0]))/l*i,a=(g+nJ(m[g][e][t][1]))/l*o,s=Math.exp(m[g][e][t][2])*this.config.anchors[t].x/l*i,u=Math.exp(m[g][e][t][3])*this.config.anchors[t].y/l*o,d=n-s/2,h=a-u/2,f={row:g,col:e,anchor:t},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(p,f):{classScore:1,label:0};c.push({box:new ZZ(d,h,d+s,h+u),score:r,classScore:r*y,label:b,...f})}}return d.dispose(),h.dispose(),p.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}};e0.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var t0=e0,n0=class extends t0{constructor(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:HQ,meanRgb:jQ}:{anchors:GQ,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new QZ(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var r0=class extends QQ{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},a0=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function s0(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:e=>{let{alignedRect:t}=e;return t},s=e.map((e=>uQ(e)?a(e):e.detection)),i=r||(t instanceof ts?await DJ(t,s):await FJ(t,s)),o=await n(i);return i.forEach((e=>e instanceof ts&&e.dispose())),o}var i0=[new XZ(1.603231,2.094468),new XZ(6.041143,7.080126),new XZ(2.882459,3.518061),new XZ(4.266906,5.178857),new XZ(9.041765,10.66308)],o0=[117.001,114.697,97.404],l0=class extends t0{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:i0,meanRgb:o0,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new QZ(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},u0={ssdMobilenetv1:new UQ,tinyFaceDetector:new l0,tinyYolov2:new n0,faceLandmark68Net:new kQ,faceLandmark68TinyNet:new class extends wQ{constructor(){super("FaceLandmark68TinyNet",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new IQ)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new AQ,faceExpressionNet:new class extends aQ{constructor(){super("FaceExpressionNet",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new tQ)}forwardInput(e){return Qs((()=>vh(this.runNet(e))))}async forward(e){return this.forwardInput(await RJ(e))}async predictExpressions(e){let t=await RJ(e),n=await this.forwardInput(t),r=await Promise.all(qh(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new iQ(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends PJ{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new bQ(2);super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Qs((()=>{let n=e instanceof AJ?this.faceFeatureExtractor.forwardInput(e):e,r=qo(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:nQ(r,t.fc.age).as1D(),gender:nQ(r,t.fc.gender)}}))}forwardInput(e){return Qs((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:vh(n)}}))}async forward(e){return this.forwardInput(await RJ(e))}async predictAgeAndGender(e){let t=await RJ(e),n=await this.forwardInput(t),r=qh(n.age),a=qh(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async e=>{let{ageTensor:t,genderTensor:n}=e,r=t.dataSync()[0],a=n.dataSync()[0],s=a>.5,i=s?"male":"female",o=s?a:1-a;return t.dispose(),n.dispose(),{age:r,gender:i,genderProbability:o}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=ZJ(e),a=jJ(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=rQ(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=YJ(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return GJ(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},d0=class extends a0{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},h0=class extends d0{async run(){let e=await this.parentTask,t=await s0(e,this.input,(async e=>Promise.all(e.map((e=>u0.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>oQ(e,t[n])))}withAgeAndGender(){return new f0(this,this.input)}},p0=class extends h0{withAgeAndGender(){return new m0(this,this.input)}withFaceDescriptors(){return new y0(this,this.input)}},c0=class extends a0{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},f0=class extends c0{async run(){let e=await this.parentTask,t=await s0(e,this.input,(async e=>Promise.all(e.map((e=>u0.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return FQ(DQ(e,a,s),r)}))}withFaceExpressions(){return new h0(this,this.input)}},m0=class extends f0{withFaceExpressions(){return new p0(this,this.input)}withFaceDescriptors(){return new y0(this,this.input)}},g0=class extends a0{constructor(e,t){super(),this.parentTask=e,this.input=t}},y0=class extends g0{async run(){let e=await this.parentTask;return(await s0(e,this.input,(e=>Promise.all(e.map((e=>u0.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>RQ(e[n],t)))}withFaceExpressions(){return new p0(this,this.input)}withAgeAndGender(){return new m0(this,this.input)}},b0=class extends a0{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?u0.faceLandmark68TinyNet:u0.faceLandmark68Net}},x0=class extends b0{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof ts?await DJ(this.input,t):await FJ(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof ts&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>dQ(e,r[t])))}withFaceExpressions(){return new p0(this,this.input)}withAgeAndGender(){return new m0(this,this.input)}withFaceDescriptors(){return new y0(this,this.input)}},v0=class extends a0{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new VQ;super(),this.input=e,this.options=t}},w0=class extends v0{async run(){let e,{input:t,options:n}=this;if(n instanceof r0)e=u0.tinyFaceDetector.locateFaces(t,n);else if(n instanceof VQ)e=u0.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof QQ))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=u0.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>lJ({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new x0(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new h0(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new f0(this.runAndExtendWithFaceDetections(),this.input)}};function k0(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new VQ;return new w0(e,t)}function I0(e,t){let{width:n,height:r}=new DZ(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>I0(e,{width:n,height:r})));if(uQ(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return dQ(lJ(e,t),a)}return oJ(e)?lJ(e,e.detection.forSize(n,r)):e instanceof sJ||e instanceof QZ?e.forSize(n,r):e}}}]);
//# sourceMappingURL=832.3e05bdf0.chunk.js.map